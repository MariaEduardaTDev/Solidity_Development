{
	"id": "fafaafbe9988d3c627bfd87927aa2db1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"TavsStable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.24;\r\n\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\nimport {AutomationCompatibleInterface} from \"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\";\r\n\r\ncontract TAVSStable is ERC20, AutomationCompatibleInterface {\r\n\r\n    AggregatorV3Interface public priceFeed;\r\n\r\n    uint256 public constant COLLATERAL_RATIO = 150; // colateral de 150%\r\n    uint256 public constant DATAFEED_PRICE_DECIMALS = 8; // preço em 8 casa decimais\r\n    uint256 public constant DECIMALS_FACTOR = 100; // valor em 2 casas decimais\r\n    \r\n    address public liquidationAddress;\r\n\r\n    // Posição do usuário\r\n    struct Position {\r\n        uint256 collateralETH; // quantos ETH depositou\r\n        uint256 stablecoinDebt; // a dívida em stablecoin, em 2 casas decimais \r\n    }\r\n    mapping(address => Position) public positions;\r\n    address[] public users; // lista de endereços de usuários que criram uma dívida\r\n    mapping(address => bool) private userExists;\r\n\r\n    event Deposit(address indexed user, uint256 ethAmount , uint256 mintAmount); // toda vez que um usuário deposita ETH e quanto emitido\r\n    event Burn(address indexed user, uint256 burnAmount, uint256 ethReturned); // devolução da stablecoin ou usuário liquidado\r\n    event Liquidated(address indexed user, uint256 collateralSeized); // na liquidação, quanto de colateral perdeu\r\n\r\n    constructor() ERC20(\"TAVS Stable\", \"TAVST\") {\r\n        /**\r\n        * Network: Ethereum Sepolia\r\n        * Aggregator: ETH/USD\r\n        * Other Data Feeds:\r\n        https://docs.chain.link/data-feeds/price-feeds/addresses\r\n        */\r\n        address _priceFeedAddress = 0x694AA1769357215DE4FAC081bf1f309aDC325306;\r\n        priceFeed = AggregatorV3Interface(_priceFeedAddress); // retorno do ETH, na liquidação do usuário, para a carteira do criador da stablecoin\r\n\r\n        address _liquidationAddress = msg.sender;\r\n        liquidationAddress = _liquidationAddress;\r\n    }\r\n\r\n    function decimals() public pure override returns (uint8) {\r\n        return 2;\r\n    }\r\n\r\n    function estimateMintAmount(uint256 ethAmount) public view returns (uint256) { // estima quantidade de stablecoin vai ser emitida com base na quantidade de ETH\r\n        uint256 ethPrice = getLatestPrice(); // obtem opreço mais atual do ETH\r\n        uint256 DECIMALS = 10 ** uint256(decimals());\r\n        uint256 ethValueInUSD = (ethAmount * ethPrice * DECIMALS) / 1e8 / 1e18; // converte a quantidade de ETH em USD\r\n        return ethValueInUSD * 100 / COLLATERAL_RATIO; // quantidade em USD que pode ser emitida em stablecoin\r\n    }\r\n\r\n    //Depositar ETH e mintar TAVST\r\n    function depositAndMint() external payable {\r\n        require(msg.value > 0, \"Must deposit ETH\");\r\n        \r\n        uint256 mintAmount = estimateMintAmount(msg.value); \r\n        _mint(msg.sender, mintAmount);\r\n\r\n        if (positions[msg.sender].collateralETH == 0){\r\n            if(!userExists[msg.sender]) {\r\n                users.push(msg.sender);\r\n                userExists[msg.sender] = true;\r\n            }\r\n        }\r\n\r\n        positions[msg.sender].collateralETH += msg.value; // acrescenta a quantidade em ETH\r\n        positions[msg.sender].stablecoinDebt += mintAmount; // emite a dívida do usuário\r\n        emit Deposit(msg.sender, msg.value, mintAmount); // emite o depósito\r\n    }\r\n\r\n    function estimateWithdrawETH(uint256 burnAmount) public view returns (uint256) {\r\n        require(burnAmount > 0, \"Amount must be greater than 0\");\r\n        uint256 ethPrice = getLatestPrice();\r\n\r\n        // Converter burnAmount (2 decimais) em USD inteiro (18 decimais)\r\n        uint256 burnUSD = (burnAmount * 1e18) / DECIMALS_FACTOR;\r\n\r\n        // Adiciona a proporção entre o colateral e o empréstimo de 150% (multiplica por 150 e divide por 100\r\n        uint256 collateralUSD = (burnUSD * COLLATERAL_RATIO) / 100;\r\n\r\n        // Converte o USD em ETH: ETH = (USD * 1e8) / priceFeed (com 8 casas decimais)\r\n        uint256 ethToReturn = (collateralUSD * 1e8) / ethPrice;\r\n        return ethToReturn;\r\n    }\r\n\r\n    // Queimar TAVST e saca o ETH correspondente \r\n    function burnAndWithdraw(uint256 burnAmount) external {\r\n        require(balanceOf(msg.sender) >= burnAmount, \"Insufficient TAVST\");\r\n\r\n        uint256 ethToReturn = estimateWithdrawETH(burnAmount);\r\n\r\n        // uint256 usdValue = (burnAMount * COLLATERAL_RATIO) / DECIMALS_FACTOR;\r\n        require(positions[msg.sender].collateralETH >= ethToReturn, \"Not enough collateral\");\r\n\r\n        positions[msg.sender].collateralETH -= ethToReturn;\r\n        positions[msg.sender].stablecoinDebt -= burnAmount;\r\n        _burn(msg.sender, burnAmount);\r\n\r\n        payable(msg.sender).transfer(ethToReturn);\r\n        emit Burn(msg.sender, burnAmount, ethToReturn); \r\n    }\r\n\r\n    // Oracle da Chainlink\r\n    function getLatestPrice() public view returns (uint256) {\r\n        (, int price,,,) = priceFeed.latestRoundData();\r\n        require(price > 0, \"Invalid price\");\r\n        return uint256(price); // em 8 casas decimais\r\n    }\r\n\r\n    // Obter o colateral do ususário em USD\r\n    function getUserCollateralUSD(address user) public view returns (uint256) {\r\n        uint256 ethPrice = getLatestPrice();\r\n        Position memory pos = positions[user];\r\n\r\n        uint256 DECIMALS = 10 ** uint256(decimals());\r\n        uint256 collateralUSD = (pos.collateralETH * ethPrice * DECIMALS) / 1e8 / 1e18;\r\n        return collateralUSD;\r\n    }\r\n\r\n    // Calcula a razão de garantia do usuário\r\n    function getCollateralRatio(address user) public view returns (uint256) {\r\n        Position memory pos = positions[user];\r\n        if (pos.stablecoinDebt == 0) return type(uint256).max;\r\n\r\n        uint256 collateralUSD = getUserCollateralUSD(user);\r\n\r\n        //uint256 collateralUSD = (pos.collateralETH * ethPrice) / 1e8;\r\n        //return (collateralUSD * DECIMALS_FACTOR) / pos.stablecoinDebt;\r\n        return collateralUSD / pos.stablecoinDebt;\r\n    }\r\n\r\n    // Automação Chainlink: Verifica usuários com colateral insuficiente\r\n    function checkUpkeep (bytes calldata) external view override returns (bool upkeepNeeded, bytes memory performData) {\r\n        for (uint256 i = 0; i < users.length; i++) {\r\n            address user = users[i];\r\n            if (getCollateralRatio(user) < COLLATERAL_RATIO) { // se a quantidade de colateral for menor do que 150%\r\n                upkeepNeeded = true; // usuário é liquidado\r\n                performData = abi.encode(user); // infomra o endereço do usuáro a ser liquidado\r\n                return (true, performData); \r\n            }\r\n        } // * \"for\" - utilizado somente para sistemas com poucos usuários*\r\n        return (false, bytes(\"\"));\r\n    }\r\n\r\n    // Liquidar usuário com colateral Insuficiente \r\n    function performUpkeep(bytes calldata performData) external override {\r\n        address user = abi.decode(performData, (address));\r\n        require(getCollateralRatio(user) < COLLATERAL_RATIO, \"User not liquidatable\");\r\n\r\n        // se o usuário for liquidado:\r\n        Position memory positionUser = positions[user]; // obtém a sua posição\r\n        _burn(user, positionUser.stablecoinDebt); // queima a sua dívida em stablecoin\r\n\r\n        uint256 collateralETH = positions[user].collateralETH; // obtém a quantidade de colateral e zera as posições\r\n        positions[user].collateralETH = 0;\r\n        positions[user].stablecoinDebt = 0;\r\n        payable(liquidationAddress).transfer(collateralETH); \r\n        emit Liquidated(user, collateralETH);\r\n    }\r\n\r\n    // Listar todos os usuários (para testes e debugging)\r\n    function getUsers() external view returns (address[] memory) {\r\n        return users;\r\n    }\r\n     \r\n     // Permite que o contrato receba ETH\r\n     receive() external payable {} // *Arrumar para que os ETH não fiquem perdidos no contrato*\r\n\r\n}\r\n\r\n"
			},
			"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {AutomationBase} from \"./AutomationBase.sol\";\nimport {AutomationCompatibleInterface} from \"./interfaces/AutomationCompatibleInterface.sol\";\n\nabstract contract AutomationCompatible is AutomationBase, AutomationCompatibleInterface {}\n"
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface AutomationCompatibleInterface {\n  /**\n   * @notice method that is simulated by the keepers to see if any work actually\n   * needs to be performed. This method does does not actually need to be\n   * executable, and since it is only ever simulated it can consume lots of gas.\n   * @dev To ensure that it is never called, you may want to add the\n   * cannotExecute modifier from KeeperBase to your implementation of this\n   * method.\n   * @param checkData specified in the upkeep registration so it is always the\n   * same for a registered upkeep. This can easily be broken down into specific\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\n   * same contract and easily differentiated by the contract.\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\n   * performUpkeep or not.\n   * @return performData bytes that the keeper should call performUpkeep with, if\n   * upkeep is needed. If you would like to encode data to decode later, try\n   * `abi.encode`.\n   */\n  function checkUpkeep(\n    bytes calldata checkData\n  ) external returns (bool upkeepNeeded, bytes memory performData);\n\n  /**\n   * @notice method that is actually executed by the keepers, via the registry.\n   * The data returned by the checkUpkeep simulation will be passed into\n   * this method to actually be executed.\n   * @dev The input to this method should not be trusted, and the caller of the\n   * method should not even be restricted to any single registry. Anyone should\n   * be able call it, and the input should be validated, there is no guarantee\n   * that the data passed in is the performData returned from checkUpkeep. This\n   * could happen due to malicious keepers, racing keepers, or simply a state\n   * change while the performUpkeep transaction is waiting for confirmation.\n   * Always validate the data passed in.\n   * @param performData is the data which was passed back from the checkData\n   * simulation. If it is encoded, it can easily be decoded into other types by\n   * calling `abi.decode`. This data should not be trusted, and should be\n   * validated against the contract's current state.\n   */\n  function performUpkeep(\n    bytes calldata performData\n  ) external;\n}\n"
			},
			"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract AutomationBase {\n  error OnlySimulatedBackend();\n\n  /**\n   * @notice method that allows it to be simulated via eth_call by checking that\n   * the sender is the zero address.\n   */\n  function _preventExecution() internal view {\n    // solhint-disable-next-line avoid-tx-origin\n    if (tx.origin != address(0) && tx.origin != address(0x1111111111111111111111111111111111111111)) {\n      revert OnlySimulatedBackend();\n    }\n  }\n\n  /**\n   * @notice modifier that allows it to be simulated via eth_call by checking\n   * that the sender is the zero address.\n   */\n  modifier cannotExecute() {\n    _preventExecution();\n    _;\n  }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol": {
				"AutomationBase": {
					"abi": [
						{
							"inputs": [],
							"name": "OnlySimulatedBackend",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":57:691  contract AutomationBase {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":57:691  contract AutomationBase {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207e0513569be21ce45c8bd4dd190898f69f066e3122734bc0b6ad4ab9aa423f4464736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50603e80601a5f395ff3fe60806040525f80fdfea26469706673582212207e0513569be21ce45c8bd4dd190898f69f066e3122734bc0b6ad4ab9aa423f4464736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0x513569BE21CE45C8BD4DD190898F69F066E3122734BC0B6AD4AB9AA423F44 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "57:634:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f80fdfea26469706673582212207e0513569be21ce45c8bd4dd190898f69f066e3122734bc0b6ad4ab9aa423f4464736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0x513569BE21CE45C8BD4DD190898F69F066E3122734BC0B6AD4AB9AA423F44 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "57:634:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "64",
								"totalCost": "12464"
							},
							"internal": {
								"_preventExecution()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 691,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 691,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 691,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 691,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 691,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 691,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 57,
									"end": 691,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 691,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 57,
									"end": 691,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 691,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 691,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 57,
									"end": 691,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 691,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57,
									"end": 691,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 691,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 691,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 691,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 691,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 691,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 691,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 691,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207e0513569be21ce45c8bd4dd190898f69f066e3122734bc0b6ad4ab9aa423f4464736f6c63430008180033",
									".code": [
										{
											"begin": 57,
											"end": 691,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 691,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 691,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol",
								"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol",
								"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"TavsStable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":\"AutomationBase\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c53c8736dacbf8c517c63937d556c3e4873a62f509c5d84b89e32fc5c9c6c2c\",\"dweb:/ipfs/QmeR6RSce5dTDcPgbwBnG7E8U89716bqsUcv1NeWnX5RJf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol": {
				"AutomationCompatible": {
					"abi": [
						{
							"inputs": [],
							"name": "OnlySimulatedBackend",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "checkData",
									"type": "bytes"
								}
							],
							"name": "checkUpkeep",
							"outputs": [
								{
									"internalType": "bool",
									"name": "upkeepNeeded",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"name": "performUpkeep",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"checkUpkeep(bytes)": {
								"details": "To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.",
								"params": {
									"checkData": "specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."
								},
								"returns": {
									"performData": "bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.",
									"upkeepNeeded": "boolean to indicate whether the keeper should call performUpkeep or not."
								}
							},
							"performUpkeep(bytes)": {
								"details": "The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.",
								"params": {
									"performData": "is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"checkUpkeep(bytes)": "6e04ff0d",
							"performUpkeep(bytes)": "4585e33b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":\"AutomationCompatible\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c53c8736dacbf8c517c63937d556c3e4873a62f509c5d84b89e32fc5c9c6c2c\",\"dweb:/ipfs/QmeR6RSce5dTDcPgbwBnG7E8U89716bqsUcv1NeWnX5RJf\"]},\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":{\"keccak256\":\"0xce623f3e7fa4addf240032d2817b2b489ac08e79fae14a5cc5850ed3f1acddf8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0546b2739f3989b897c5cb591d01211e2db22e1a8578f68117f1a8a692abd85c\",\"dweb:/ipfs/QmW6guw8uUk2Dq49PWdjeZeEvnDDRg3CVX2BVcVNcT6QNL\"]},\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xabb5a81f9380914fe192ba9e16aea6a948f8f949ad96052849207de2f40a2e3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://039c114331e7d1b2b8ebf2aebb730f67e9217508e75e442d980b3364e040321d\",\"dweb:/ipfs/QmV8rBwm6tpCLaXPmy3nYB11R9Eg5qatUKxQDau3sRKnfo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"checkUpkeep(bytes)": {
								"notice": "method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."
							},
							"performUpkeep(bytes)": {
								"notice": "method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."
							}
						},
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol": {
				"AutomationCompatibleInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "checkData",
									"type": "bytes"
								}
							],
							"name": "checkUpkeep",
							"outputs": [
								{
									"internalType": "bool",
									"name": "upkeepNeeded",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"name": "performUpkeep",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"checkUpkeep(bytes)": {
								"details": "To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.",
								"params": {
									"checkData": "specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."
								},
								"returns": {
									"performData": "bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.",
									"upkeepNeeded": "boolean to indicate whether the keeper should call performUpkeep or not."
								}
							},
							"performUpkeep(bytes)": {
								"details": "The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.",
								"params": {
									"performData": "is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"checkUpkeep(bytes)": "6e04ff0d",
							"performUpkeep(bytes)": "4585e33b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":\"AutomationCompatibleInterface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xabb5a81f9380914fe192ba9e16aea6a948f8f949ad96052849207de2f40a2e3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://039c114331e7d1b2b8ebf2aebb730f67e9217508e75e442d980b3364e040321d\",\"dweb:/ipfs/QmV8rBwm6tpCLaXPmy3nYB11R9Eg5qatUKxQDau3sRKnfo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"checkUpkeep(bytes)": {
								"notice": "method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."
							},
							"performUpkeep(bytes)": {
								"notice": "method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."
							}
						},
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 273,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 279,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 281,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 283,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 285,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TavsStable.sol": {
				"TAVSStable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "burnAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ethReturned",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ethAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "mintAmount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "collateralSeized",
									"type": "uint256"
								}
							],
							"name": "Liquidated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "COLLATERAL_RATIO",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DATAFEED_PRICE_DECIMALS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DECIMALS_FACTOR",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "burnAmount",
									"type": "uint256"
								}
							],
							"name": "burnAndWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "checkUpkeep",
							"outputs": [
								{
									"internalType": "bool",
									"name": "upkeepNeeded",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "depositAndMint",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ethAmount",
									"type": "uint256"
								}
							],
							"name": "estimateMintAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "burnAmount",
									"type": "uint256"
								}
							],
							"name": "estimateWithdrawETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getCollateralRatio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLatestPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserCollateralUSD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getUsers",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidationAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"name": "performUpkeep",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "collateralETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stablecoinDebt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "priceFeed",
							"outputs": [
								{
									"internalType": "contract AggregatorV3Interface",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "users",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"performUpkeep(bytes)": {
								"details": "The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.",
								"params": {
									"performData": "is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."
								}
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TavsStable.sol\":313:7963  contract TAVSStable is ERC20, AutomationCompatibleInterface {... */\n  mstore(0x40, 0x80)\n    /* \"TavsStable.sol\":1501:2078  constructor() ERC20(\"TAVS Stable\", \"TAVST\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  0x5441565320537461626c65000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x5441565354000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"TavsStable.sol\":1744:1769  address _priceFeedAddress */\n  0x00\n    /* \"TavsStable.sol\":1772:1814  0x694AA1769357215DE4FAC081bf1f309aDC325306 */\n  0x694aa1769357215de4fac081bf1f309adc325306\n    /* \"TavsStable.sol\":1744:1814  address _priceFeedAddress = 0x694AA1769357215DE4FAC081bf1f309aDC325306 */\n  swap1\n  pop\n    /* \"TavsStable.sol\":1859:1876  _priceFeedAddress */\n  dup1\n    /* \"TavsStable.sol\":1825:1834  priceFeed */\n  0x05\n  0x00\n    /* \"TavsStable.sol\":1825:1877  priceFeed = AggregatorV3Interface(_priceFeedAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"TavsStable.sol\":1979:2006  address _liquidationAddress */\n  0x00\n    /* \"TavsStable.sol\":2009:2019  msg.sender */\n  caller\n    /* \"TavsStable.sol\":1979:2019  address _liquidationAddress = msg.sender */\n  swap1\n  pop\n    /* \"TavsStable.sol\":2051:2070  _liquidationAddress */\n  dup1\n    /* \"TavsStable.sol\":2030:2048  liquidationAddress */\n  0x06\n  0x00\n    /* \"TavsStable.sol\":2030:2070  liquidationAddress = _liquidationAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"TavsStable.sol\":1545:2078  {... */\n  pop\n  pop\n    /* \"TavsStable.sol\":313:7963  contract TAVSStable is ERC20, AutomationCompatibleInterface {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:106   */\ntag_10:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_11:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_12:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_13:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_35:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_37\n  tag_12\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":714:798   */\ntag_36:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_14:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_15:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_16:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_17:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_42\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_16\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1429:1468   */\n  tag_43\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_16\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_18:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_19:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_20:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_47\n    /* \"#utility.yul\":1818:1852   */\n  tag_48\n    /* \"#utility.yul\":1827:1851   */\n  tag_49\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_18\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1818:1852   */\n  tag_19\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1800:1853   */\n  tag_18\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_21:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_22:\n    /* \"#utility.yul\":2056:2095   */\n  tag_52\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_20\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2117:2208   */\n  tag_53\n    /* \"#utility.yul\":2166:2207   */\n  tag_54\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_21\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_17\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_23:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_24:\n    /* \"#utility.yul\":2377:2409   */\n  tag_57\n  tag_23\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2418:2483   */\n  tag_58\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_22\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_25:\n    /* \"#utility.yul\":2555:2675   */\ntag_60:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_63\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_24\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_60)\ntag_62:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_26:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_66\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_14\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2906:2935   */\n  tag_67\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_15\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_68:\n    /* \"#utility.yul\":3133:3213   */\n  tag_69\n    /* \"#utility.yul\":3189:3211   */\n  tag_70\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_15\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_25\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_65:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_27:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_28:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_73\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_27\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_29:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_75\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_28\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_6:\n    /* \"#utility.yul\":3950:3987   */\n  tag_77\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_10\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_79\n  tag_11\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":4038:4094   */\ntag_78:\n    /* \"#utility.yul\":4118:4156   */\n  tag_80\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_13\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":4203:4270   */\n  tag_81\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_26\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_83\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_84:\n    /* \"#utility.yul\":5144:5211   */\n  tag_85\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_29\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_82)\n    /* \"#utility.yul\":4365:4983   */\ntag_83:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_86\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_14\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_87:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_87)\ntag_89:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_91\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_28\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_90:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_82:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"TavsStable.sol\":313:7963  contract TAVSStable is ERC20, AutomationCompatibleInterface {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"TavsStable.sol\":313:7963  contract TAVSStable is ERC20, AutomationCompatibleInterface {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xd9e69a05\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xd9e69a05\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xe36b72c6\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xe5c338ee\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0xa9059cbb\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xb5fbc7a0\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xb855fa5b\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0x70a08231\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x741bef1a\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x75b1475d\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x7c695cc1\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8e15f473\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x313ce567\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x55f57510\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x55f57510\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x663837db\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x6c09395e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x6e04ff0d\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x365b98b2\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4585e33b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0xce8e3e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x15a3ba43\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"TavsStable.sol\":7718:7810  function getUsers() external view returns (address[] memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TavsStable.sol\":5615:6071  function getCollateralRatio(address user) public view returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TavsStable.sol\":2086:2170  function decimals() public pure override returns (uint8) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TavsStable.sol\":970:992  address[] public users */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TavsStable.sol\":6888:7650  function performUpkeep(bytes calldata performData) external override {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n    tag_83:\n      stop\n        /* \"TavsStable.sol\":918:963  mapping(address => Position) public positions */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_91\n      swap3\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TavsStable.sol\":2756:3454  function depositAndMint() external payable {... */\n    tag_13:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      stop\n        /* \"TavsStable.sol\":677:710  address public liquidationAddress */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TavsStable.sol\":6156:6826  function checkUpkeep (bytes calldata) external view override returns (bool upkeepNeeded, bytes memory performData) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_103\n      swap3\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      pop\n      tag_106\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TavsStable.sol\":382:420  AggregatorV3Interface public priceFeed */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_113\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TavsStable.sol\":503:554  uint256 public constant DATAFEED_PRICE_DECIMALS = 8 */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      tag_116\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TavsStable.sol\":4233:4893  function burnAndWithdraw(uint256 burnAmount) external {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      tag_120\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_121\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_121:\n      tag_122\n      jump\t// in\n    tag_120:\n      stop\n        /* \"TavsStable.sol\":4929:5151  function getLatestPrice() public view returns (uint256) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      tag_124\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      tag_126\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_127\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_127:\n      pop\n      tag_128\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      tag_130\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n      pop\n      tag_132\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_133\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_133:\n      tag_134\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      tag_135\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TavsStable.sol\":2178:2712  function estimateMintAmount(uint256 ethAmount) public view returns (uint256) { // estima quantidade de stablecoin vai ser emitida com base na quantidade de ETH... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n      pop\n      tag_137\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_138\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_138:\n      tag_139\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      tag_140\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TavsStable.sol\":3462:4174  function estimateWithdrawETH(uint256 burnAmount) public view returns (uint256) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n      pop\n      tag_142\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_143\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_143:\n      tag_144\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      tag_145\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TavsStable.sol\":429:475  uint256 public constant COLLATERAL_RATIO = 150 */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_146\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_146:\n      pop\n      tag_147\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      tag_149\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_150\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_150:\n      pop\n      tag_151\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_152\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      tag_154\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      tag_155\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TavsStable.sol\":590:635  uint256 public constant DECIMALS_FACTOR = 100 */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_156\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_156:\n      pop\n      tag_157\n      tag_158\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      tag_159\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TavsStable.sol\":5205:5558  function getUserCollateralUSD(address user) public view returns (uint256) {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_160\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_160:\n      pop\n      tag_161\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_162\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_162:\n      tag_163\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      tag_164\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TavsStable.sol\":7718:7810  function getUsers() external view returns (address[] memory) {... */\n    tag_38:\n        /* \"TavsStable.sol\":7761:7777  address[] memory */\n      0x60\n        /* \"TavsStable.sol\":7797:7802  users */\n      0x08\n        /* \"TavsStable.sol\":7790:7802  return users */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_166\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_167:\n      dup2\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_167\n      jumpi\n    tag_166:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"TavsStable.sol\":7718:7810  function getUsers() external view returns (address[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_171\n      swap1\n      tag_170\n      jump\t// in\n    tag_171:\n      dup1\n      iszero\n      tag_172\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_173\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_172)\n    tag_173:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_174:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_174\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_172:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3975:3979  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3991:4004  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4017  _msgSender */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3991:4019  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4038:4043  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4045:4052  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4054:4059  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4037  _approve */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4077:4081  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4070:4081  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"TavsStable.sol\":5615:6071  function getCollateralRatio(address user) public view returns (uint256) {... */\n    tag_57:\n        /* \"TavsStable.sol\":5678:5685  uint256 */\n      0x00\n        /* \"TavsStable.sol\":5698:5717  Position memory pos */\n      dup1\n        /* \"TavsStable.sol\":5720:5729  positions */\n      0x07\n        /* \"TavsStable.sol\":5720:5735  positions[user] */\n      0x00\n        /* \"TavsStable.sol\":5730:5734  user */\n      dup5\n        /* \"TavsStable.sol\":5720:5735  positions[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"TavsStable.sol\":5698:5735  Position memory pos = positions[user] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"TavsStable.sol\":5772:5773  0 */\n      0x00\n        /* \"TavsStable.sol\":5750:5753  pos */\n      dup2\n        /* \"TavsStable.sol\":5750:5768  pos.stablecoinDebt */\n      0x20\n      add\n      mload\n        /* \"TavsStable.sol\":5750:5773  pos.stablecoinDebt == 0 */\n      sub\n        /* \"TavsStable.sol\":5746:5799  if (pos.stablecoinDebt == 0) return type(uint256).max */\n      tag_181\n      jumpi\n        /* \"TavsStable.sol\":5782:5799  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"TavsStable.sol\":5775:5799  return type(uint256).max */\n      swap2\n      pop\n      pop\n      jump(tag_180)\n        /* \"TavsStable.sol\":5746:5799  if (pos.stablecoinDebt == 0) return type(uint256).max */\n    tag_181:\n        /* \"TavsStable.sol\":5812:5833  uint256 collateralUSD */\n      0x00\n        /* \"TavsStable.sol\":5836:5862  getUserCollateralUSD(user) */\n      tag_182\n        /* \"TavsStable.sol\":5857:5861  user */\n      dup5\n        /* \"TavsStable.sol\":5836:5856  getUserCollateralUSD */\n      tag_163\n        /* \"TavsStable.sol\":5836:5862  getUserCollateralUSD(user) */\n      jump\t// in\n    tag_182:\n        /* \"TavsStable.sol\":5812:5862  uint256 collateralUSD = getUserCollateralUSD(user) */\n      swap1\n      pop\n        /* \"TavsStable.sol\":6045:6048  pos */\n      dup2\n        /* \"TavsStable.sol\":6045:6063  pos.stablecoinDebt */\n      0x20\n      add\n      mload\n        /* \"TavsStable.sol\":6029:6042  collateralUSD */\n      dup2\n        /* \"TavsStable.sol\":6029:6063  collateralUSD / pos.stablecoinDebt */\n      tag_183\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n        /* \"TavsStable.sol\":6022:6063  return collateralUSD / pos.stablecoinDebt */\n      swap3\n      pop\n      pop\n      pop\n        /* \"TavsStable.sol\":5615:6071  function getCollateralRatio(address user) public view returns (uint256) {... */\n    tag_180:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2855:2862  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2881:2893  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2874:2893  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4767:4771  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4783:4798  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4813  _msgSender() */\n      tag_187\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4811  _msgSender */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4813  _msgSender() */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4783:4813  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      tag_188\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4839:4843  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4845:4852  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4854:4859  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4838  _spendAllowance */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      tag_190\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4880:4884  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4886:4888  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4890:4895  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4879  _transfer */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4913:4917  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4906:4917  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TavsStable.sol\":2086:2170  function decimals() public pure override returns (uint8) {... */\n    tag_72:\n        /* \"TavsStable.sol\":2136:2141  uint8 */\n      0x00\n        /* \"TavsStable.sol\":2161:2162  2 */\n      0x02\n        /* \"TavsStable.sol\":2154:2162  return 2 */\n      swap1\n      pop\n        /* \"TavsStable.sol\":2086:2170  function decimals() public pure override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"TavsStable.sol\":970:992  address[] public users */\n    tag_79:\n      0x08\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_193\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_193:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"TavsStable.sol\":6888:7650  function performUpkeep(bytes calldata performData) external override {... */\n    tag_86:\n        /* \"TavsStable.sol\":6968:6980  address user */\n      0x00\n        /* \"TavsStable.sol\":6994:7005  performData */\n      dup3\n      dup3\n        /* \"TavsStable.sol\":6983:7017  abi.decode(performData, (address)) */\n      dup2\n      add\n      swap1\n      tag_196\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n        /* \"TavsStable.sol\":6968:7017  address user = abi.decode(performData, (address)) */\n      swap1\n      pop\n        /* \"TavsStable.sol\":472:475  150 */\n      0x96\n        /* \"TavsStable.sol\":7036:7060  getCollateralRatio(user) */\n      tag_198\n        /* \"TavsStable.sol\":7055:7059  user */\n      dup3\n        /* \"TavsStable.sol\":7036:7054  getCollateralRatio */\n      tag_57\n        /* \"TavsStable.sol\":7036:7060  getCollateralRatio(user) */\n      jump\t// in\n    tag_198:\n        /* \"TavsStable.sol\":7036:7079  getCollateralRatio(user) < COLLATERAL_RATIO */\n      lt\n        /* \"TavsStable.sol\":7028:7105  require(getCollateralRatio(user) < COLLATERAL_RATIO, \"User not liquidatable\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_199:\n        /* \"TavsStable.sol\":7159:7187  Position memory positionUser */\n      0x00\n        /* \"TavsStable.sol\":7190:7199  positions */\n      0x07\n        /* \"TavsStable.sol\":7190:7205  positions[user] */\n      0x00\n        /* \"TavsStable.sol\":7200:7204  user */\n      dup4\n        /* \"TavsStable.sol\":7190:7205  positions[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"TavsStable.sol\":7159:7205  Position memory positionUser = positions[user] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"TavsStable.sol\":7242:7282  _burn(user, positionUser.stablecoinDebt) */\n      tag_202\n        /* \"TavsStable.sol\":7248:7252  user */\n      dup3\n        /* \"TavsStable.sol\":7254:7266  positionUser */\n      dup3\n        /* \"TavsStable.sol\":7254:7281  positionUser.stablecoinDebt */\n      0x20\n      add\n      mload\n        /* \"TavsStable.sol\":7242:7247  _burn */\n      tag_203\n        /* \"TavsStable.sol\":7242:7282  _burn(user, positionUser.stablecoinDebt) */\n      jump\t// in\n    tag_202:\n        /* \"TavsStable.sol\":7333:7354  uint256 collateralETH */\n      0x00\n        /* \"TavsStable.sol\":7357:7366  positions */\n      0x07\n        /* \"TavsStable.sol\":7357:7372  positions[user] */\n      0x00\n        /* \"TavsStable.sol\":7367:7371  user */\n      dup5\n        /* \"TavsStable.sol\":7357:7372  positions[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"TavsStable.sol\":7357:7386  positions[user].collateralETH */\n      0x00\n      add\n      sload\n        /* \"TavsStable.sol\":7333:7386  uint256 collateralETH = positions[user].collateralETH */\n      swap1\n      pop\n        /* \"TavsStable.sol\":7486:7487  0 */\n      0x00\n        /* \"TavsStable.sol\":7454:7463  positions */\n      0x07\n        /* \"TavsStable.sol\":7454:7469  positions[user] */\n      0x00\n        /* \"TavsStable.sol\":7464:7468  user */\n      dup6\n        /* \"TavsStable.sol\":7454:7469  positions[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"TavsStable.sol\":7454:7483  positions[user].collateralETH */\n      0x00\n      add\n        /* \"TavsStable.sol\":7454:7487  positions[user].collateralETH = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"TavsStable.sol\":7531:7532  0 */\n      0x00\n        /* \"TavsStable.sol\":7498:7507  positions */\n      0x07\n        /* \"TavsStable.sol\":7498:7513  positions[user] */\n      0x00\n        /* \"TavsStable.sol\":7508:7512  user */\n      dup6\n        /* \"TavsStable.sol\":7498:7513  positions[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"TavsStable.sol\":7498:7528  positions[user].stablecoinDebt */\n      0x01\n      add\n        /* \"TavsStable.sol\":7498:7532  positions[user].stablecoinDebt = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"TavsStable.sol\":7551:7569  liquidationAddress */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TavsStable.sol\":7543:7579  payable(liquidationAddress).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TavsStable.sol\":7543:7594  payable(liquidationAddress).transfer(collateralETH) */\n      0x08fc\n        /* \"TavsStable.sol\":7580:7593  collateralETH */\n      dup3\n        /* \"TavsStable.sol\":7543:7594  payable(liquidationAddress).transfer(collateralETH) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_205\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_205:\n      pop\n        /* \"TavsStable.sol\":7622:7626  user */\n      dup3\n        /* \"TavsStable.sol\":7611:7642  Liquidated(user, collateralETH) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa5ee7a2b0254fce91deed604506790ed7fa072d0b14cba4859c3bc8955b9caac\n        /* \"TavsStable.sol\":7628:7641  collateralETH */\n      dup3\n        /* \"TavsStable.sol\":7611:7642  Liquidated(user, collateralETH) */\n      mload(0x40)\n      tag_206\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"TavsStable.sol\":6957:7650  {... */\n      pop\n      pop\n      pop\n        /* \"TavsStable.sol\":6888:7650  function performUpkeep(bytes calldata performData) external override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"TavsStable.sol\":918:963  mapping(address => Position) public positions */\n    tag_90:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"TavsStable.sol\":2756:3454  function depositAndMint() external payable {... */\n    tag_94:\n        /* \"TavsStable.sol\":2830:2831  0 */\n      0x00\n        /* \"TavsStable.sol\":2818:2827  msg.value */\n      callvalue\n        /* \"TavsStable.sol\":2818:2831  msg.value > 0 */\n      gt\n        /* \"TavsStable.sol\":2810:2852  require(msg.value > 0, \"Must deposit ETH\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_208:\n        /* \"TavsStable.sol\":2873:2891  uint256 mintAmount */\n      0x00\n        /* \"TavsStable.sol\":2894:2923  estimateMintAmount(msg.value) */\n      tag_211\n        /* \"TavsStable.sol\":2913:2922  msg.value */\n      callvalue\n        /* \"TavsStable.sol\":2894:2912  estimateMintAmount */\n      tag_139\n        /* \"TavsStable.sol\":2894:2923  estimateMintAmount(msg.value) */\n      jump\t// in\n    tag_211:\n        /* \"TavsStable.sol\":2873:2923  uint256 mintAmount = estimateMintAmount(msg.value) */\n      swap1\n      pop\n        /* \"TavsStable.sol\":2935:2964  _mint(msg.sender, mintAmount) */\n      tag_212\n        /* \"TavsStable.sol\":2941:2951  msg.sender */\n      caller\n        /* \"TavsStable.sol\":2953:2963  mintAmount */\n      dup3\n        /* \"TavsStable.sol\":2935:2940  _mint */\n      tag_213\n        /* \"TavsStable.sol\":2935:2964  _mint(msg.sender, mintAmount) */\n      jump\t// in\n    tag_212:\n        /* \"TavsStable.sol\":3020:3021  0 */\n      0x00\n        /* \"TavsStable.sol\":2981:2990  positions */\n      0x07\n        /* \"TavsStable.sol\":2981:3002  positions[msg.sender] */\n      0x00\n        /* \"TavsStable.sol\":2991:3001  msg.sender */\n      caller\n        /* \"TavsStable.sol\":2981:3002  positions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"TavsStable.sol\":2981:3016  positions[msg.sender].collateralETH */\n      0x00\n      add\n      sload\n        /* \"TavsStable.sol\":2981:3021  positions[msg.sender].collateralETH == 0 */\n      sub\n        /* \"TavsStable.sol\":2977:3181  if (positions[msg.sender].collateralETH == 0){... */\n      tag_214\n      jumpi\n        /* \"TavsStable.sol\":3041:3051  userExists */\n      0x09\n        /* \"TavsStable.sol\":3041:3063  userExists[msg.sender] */\n      0x00\n        /* \"TavsStable.sol\":3052:3062  msg.sender */\n      caller\n        /* \"TavsStable.sol\":3041:3063  userExists[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"TavsStable.sol\":3037:3170  if(!userExists[msg.sender]) {... */\n      tag_215\n      jumpi\n        /* \"TavsStable.sol\":3084:3089  users */\n      0x08\n        /* \"TavsStable.sol\":3095:3105  msg.sender */\n      caller\n        /* \"TavsStable.sol\":3084:3106  users.push(msg.sender) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"TavsStable.sol\":3150:3154  true */\n      0x01\n        /* \"TavsStable.sol\":3125:3135  userExists */\n      0x09\n        /* \"TavsStable.sol\":3125:3147  userExists[msg.sender] */\n      0x00\n        /* \"TavsStable.sol\":3136:3146  msg.sender */\n      caller\n        /* \"TavsStable.sol\":3125:3147  userExists[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"TavsStable.sol\":3125:3154  userExists[msg.sender] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"TavsStable.sol\":3037:3170  if(!userExists[msg.sender]) {... */\n    tag_215:\n        /* \"TavsStable.sol\":2977:3181  if (positions[msg.sender].collateralETH == 0){... */\n    tag_214:\n        /* \"TavsStable.sol\":3232:3241  msg.value */\n      callvalue\n        /* \"TavsStable.sol\":3193:3202  positions */\n      0x07\n        /* \"TavsStable.sol\":3193:3214  positions[msg.sender] */\n      0x00\n        /* \"TavsStable.sol\":3203:3213  msg.sender */\n      caller\n        /* \"TavsStable.sol\":3193:3214  positions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"TavsStable.sol\":3193:3228  positions[msg.sender].collateralETH */\n      0x00\n      add\n      0x00\n        /* \"TavsStable.sol\":3193:3241  positions[msg.sender].collateralETH += msg.value */\n      dup3\n      dup3\n      sload\n      tag_217\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"TavsStable.sol\":3326:3336  mintAmount */\n      dup1\n        /* \"TavsStable.sol\":3286:3295  positions */\n      0x07\n        /* \"TavsStable.sol\":3286:3307  positions[msg.sender] */\n      0x00\n        /* \"TavsStable.sol\":3296:3306  msg.sender */\n      caller\n        /* \"TavsStable.sol\":3286:3307  positions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"TavsStable.sol\":3286:3322  positions[msg.sender].stablecoinDebt */\n      0x01\n      add\n      0x00\n        /* \"TavsStable.sol\":3286:3336  positions[msg.sender].stablecoinDebt += mintAmount */\n      dup3\n      dup3\n      sload\n      tag_219\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_219:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"TavsStable.sol\":3391:3401  msg.sender */\n      caller\n        /* \"TavsStable.sol\":3383:3425  Deposit(msg.sender, msg.value, mintAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n        /* \"TavsStable.sol\":3403:3412  msg.value */\n      callvalue\n        /* \"TavsStable.sol\":3414:3424  mintAmount */\n      dup4\n        /* \"TavsStable.sol\":3383:3425  Deposit(msg.sender, msg.value, mintAmount) */\n      mload(0x40)\n      tag_220\n      swap3\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"TavsStable.sol\":2799:3454  {... */\n      pop\n        /* \"TavsStable.sol\":2756:3454  function depositAndMint() external payable {... */\n      jump\t// out\n        /* \"TavsStable.sol\":677:710  address public liquidationAddress */\n    tag_97:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"TavsStable.sol\":6156:6826  function checkUpkeep (bytes calldata) external view override returns (bool upkeepNeeded, bytes memory performData) {... */\n    tag_102:\n        /* \"TavsStable.sol\":6226:6243  bool upkeepNeeded */\n      0x00\n        /* \"TavsStable.sol\":6245:6269  bytes memory performData */\n      0x60\n        /* \"TavsStable.sol\":6287:6296  uint256 i */\n      0x00\n        /* \"TavsStable.sol\":6282:6716  for (uint256 i = 0; i < users.length; i++) {... */\n    tag_222:\n        /* \"TavsStable.sol\":6306:6311  users */\n      0x08\n        /* \"TavsStable.sol\":6306:6318  users.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"TavsStable.sol\":6302:6303  i */\n      dup2\n        /* \"TavsStable.sol\":6302:6318  i < users.length */\n      lt\n        /* \"TavsStable.sol\":6282:6716  for (uint256 i = 0; i < users.length; i++) {... */\n      iszero\n      tag_223\n      jumpi\n        /* \"TavsStable.sol\":6340:6352  address user */\n      0x00\n        /* \"TavsStable.sol\":6355:6360  users */\n      0x08\n        /* \"TavsStable.sol\":6361:6362  i */\n      dup3\n        /* \"TavsStable.sol\":6355:6363  users[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_225\n      jumpi\n      tag_226\n      tag_227\n      jump\t// in\n    tag_226:\n    tag_225:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TavsStable.sol\":6340:6363  address user = users[i] */\n      swap1\n      pop\n        /* \"TavsStable.sol\":472:475  150 */\n      0x96\n        /* \"TavsStable.sol\":6382:6406  getCollateralRatio(user) */\n      tag_229\n        /* \"TavsStable.sol\":6401:6405  user */\n      dup3\n        /* \"TavsStable.sol\":6382:6400  getCollateralRatio */\n      tag_57\n        /* \"TavsStable.sol\":6382:6406  getCollateralRatio(user) */\n      jump\t// in\n    tag_229:\n        /* \"TavsStable.sol\":6382:6425  getCollateralRatio(user) < COLLATERAL_RATIO */\n      lt\n        /* \"TavsStable.sol\":6378:6705  if (getCollateralRatio(user) < COLLATERAL_RATIO) { // se a quantidade de colateral for menor do que 150%... */\n      iszero\n      tag_230\n      jumpi\n        /* \"TavsStable.sol\":6515:6519  true */\n      0x01\n        /* \"TavsStable.sol\":6500:6519  upkeepNeeded = true */\n      swap4\n      pop\n        /* \"TavsStable.sol\":6588:6592  user */\n      dup1\n        /* \"TavsStable.sol\":6577:6593  abi.encode(user) */\n      add(0x20, mload(0x40))\n      tag_231\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"TavsStable.sol\":6563:6593  performData = abi.encode(user) */\n      swap3\n      pop\n        /* \"TavsStable.sol\":6670:6674  true */\n      0x01\n        /* \"TavsStable.sol\":6662:6688  return (true, performData) */\n      swap4\n      pop\n      pop\n      pop\n      jump(tag_221)\n        /* \"TavsStable.sol\":6378:6705  if (getCollateralRatio(user) < COLLATERAL_RATIO) { // se a quantidade de colateral for menor do que 150%... */\n    tag_230:\n        /* \"TavsStable.sol\":6325:6716  {... */\n      pop\n        /* \"TavsStable.sol\":6320:6323  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"TavsStable.sol\":6282:6716  for (uint256 i = 0; i < users.length; i++) {... */\n      jump(tag_222)\n    tag_223:\n      pop\n        /* \"TavsStable.sol\":6801:6806  false */\n      0x00\n        /* \"TavsStable.sol\":6808:6817  bytes(\"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"TavsStable.sol\":6793:6818  return (false, bytes(\"\")) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"TavsStable.sol\":6156:6826  function checkUpkeep (bytes calldata) external view override returns (bool upkeepNeeded, bytes memory performData) {... */\n    tag_221:\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2998:3005  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3033  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3034:3041  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3017:3042  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"TavsStable.sol\":382:420  AggregatorV3Interface public priceFeed */\n    tag_112:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"TavsStable.sol\":503:554  uint256 public constant DATAFEED_PRICE_DECIMALS = 8 */\n    tag_117:\n        /* \"TavsStable.sol\":553:554  8 */\n      0x08\n        /* \"TavsStable.sol\":503:554  uint256 public constant DATAFEED_PRICE_DECIMALS = 8 */\n      dup2\n      jump\t// out\n        /* \"TavsStable.sol\":4233:4893  function burnAndWithdraw(uint256 burnAmount) external {... */\n    tag_122:\n        /* \"TavsStable.sol\":4331:4341  burnAmount */\n      dup1\n        /* \"TavsStable.sol\":4306:4327  balanceOf(msg.sender) */\n      tag_234\n        /* \"TavsStable.sol\":4316:4326  msg.sender */\n      caller\n        /* \"TavsStable.sol\":4306:4315  balanceOf */\n      tag_108\n        /* \"TavsStable.sol\":4306:4327  balanceOf(msg.sender) */\n      jump\t// in\n    tag_234:\n        /* \"TavsStable.sol\":4306:4341  balanceOf(msg.sender) >= burnAmount */\n      lt\n      iszero\n        /* \"TavsStable.sol\":4298:4364  require(balanceOf(msg.sender) >= burnAmount, \"Insufficient TAVST\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_235:\n        /* \"TavsStable.sol\":4377:4396  uint256 ethToReturn */\n      0x00\n        /* \"TavsStable.sol\":4399:4430  estimateWithdrawETH(burnAmount) */\n      tag_238\n        /* \"TavsStable.sol\":4419:4429  burnAmount */\n      dup3\n        /* \"TavsStable.sol\":4399:4418  estimateWithdrawETH */\n      tag_144\n        /* \"TavsStable.sol\":4399:4430  estimateWithdrawETH(burnAmount) */\n      jump\t// in\n    tag_238:\n        /* \"TavsStable.sol\":4377:4430  uint256 ethToReturn = estimateWithdrawETH(burnAmount) */\n      swap1\n      pop\n        /* \"TavsStable.sol\":4572:4583  ethToReturn */\n      dup1\n        /* \"TavsStable.sol\":4533:4542  positions */\n      0x07\n        /* \"TavsStable.sol\":4533:4554  positions[msg.sender] */\n      0x00\n        /* \"TavsStable.sol\":4543:4553  msg.sender */\n      caller\n        /* \"TavsStable.sol\":4533:4554  positions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"TavsStable.sol\":4533:4568  positions[msg.sender].collateralETH */\n      0x00\n      add\n      sload\n        /* \"TavsStable.sol\":4533:4583  positions[msg.sender].collateralETH >= ethToReturn */\n      lt\n      iszero\n        /* \"TavsStable.sol\":4525:4609  require(positions[msg.sender].collateralETH >= ethToReturn, \"Not enough collateral\") */\n      tag_239\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_240\n      swap1\n      tag_241\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_239:\n        /* \"TavsStable.sol\":4661:4672  ethToReturn */\n      dup1\n        /* \"TavsStable.sol\":4622:4631  positions */\n      0x07\n        /* \"TavsStable.sol\":4622:4643  positions[msg.sender] */\n      0x00\n        /* \"TavsStable.sol\":4632:4642  msg.sender */\n      caller\n        /* \"TavsStable.sol\":4622:4643  positions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"TavsStable.sol\":4622:4657  positions[msg.sender].collateralETH */\n      0x00\n      add\n      0x00\n        /* \"TavsStable.sol\":4622:4672  positions[msg.sender].collateralETH -= ethToReturn */\n      dup3\n      dup3\n      sload\n      tag_242\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"TavsStable.sol\":4723:4733  burnAmount */\n      dup2\n        /* \"TavsStable.sol\":4683:4692  positions */\n      0x07\n        /* \"TavsStable.sol\":4683:4704  positions[msg.sender] */\n      0x00\n        /* \"TavsStable.sol\":4693:4703  msg.sender */\n      caller\n        /* \"TavsStable.sol\":4683:4704  positions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"TavsStable.sol\":4683:4719  positions[msg.sender].stablecoinDebt */\n      0x01\n      add\n      0x00\n        /* \"TavsStable.sol\":4683:4733  positions[msg.sender].stablecoinDebt -= burnAmount */\n      dup3\n      dup3\n      sload\n      tag_244\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_244:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"TavsStable.sol\":4744:4773  _burn(msg.sender, burnAmount) */\n      tag_245\n        /* \"TavsStable.sol\":4750:4760  msg.sender */\n      caller\n        /* \"TavsStable.sol\":4762:4772  burnAmount */\n      dup4\n        /* \"TavsStable.sol\":4744:4749  _burn */\n      tag_203\n        /* \"TavsStable.sol\":4744:4773  _burn(msg.sender, burnAmount) */\n      jump\t// in\n    tag_245:\n        /* \"TavsStable.sol\":4794:4804  msg.sender */\n      caller\n        /* \"TavsStable.sol\":4786:4814  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TavsStable.sol\":4786:4827  payable(msg.sender).transfer(ethToReturn) */\n      0x08fc\n        /* \"TavsStable.sol\":4815:4826  ethToReturn */\n      dup3\n        /* \"TavsStable.sol\":4786:4827  payable(msg.sender).transfer(ethToReturn) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_247\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_247:\n      pop\n        /* \"TavsStable.sol\":4848:4858  msg.sender */\n      caller\n        /* \"TavsStable.sol\":4843:4884  Burn(msg.sender, burnAmount, ethToReturn) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x49995e5dd6158cf69ad3e9777c46755a1a826a446c6416992167462dad033b2a\n        /* \"TavsStable.sol\":4860:4870  burnAmount */\n      dup4\n        /* \"TavsStable.sol\":4872:4883  ethToReturn */\n      dup4\n        /* \"TavsStable.sol\":4843:4884  Burn(msg.sender, burnAmount, ethToReturn) */\n      mload(0x40)\n      tag_248\n      swap3\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"TavsStable.sol\":4287:4893  {... */\n      pop\n        /* \"TavsStable.sol\":4233:4893  function burnAndWithdraw(uint256 burnAmount) external {... */\n      pop\n      jump\t// out\n        /* \"TavsStable.sol\":4929:5151  function getLatestPrice() public view returns (uint256) {... */\n    tag_125:\n        /* \"TavsStable.sol\":4976:4983  uint256 */\n      0x00\n        /* \"TavsStable.sol\":4999:5008  int price */\n      dup1\n        /* \"TavsStable.sol\":5015:5024  priceFeed */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TavsStable.sol\":5015:5040  priceFeed.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"TavsStable.sol\":5015:5042  priceFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_251\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_251:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_252\n      swap2\n      swap1\n      tag_253\n      jump\t// in\n    tag_252:\n        /* \"TavsStable.sol\":4996:5042  (, int price,,,) = priceFeed.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"TavsStable.sol\":5069:5070  0 */\n      0x00\n        /* \"TavsStable.sol\":5061:5066  price */\n      dup2\n        /* \"TavsStable.sol\":5061:5070  price > 0 */\n      sgt\n        /* \"TavsStable.sol\":5053:5088  require(price > 0, \"Invalid price\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_255\n      swap1\n      tag_256\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_254:\n        /* \"TavsStable.sol\":5114:5119  price */\n      dup1\n        /* \"TavsStable.sol\":5099:5120  return uint256(price) */\n      swap2\n      pop\n      pop\n        /* \"TavsStable.sol\":4929:5151  function getLatestPrice() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_258\n      swap1\n      tag_170\n      jump\t// in\n    tag_258:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_259\n      swap1\n      tag_170\n      jump\t// in\n    tag_259:\n      dup1\n      iszero\n      tag_260\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_261\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_260)\n    tag_261:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_262:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_262\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_260:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3313:3317  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3342  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3357  _msgSender() */\n      tag_264\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3355  _msgSender */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3357  _msgSender() */\n      jump\t// in\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3357  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      tag_265\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3377:3382  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3386  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3388:3393  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3376  _transfer */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3411:3415  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3404:3415  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"TavsStable.sol\":2178:2712  function estimateMintAmount(uint256 ethAmount) public view returns (uint256) { // estima quantidade de stablecoin vai ser emitida com base na quantidade de ETH... */\n    tag_139:\n        /* \"TavsStable.sol\":2246:2253  uint256 */\n      0x00\n        /* \"TavsStable.sol\":2347:2363  uint256 ethPrice */\n      dup1\n        /* \"TavsStable.sol\":2366:2382  getLatestPrice() */\n      tag_267\n        /* \"TavsStable.sol\":2366:2380  getLatestPrice */\n      tag_125\n        /* \"TavsStable.sol\":2366:2382  getLatestPrice() */\n      jump\t// in\n    tag_267:\n        /* \"TavsStable.sol\":2347:2382  uint256 ethPrice = getLatestPrice() */\n      swap1\n      pop\n        /* \"TavsStable.sol\":2428:2444  uint256 DECIMALS */\n      0x00\n        /* \"TavsStable.sol\":2461:2471  decimals() */\n      tag_268\n        /* \"TavsStable.sol\":2461:2469  decimals */\n      tag_72\n        /* \"TavsStable.sol\":2461:2471  decimals() */\n      jump\t// in\n    tag_268:\n        /* \"TavsStable.sol\":2453:2472  uint256(decimals()) */\n      0xff\n      and\n        /* \"TavsStable.sol\":2447:2449  10 */\n      0x0a\n        /* \"TavsStable.sol\":2447:2472  10 ** uint256(decimals()) */\n      tag_269\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_269:\n        /* \"TavsStable.sol\":2428:2472  uint256 DECIMALS = 10 ** uint256(decimals()) */\n      swap1\n      pop\n        /* \"TavsStable.sol\":2483:2504  uint256 ethValueInUSD */\n      0x00\n        /* \"TavsStable.sol\":2549:2553  1e18 */\n      0x0de0b6b3a7640000\n        /* \"TavsStable.sol\":2543:2546  1e8 */\n      0x05f5e100\n        /* \"TavsStable.sol\":2531:2539  DECIMALS */\n      dup4\n        /* \"TavsStable.sol\":2520:2528  ethPrice */\n      dup6\n        /* \"TavsStable.sol\":2508:2517  ethAmount */\n      dup9\n        /* \"TavsStable.sol\":2508:2528  ethAmount * ethPrice */\n      tag_271\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_271:\n        /* \"TavsStable.sol\":2508:2539  ethAmount * ethPrice * DECIMALS */\n      tag_273\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_273:\n        /* \"TavsStable.sol\":2507:2546  (ethAmount * ethPrice * DECIMALS) / 1e8 */\n      tag_274\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_274:\n        /* \"TavsStable.sol\":2507:2553  (ethAmount * ethPrice * DECIMALS) / 1e8 / 1e18 */\n      tag_275\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_275:\n        /* \"TavsStable.sol\":2483:2553  uint256 ethValueInUSD = (ethAmount * ethPrice * DECIMALS) / 1e8 / 1e18 */\n      swap1\n      pop\n        /* \"TavsStable.sol\":472:475  150 */\n      0x96\n        /* \"TavsStable.sol\":2626:2629  100 */\n      0x64\n        /* \"TavsStable.sol\":2610:2623  ethValueInUSD */\n      dup3\n        /* \"TavsStable.sol\":2610:2629  ethValueInUSD * 100 */\n      tag_276\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_276:\n        /* \"TavsStable.sol\":2610:2648  ethValueInUSD * 100 / COLLATERAL_RATIO */\n      tag_277\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_277:\n        /* \"TavsStable.sol\":2603:2648  return ethValueInUSD * 100 / COLLATERAL_RATIO */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"TavsStable.sol\":2178:2712  function estimateMintAmount(uint256 ethAmount) public view returns (uint256) { // estima quantidade de stablecoin vai ser emitida com base na quantidade de ETH... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"TavsStable.sol\":3462:4174  function estimateWithdrawETH(uint256 burnAmount) public view returns (uint256) {... */\n    tag_144:\n        /* \"TavsStable.sol\":3532:3539  uint256 */\n      0x00\n        /* \"TavsStable.sol\":3573:3574  0 */\n      dup1\n        /* \"TavsStable.sol\":3560:3570  burnAmount */\n      dup3\n        /* \"TavsStable.sol\":3560:3574  burnAmount > 0 */\n      gt\n        /* \"TavsStable.sol\":3552:3608  require(burnAmount > 0, \"Amount must be greater than 0\") */\n      tag_279\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_280\n      swap1\n      tag_281\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_279:\n        /* \"TavsStable.sol\":3619:3635  uint256 ethPrice */\n      0x00\n        /* \"TavsStable.sol\":3638:3654  getLatestPrice() */\n      tag_282\n        /* \"TavsStable.sol\":3638:3652  getLatestPrice */\n      tag_125\n        /* \"TavsStable.sol\":3638:3654  getLatestPrice() */\n      jump\t// in\n    tag_282:\n        /* \"TavsStable.sol\":3619:3654  uint256 ethPrice = getLatestPrice() */\n      swap1\n      pop\n        /* \"TavsStable.sol\":3742:3757  uint256 burnUSD */\n      0x00\n        /* \"TavsStable.sol\":632:635  100 */\n      0x64\n        /* \"TavsStable.sol\":3774:3778  1e18 */\n      0x0de0b6b3a7640000\n        /* \"TavsStable.sol\":3761:3771  burnAmount */\n      dup6\n        /* \"TavsStable.sol\":3761:3778  burnAmount * 1e18 */\n      tag_283\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_283:\n        /* \"TavsStable.sol\":3760:3797  (burnAmount * 1e18) / DECIMALS_FACTOR */\n      tag_284\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_284:\n        /* \"TavsStable.sol\":3742:3797  uint256 burnUSD = (burnAmount * 1e18) / DECIMALS_FACTOR */\n      swap1\n      pop\n        /* \"TavsStable.sol\":3924:3945  uint256 collateralUSD */\n      0x00\n        /* \"TavsStable.sol\":3979:3982  100 */\n      0x64\n        /* \"TavsStable.sol\":472:475  150 */\n      0x96\n        /* \"TavsStable.sol\":3949:3956  burnUSD */\n      dup4\n        /* \"TavsStable.sol\":3949:3975  burnUSD * COLLATERAL_RATIO */\n      tag_285\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_285:\n        /* \"TavsStable.sol\":3948:3982  (burnUSD * COLLATERAL_RATIO) / 100 */\n      tag_286\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_286:\n        /* \"TavsStable.sol\":3924:3982  uint256 collateralUSD = (burnUSD * COLLATERAL_RATIO) / 100 */\n      swap1\n      pop\n        /* \"TavsStable.sol\":4083:4102  uint256 ethToReturn */\n      0x00\n        /* \"TavsStable.sol\":4129:4137  ethPrice */\n      dup4\n        /* \"TavsStable.sol\":4122:4125  1e8 */\n      0x05f5e100\n        /* \"TavsStable.sol\":4106:4119  collateralUSD */\n      dup4\n        /* \"TavsStable.sol\":4106:4125  collateralUSD * 1e8 */\n      tag_287\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_287:\n        /* \"TavsStable.sol\":4105:4137  (collateralUSD * 1e8) / ethPrice */\n      tag_288\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_288:\n        /* \"TavsStable.sol\":4083:4137  uint256 ethToReturn = (collateralUSD * 1e8) / ethPrice */\n      swap1\n      pop\n        /* \"TavsStable.sol\":4155:4166  ethToReturn */\n      dup1\n        /* \"TavsStable.sol\":4148:4166  return ethToReturn */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"TavsStable.sol\":3462:4174  function estimateWithdrawETH(uint256 burnAmount) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"TavsStable.sol\":429:475  uint256 public constant COLLATERAL_RATIO = 150 */\n    tag_148:\n        /* \"TavsStable.sol\":472:475  150 */\n      0x96\n        /* \"TavsStable.sol\":429:475  uint256 public constant COLLATERAL_RATIO = 150 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3535:3542  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3572  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3573:3578  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3580:3587  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3554:3588  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"TavsStable.sol\":590:635  uint256 public constant DECIMALS_FACTOR = 100 */\n    tag_158:\n        /* \"TavsStable.sol\":632:635  100 */\n      0x64\n        /* \"TavsStable.sol\":590:635  uint256 public constant DECIMALS_FACTOR = 100 */\n      dup2\n      jump\t// out\n        /* \"TavsStable.sol\":5205:5558  function getUserCollateralUSD(address user) public view returns (uint256) {... */\n    tag_163:\n        /* \"TavsStable.sol\":5270:5277  uint256 */\n      0x00\n        /* \"TavsStable.sol\":5290:5306  uint256 ethPrice */\n      dup1\n        /* \"TavsStable.sol\":5309:5325  getLatestPrice() */\n      tag_291\n        /* \"TavsStable.sol\":5309:5323  getLatestPrice */\n      tag_125\n        /* \"TavsStable.sol\":5309:5325  getLatestPrice() */\n      jump\t// in\n    tag_291:\n        /* \"TavsStable.sol\":5290:5325  uint256 ethPrice = getLatestPrice() */\n      swap1\n      pop\n        /* \"TavsStable.sol\":5336:5355  Position memory pos */\n      0x00\n        /* \"TavsStable.sol\":5358:5367  positions */\n      0x07\n        /* \"TavsStable.sol\":5358:5373  positions[user] */\n      0x00\n        /* \"TavsStable.sol\":5368:5372  user */\n      dup6\n        /* \"TavsStable.sol\":5358:5373  positions[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"TavsStable.sol\":5336:5373  Position memory pos = positions[user] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"TavsStable.sol\":5386:5402  uint256 DECIMALS */\n      0x00\n        /* \"TavsStable.sol\":5419:5429  decimals() */\n      tag_292\n        /* \"TavsStable.sol\":5419:5427  decimals */\n      tag_72\n        /* \"TavsStable.sol\":5419:5429  decimals() */\n      jump\t// in\n    tag_292:\n        /* \"TavsStable.sol\":5411:5430  uint256(decimals()) */\n      0xff\n      and\n        /* \"TavsStable.sol\":5405:5407  10 */\n      0x0a\n        /* \"TavsStable.sol\":5405:5430  10 ** uint256(decimals()) */\n      tag_293\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_293:\n        /* \"TavsStable.sol\":5386:5430  uint256 DECIMALS = 10 ** uint256(decimals()) */\n      swap1\n      pop\n        /* \"TavsStable.sol\":5441:5462  uint256 collateralUSD */\n      0x00\n        /* \"TavsStable.sol\":5515:5519  1e18 */\n      0x0de0b6b3a7640000\n        /* \"TavsStable.sol\":5509:5512  1e8 */\n      0x05f5e100\n        /* \"TavsStable.sol\":5497:5505  DECIMALS */\n      dup4\n        /* \"TavsStable.sol\":5486:5494  ethPrice */\n      dup7\n        /* \"TavsStable.sol\":5466:5469  pos */\n      dup7\n        /* \"TavsStable.sol\":5466:5483  pos.collateralETH */\n      0x00\n      add\n      mload\n        /* \"TavsStable.sol\":5466:5494  pos.collateralETH * ethPrice */\n      tag_294\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_294:\n        /* \"TavsStable.sol\":5466:5505  pos.collateralETH * ethPrice * DECIMALS */\n      tag_295\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_295:\n        /* \"TavsStable.sol\":5465:5512  (pos.collateralETH * ethPrice * DECIMALS) / 1e8 */\n      tag_296\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_296:\n        /* \"TavsStable.sol\":5465:5519  (pos.collateralETH * ethPrice * DECIMALS) / 1e8 / 1e18 */\n      tag_297\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_297:\n        /* \"TavsStable.sol\":5441:5519  uint256 collateralUSD = (pos.collateralETH * ethPrice * DECIMALS) / 1e8 / 1e18 */\n      swap1\n      pop\n        /* \"TavsStable.sol\":5537:5550  collateralUSD */\n      dup1\n        /* \"TavsStable.sol\":5530:5550  return collateralUSD */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"TavsStable.sol\":5205:5558  function getUserCollateralUSD(address user) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      tag_300\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8723:8728  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8730:8737  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8739:8744  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8746:8750  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8722  _approve */\n      tag_301\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_300:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10418:10442  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      tag_303\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10455:10460  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10462:10469  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10454  allowance */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      jump\t// in\n    tag_303:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10418:10470  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10503:10520  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10484:10500  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10484:10520  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_304\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10559:10564  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10556  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10564  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n      iszero\n      tag_305\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10618:10625  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10627:10643  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10645:10650  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10591:10651  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_306\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_307\n      jump\t// in\n    tag_306:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n    tag_305:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      tag_308\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10716:10721  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10730  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10751:10756  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10748  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10756  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10763  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10715  _approve */\n      tag_301\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_308:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n    tag_304:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10408:10795  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5396:5397  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5384  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n      tag_310\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5448:5449  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5451  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_311\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_311:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n    tag_310:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5489:5490  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5477  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n      tag_312\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5543:5544  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5514:5546  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_313\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_313:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n    tag_312:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      tag_314\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5574:5578  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5580:5582  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5584:5589  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5573  _update */\n      tag_315\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      jump\t// in\n    tag_314:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7888:8094  function _burn(address account, uint256 value) internal {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7977:7978  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7958:7979  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7958:7965  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7958:7979  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7954:8043  if (account == address(0)) {... */\n      tag_317\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8029:8030  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8002:8032  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_318\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_318:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7954:8043  if (account == address(0)) {... */\n    tag_317:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8052:8087  _update(account, address(0), value) */\n      tag_319\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8060:8067  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8077:8078  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8081:8086  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8052:8059  _update */\n      tag_315\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8052:8087  _update(account, address(0), value) */\n      jump\t// in\n    tag_319:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7888:8094  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7451:7452  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7439  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n      tag_321\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7506  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7508  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_322\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_322:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n    tag_321:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n      tag_323\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7548:7555  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7557:7562  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  _update */\n      tag_315\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n      jump\t// in\n    tag_323:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_301:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9734:9735  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9722  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n      tag_325\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9788:9789  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9759:9791  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_326\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_326:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n    tag_325:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9834:9835  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9822  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n      tag_327\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9887:9888  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9859:9890  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_328\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_328:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n    tag_327:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9940:9945  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9921  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9922:9927  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9929:9936  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9945  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9959:9968  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n      iszero\n      tag_329\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10005:10012  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9998:10003  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10014:10019  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_330\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_330:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n    tag_329:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_315:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6017:6018  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6005  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      tag_332\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_333\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_333:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      jump(tag_334)\n    tag_332:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6220  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6221:6225  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6226  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6258:6263  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6255  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n      iszero\n      tag_335\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6319  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6334:6339  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_336\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_307\n      jump\t// in\n    tag_336:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n    tag_335:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6507:6512  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6504  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6485:6489  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6175:6537  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n    tag_334:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6565:6566  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6553  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      tag_337\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6730:6735  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      jump(tag_338)\n    tag_337:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6942:6947  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6935:6937  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n    tag_338:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      mload(0x40)\n      tag_339\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_339:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:121   */\n    tag_340:\n        /* \"#utility.yul\":74:80   */\n      0x00\n        /* \"#utility.yul\":108:113   */\n      dup2\n        /* \"#utility.yul\":102:114   */\n      mload\n        /* \"#utility.yul\":92:114   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:121   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":127:311   */\n    tag_341:\n        /* \"#utility.yul\":226:237   */\n      0x00\n        /* \"#utility.yul\":260:266   */\n      dup3\n        /* \"#utility.yul\":255:258   */\n      dup3\n        /* \"#utility.yul\":248:267   */\n      mstore\n        /* \"#utility.yul\":300:304   */\n      0x20\n        /* \"#utility.yul\":295:298   */\n      dup3\n        /* \"#utility.yul\":291:305   */\n      add\n        /* \"#utility.yul\":276:305   */\n      swap1\n      pop\n        /* \"#utility.yul\":127:311   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":317:449   */\n    tag_342:\n        /* \"#utility.yul\":384:388   */\n      0x00\n        /* \"#utility.yul\":407:410   */\n      dup2\n        /* \"#utility.yul\":399:410   */\n      swap1\n      pop\n        /* \"#utility.yul\":437:441   */\n      0x20\n        /* \"#utility.yul\":432:435   */\n      dup3\n        /* \"#utility.yul\":428:442   */\n      add\n        /* \"#utility.yul\":420:442   */\n      swap1\n      pop\n        /* \"#utility.yul\":317:449   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":455:581   */\n    tag_343:\n        /* \"#utility.yul\":492:499   */\n      0x00\n        /* \"#utility.yul\":532:574   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":525:530   */\n      dup3\n        /* \"#utility.yul\":521:575   */\n      and\n        /* \"#utility.yul\":510:575   */\n      swap1\n      pop\n        /* \"#utility.yul\":455:581   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":587:683   */\n    tag_344:\n        /* \"#utility.yul\":624:631   */\n      0x00\n        /* \"#utility.yul\":653:677   */\n      tag_414\n        /* \"#utility.yul\":671:676   */\n      dup3\n        /* \"#utility.yul\":653:677   */\n      tag_343\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":642:677   */\n      swap1\n      pop\n        /* \"#utility.yul\":587:683   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":689:797   */\n    tag_345:\n        /* \"#utility.yul\":766:790   */\n      tag_416\n        /* \"#utility.yul\":784:789   */\n      dup2\n        /* \"#utility.yul\":766:790   */\n      tag_344\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":761:764   */\n      dup3\n        /* \"#utility.yul\":754:791   */\n      mstore\n        /* \"#utility.yul\":689:797   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":803:982   */\n    tag_346:\n        /* \"#utility.yul\":872:882   */\n      0x00\n        /* \"#utility.yul\":893:939   */\n      tag_418\n        /* \"#utility.yul\":935:938   */\n      dup4\n        /* \"#utility.yul\":927:933   */\n      dup4\n        /* \"#utility.yul\":893:939   */\n      tag_345\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":971:975   */\n      0x20\n        /* \"#utility.yul\":966:969   */\n      dup4\n        /* \"#utility.yul\":962:976   */\n      add\n        /* \"#utility.yul\":948:976   */\n      swap1\n      pop\n        /* \"#utility.yul\":803:982   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":988:1101   */\n    tag_347:\n        /* \"#utility.yul\":1058:1062   */\n      0x00\n        /* \"#utility.yul\":1090:1094   */\n      0x20\n        /* \"#utility.yul\":1085:1088   */\n      dup3\n        /* \"#utility.yul\":1081:1095   */\n      add\n        /* \"#utility.yul\":1073:1095   */\n      swap1\n      pop\n        /* \"#utility.yul\":988:1101   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1137:1869   */\n    tag_348:\n        /* \"#utility.yul\":1256:1259   */\n      0x00\n        /* \"#utility.yul\":1285:1339   */\n      tag_421\n        /* \"#utility.yul\":1333:1338   */\n      dup3\n        /* \"#utility.yul\":1285:1339   */\n      tag_340\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":1355:1441   */\n      tag_422\n        /* \"#utility.yul\":1434:1440   */\n      dup2\n        /* \"#utility.yul\":1429:1432   */\n      dup6\n        /* \"#utility.yul\":1355:1441   */\n      tag_341\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":1348:1441   */\n      swap4\n      pop\n        /* \"#utility.yul\":1465:1521   */\n      tag_423\n        /* \"#utility.yul\":1515:1520   */\n      dup4\n        /* \"#utility.yul\":1465:1521   */\n      tag_342\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":1544:1551   */\n      dup1\n        /* \"#utility.yul\":1575:1576   */\n      0x00\n        /* \"#utility.yul\":1560:1844   */\n    tag_424:\n        /* \"#utility.yul\":1585:1591   */\n      dup4\n        /* \"#utility.yul\":1582:1583   */\n      dup2\n        /* \"#utility.yul\":1579:1592   */\n      lt\n        /* \"#utility.yul\":1560:1844   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":1661:1667   */\n      dup2\n        /* \"#utility.yul\":1655:1668   */\n      mload\n        /* \"#utility.yul\":1688:1751   */\n      tag_427\n        /* \"#utility.yul\":1747:1750   */\n      dup9\n        /* \"#utility.yul\":1732:1745   */\n      dup3\n        /* \"#utility.yul\":1688:1751   */\n      tag_346\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":1681:1751   */\n      swap8\n      pop\n        /* \"#utility.yul\":1774:1834   */\n      tag_428\n        /* \"#utility.yul\":1827:1833   */\n      dup4\n        /* \"#utility.yul\":1774:1834   */\n      tag_347\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":1764:1834   */\n      swap3\n      pop\n        /* \"#utility.yul\":1620:1844   */\n      pop\n        /* \"#utility.yul\":1607:1608   */\n      0x01\n        /* \"#utility.yul\":1604:1605   */\n      dup2\n        /* \"#utility.yul\":1600:1609   */\n      add\n        /* \"#utility.yul\":1595:1609   */\n      swap1\n      pop\n        /* \"#utility.yul\":1560:1844   */\n      jump(tag_424)\n    tag_426:\n        /* \"#utility.yul\":1564:1578   */\n      pop\n        /* \"#utility.yul\":1860:1863   */\n      dup6\n        /* \"#utility.yul\":1853:1863   */\n      swap4\n      pop\n        /* \"#utility.yul\":1261:1869   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1137:1869   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1875:2248   */\n    tag_40:\n        /* \"#utility.yul\":2018:2022   */\n      0x00\n        /* \"#utility.yul\":2056:2058   */\n      0x20\n        /* \"#utility.yul\":2045:2054   */\n      dup3\n        /* \"#utility.yul\":2041:2059   */\n      add\n        /* \"#utility.yul\":2033:2059   */\n      swap1\n      pop\n        /* \"#utility.yul\":2105:2114   */\n      dup2\n        /* \"#utility.yul\":2099:2103   */\n      dup2\n        /* \"#utility.yul\":2095:2115   */\n      sub\n        /* \"#utility.yul\":2091:2092   */\n      0x00\n        /* \"#utility.yul\":2080:2089   */\n      dup4\n        /* \"#utility.yul\":2076:2093   */\n      add\n        /* \"#utility.yul\":2069:2116   */\n      mstore\n        /* \"#utility.yul\":2133:2241   */\n      tag_430\n        /* \"#utility.yul\":2236:2240   */\n      dup2\n        /* \"#utility.yul\":2227:2233   */\n      dup5\n        /* \"#utility.yul\":2133:2241   */\n      tag_348\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":2125:2241   */\n      swap1\n      pop\n        /* \"#utility.yul\":1875:2248   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2254:2353   */\n    tag_349:\n        /* \"#utility.yul\":2306:2312   */\n      0x00\n        /* \"#utility.yul\":2340:2345   */\n      dup2\n        /* \"#utility.yul\":2334:2346   */\n      mload\n        /* \"#utility.yul\":2324:2346   */\n      swap1\n      pop\n        /* \"#utility.yul\":2254:2353   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2359:2528   */\n    tag_350:\n        /* \"#utility.yul\":2443:2454   */\n      0x00\n        /* \"#utility.yul\":2477:2483   */\n      dup3\n        /* \"#utility.yul\":2472:2475   */\n      dup3\n        /* \"#utility.yul\":2465:2484   */\n      mstore\n        /* \"#utility.yul\":2517:2521   */\n      0x20\n        /* \"#utility.yul\":2512:2515   */\n      dup3\n        /* \"#utility.yul\":2508:2522   */\n      add\n        /* \"#utility.yul\":2493:2522   */\n      swap1\n      pop\n        /* \"#utility.yul\":2359:2528   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2534:2780   */\n    tag_351:\n        /* \"#utility.yul\":2615:2616   */\n      0x00\n        /* \"#utility.yul\":2625:2738   */\n    tag_434:\n        /* \"#utility.yul\":2639:2645   */\n      dup4\n        /* \"#utility.yul\":2636:2637   */\n      dup2\n        /* \"#utility.yul\":2633:2646   */\n      lt\n        /* \"#utility.yul\":2625:2738   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":2724:2725   */\n      dup1\n        /* \"#utility.yul\":2719:2722   */\n      dup3\n        /* \"#utility.yul\":2715:2726   */\n      add\n        /* \"#utility.yul\":2709:2727   */\n      mload\n        /* \"#utility.yul\":2705:2706   */\n      dup2\n        /* \"#utility.yul\":2700:2703   */\n      dup5\n        /* \"#utility.yul\":2696:2707   */\n      add\n        /* \"#utility.yul\":2689:2728   */\n      mstore\n        /* \"#utility.yul\":2661:2663   */\n      0x20\n        /* \"#utility.yul\":2658:2659   */\n      dup2\n        /* \"#utility.yul\":2654:2664   */\n      add\n        /* \"#utility.yul\":2649:2664   */\n      swap1\n      pop\n        /* \"#utility.yul\":2625:2738   */\n      jump(tag_434)\n    tag_436:\n        /* \"#utility.yul\":2772:2773   */\n      0x00\n        /* \"#utility.yul\":2763:2769   */\n      dup5\n        /* \"#utility.yul\":2758:2761   */\n      dup5\n        /* \"#utility.yul\":2754:2770   */\n      add\n        /* \"#utility.yul\":2747:2774   */\n      mstore\n        /* \"#utility.yul\":2596:2780   */\n      pop\n        /* \"#utility.yul\":2534:2780   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2786:2888   */\n    tag_352:\n        /* \"#utility.yul\":2827:2833   */\n      0x00\n        /* \"#utility.yul\":2878:2880   */\n      0x1f\n        /* \"#utility.yul\":2874:2881   */\n      not\n        /* \"#utility.yul\":2869:2871   */\n      0x1f\n        /* \"#utility.yul\":2862:2867   */\n      dup4\n        /* \"#utility.yul\":2858:2872   */\n      add\n        /* \"#utility.yul\":2854:2882   */\n      and\n        /* \"#utility.yul\":2844:2882   */\n      swap1\n      pop\n        /* \"#utility.yul\":2786:2888   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2894:3271   */\n    tag_353:\n        /* \"#utility.yul\":2982:2985   */\n      0x00\n        /* \"#utility.yul\":3010:3049   */\n      tag_439\n        /* \"#utility.yul\":3043:3048   */\n      dup3\n        /* \"#utility.yul\":3010:3049   */\n      tag_349\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":3065:3136   */\n      tag_440\n        /* \"#utility.yul\":3129:3135   */\n      dup2\n        /* \"#utility.yul\":3124:3127   */\n      dup6\n        /* \"#utility.yul\":3065:3136   */\n      tag_350\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":3058:3136   */\n      swap4\n      pop\n        /* \"#utility.yul\":3145:3210   */\n      tag_441\n        /* \"#utility.yul\":3203:3209   */\n      dup2\n        /* \"#utility.yul\":3198:3201   */\n      dup6\n        /* \"#utility.yul\":3191:3195   */\n      0x20\n        /* \"#utility.yul\":3184:3189   */\n      dup7\n        /* \"#utility.yul\":3180:3196   */\n      add\n        /* \"#utility.yul\":3145:3210   */\n      tag_351\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":3235:3264   */\n      tag_442\n        /* \"#utility.yul\":3257:3263   */\n      dup2\n        /* \"#utility.yul\":3235:3264   */\n      tag_352\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":3230:3233   */\n      dup5\n        /* \"#utility.yul\":3226:3265   */\n      add\n        /* \"#utility.yul\":3219:3265   */\n      swap2\n      pop\n        /* \"#utility.yul\":2986:3271   */\n      pop\n        /* \"#utility.yul\":2894:3271   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3277:3590   */\n    tag_45:\n        /* \"#utility.yul\":3390:3394   */\n      0x00\n        /* \"#utility.yul\":3428:3430   */\n      0x20\n        /* \"#utility.yul\":3417:3426   */\n      dup3\n        /* \"#utility.yul\":3413:3431   */\n      add\n        /* \"#utility.yul\":3405:3431   */\n      swap1\n      pop\n        /* \"#utility.yul\":3477:3486   */\n      dup2\n        /* \"#utility.yul\":3471:3475   */\n      dup2\n        /* \"#utility.yul\":3467:3487   */\n      sub\n        /* \"#utility.yul\":3463:3464   */\n      0x00\n        /* \"#utility.yul\":3452:3461   */\n      dup4\n        /* \"#utility.yul\":3448:3465   */\n      add\n        /* \"#utility.yul\":3441:3488   */\n      mstore\n        /* \"#utility.yul\":3505:3583   */\n      tag_444\n        /* \"#utility.yul\":3578:3582   */\n      dup2\n        /* \"#utility.yul\":3569:3575   */\n      dup5\n        /* \"#utility.yul\":3505:3583   */\n      tag_353\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":3497:3583   */\n      swap1\n      pop\n        /* \"#utility.yul\":3277:3590   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3677:3794   */\n    tag_355:\n        /* \"#utility.yul\":3786:3787   */\n      0x00\n        /* \"#utility.yul\":3783:3784   */\n      dup1\n        /* \"#utility.yul\":3776:3788   */\n      revert\n        /* \"#utility.yul\":3800:3917   */\n    tag_356:\n        /* \"#utility.yul\":3909:3910   */\n      0x00\n        /* \"#utility.yul\":3906:3907   */\n      dup1\n        /* \"#utility.yul\":3899:3911   */\n      revert\n        /* \"#utility.yul\":3923:4045   */\n    tag_357:\n        /* \"#utility.yul\":3996:4020   */\n      tag_449\n        /* \"#utility.yul\":4014:4019   */\n      dup2\n        /* \"#utility.yul\":3996:4020   */\n      tag_344\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":3989:3994   */\n      dup2\n        /* \"#utility.yul\":3986:4021   */\n      eq\n        /* \"#utility.yul\":3976:4039   */\n      tag_450\n      jumpi\n        /* \"#utility.yul\":4035:4036   */\n      0x00\n        /* \"#utility.yul\":4032:4033   */\n      dup1\n        /* \"#utility.yul\":4025:4037   */\n      revert\n        /* \"#utility.yul\":3976:4039   */\n    tag_450:\n        /* \"#utility.yul\":3923:4045   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4051:4190   */\n    tag_358:\n        /* \"#utility.yul\":4097:4102   */\n      0x00\n        /* \"#utility.yul\":4135:4141   */\n      dup2\n        /* \"#utility.yul\":4122:4142   */\n      calldataload\n        /* \"#utility.yul\":4113:4142   */\n      swap1\n      pop\n        /* \"#utility.yul\":4151:4184   */\n      tag_452\n        /* \"#utility.yul\":4178:4183   */\n      dup2\n        /* \"#utility.yul\":4151:4184   */\n      tag_357\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":4051:4190   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4196:4273   */\n    tag_359:\n        /* \"#utility.yul\":4233:4240   */\n      0x00\n        /* \"#utility.yul\":4262:4267   */\n      dup2\n        /* \"#utility.yul\":4251:4267   */\n      swap1\n      pop\n        /* \"#utility.yul\":4196:4273   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4279:4401   */\n    tag_360:\n        /* \"#utility.yul\":4352:4376   */\n      tag_455\n        /* \"#utility.yul\":4370:4375   */\n      dup2\n        /* \"#utility.yul\":4352:4376   */\n      tag_359\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":4345:4350   */\n      dup2\n        /* \"#utility.yul\":4342:4377   */\n      eq\n        /* \"#utility.yul\":4332:4395   */\n      tag_456\n      jumpi\n        /* \"#utility.yul\":4391:4392   */\n      0x00\n        /* \"#utility.yul\":4388:4389   */\n      dup1\n        /* \"#utility.yul\":4381:4393   */\n      revert\n        /* \"#utility.yul\":4332:4395   */\n    tag_456:\n        /* \"#utility.yul\":4279:4401   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4407:4546   */\n    tag_361:\n        /* \"#utility.yul\":4453:4458   */\n      0x00\n        /* \"#utility.yul\":4491:4497   */\n      dup2\n        /* \"#utility.yul\":4478:4498   */\n      calldataload\n        /* \"#utility.yul\":4469:4498   */\n      swap1\n      pop\n        /* \"#utility.yul\":4507:4540   */\n      tag_458\n        /* \"#utility.yul\":4534:4539   */\n      dup2\n        /* \"#utility.yul\":4507:4540   */\n      tag_360\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":4407:4546   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4552:5026   */\n    tag_49:\n        /* \"#utility.yul\":4620:4626   */\n      0x00\n        /* \"#utility.yul\":4628:4634   */\n      dup1\n        /* \"#utility.yul\":4677:4679   */\n      0x40\n        /* \"#utility.yul\":4665:4674   */\n      dup4\n        /* \"#utility.yul\":4656:4663   */\n      dup6\n        /* \"#utility.yul\":4652:4675   */\n      sub\n        /* \"#utility.yul\":4648:4680   */\n      slt\n        /* \"#utility.yul\":4645:4764   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":4683:4762   */\n      tag_461\n      tag_355\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":4645:4764   */\n    tag_460:\n        /* \"#utility.yul\":4803:4804   */\n      0x00\n        /* \"#utility.yul\":4828:4881   */\n      tag_462\n        /* \"#utility.yul\":4873:4880   */\n      dup6\n        /* \"#utility.yul\":4864:4870   */\n      dup3\n        /* \"#utility.yul\":4853:4862   */\n      dup7\n        /* \"#utility.yul\":4849:4871   */\n      add\n        /* \"#utility.yul\":4828:4881   */\n      tag_358\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":4818:4881   */\n      swap3\n      pop\n        /* \"#utility.yul\":4774:4891   */\n      pop\n        /* \"#utility.yul\":4930:4932   */\n      0x20\n        /* \"#utility.yul\":4956:5009   */\n      tag_463\n        /* \"#utility.yul\":5001:5008   */\n      dup6\n        /* \"#utility.yul\":4992:4998   */\n      dup3\n        /* \"#utility.yul\":4981:4990   */\n      dup7\n        /* \"#utility.yul\":4977:4999   */\n      add\n        /* \"#utility.yul\":4956:5009   */\n      tag_361\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":4946:5009   */\n      swap2\n      pop\n        /* \"#utility.yul\":4901:5019   */\n      pop\n        /* \"#utility.yul\":4552:5026   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5032:5122   */\n    tag_362:\n        /* \"#utility.yul\":5066:5073   */\n      0x00\n        /* \"#utility.yul\":5109:5114   */\n      dup2\n        /* \"#utility.yul\":5102:5115   */\n      iszero\n        /* \"#utility.yul\":5095:5116   */\n      iszero\n        /* \"#utility.yul\":5084:5116   */\n      swap1\n      pop\n        /* \"#utility.yul\":5032:5122   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5128:5237   */\n    tag_363:\n        /* \"#utility.yul\":5209:5230   */\n      tag_466\n        /* \"#utility.yul\":5224:5229   */\n      dup2\n        /* \"#utility.yul\":5209:5230   */\n      tag_362\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":5204:5207   */\n      dup3\n        /* \"#utility.yul\":5197:5231   */\n      mstore\n        /* \"#utility.yul\":5128:5237   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5243:5453   */\n    tag_52:\n        /* \"#utility.yul\":5330:5334   */\n      0x00\n        /* \"#utility.yul\":5368:5370   */\n      0x20\n        /* \"#utility.yul\":5357:5366   */\n      dup3\n        /* \"#utility.yul\":5353:5371   */\n      add\n        /* \"#utility.yul\":5345:5371   */\n      swap1\n      pop\n        /* \"#utility.yul\":5381:5446   */\n      tag_468\n        /* \"#utility.yul\":5443:5444   */\n      0x00\n        /* \"#utility.yul\":5432:5441   */\n      dup4\n        /* \"#utility.yul\":5428:5445   */\n      add\n        /* \"#utility.yul\":5419:5425   */\n      dup5\n        /* \"#utility.yul\":5381:5446   */\n      tag_363\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":5243:5453   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5459:5788   */\n    tag_56:\n        /* \"#utility.yul\":5518:5524   */\n      0x00\n        /* \"#utility.yul\":5567:5569   */\n      0x20\n        /* \"#utility.yul\":5555:5564   */\n      dup3\n        /* \"#utility.yul\":5546:5553   */\n      dup5\n        /* \"#utility.yul\":5542:5565   */\n      sub\n        /* \"#utility.yul\":5538:5570   */\n      slt\n        /* \"#utility.yul\":5535:5654   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":5573:5652   */\n      tag_471\n      tag_355\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":5535:5654   */\n    tag_470:\n        /* \"#utility.yul\":5693:5694   */\n      0x00\n        /* \"#utility.yul\":5718:5771   */\n      tag_472\n        /* \"#utility.yul\":5763:5770   */\n      dup5\n        /* \"#utility.yul\":5754:5760   */\n      dup3\n        /* \"#utility.yul\":5743:5752   */\n      dup6\n        /* \"#utility.yul\":5739:5761   */\n      add\n        /* \"#utility.yul\":5718:5771   */\n      tag_358\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":5708:5771   */\n      swap2\n      pop\n        /* \"#utility.yul\":5664:5781   */\n      pop\n        /* \"#utility.yul\":5459:5788   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5794:5912   */\n    tag_364:\n        /* \"#utility.yul\":5881:5905   */\n      tag_474\n        /* \"#utility.yul\":5899:5904   */\n      dup2\n        /* \"#utility.yul\":5881:5905   */\n      tag_359\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":5876:5879   */\n      dup3\n        /* \"#utility.yul\":5869:5906   */\n      mstore\n        /* \"#utility.yul\":5794:5912   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5918:6140   */\n    tag_59:\n        /* \"#utility.yul\":6011:6015   */\n      0x00\n        /* \"#utility.yul\":6049:6051   */\n      0x20\n        /* \"#utility.yul\":6038:6047   */\n      dup3\n        /* \"#utility.yul\":6034:6052   */\n      add\n        /* \"#utility.yul\":6026:6052   */\n      swap1\n      pop\n        /* \"#utility.yul\":6062:6133   */\n      tag_476\n        /* \"#utility.yul\":6130:6131   */\n      0x00\n        /* \"#utility.yul\":6119:6128   */\n      dup4\n        /* \"#utility.yul\":6115:6132   */\n      add\n        /* \"#utility.yul\":6106:6112   */\n      dup5\n        /* \"#utility.yul\":6062:6133   */\n      tag_364\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":5918:6140   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6146:6765   */\n    tag_67:\n        /* \"#utility.yul\":6223:6229   */\n      0x00\n        /* \"#utility.yul\":6231:6237   */\n      dup1\n        /* \"#utility.yul\":6239:6245   */\n      0x00\n        /* \"#utility.yul\":6288:6290   */\n      0x60\n        /* \"#utility.yul\":6276:6285   */\n      dup5\n        /* \"#utility.yul\":6267:6274   */\n      dup7\n        /* \"#utility.yul\":6263:6286   */\n      sub\n        /* \"#utility.yul\":6259:6291   */\n      slt\n        /* \"#utility.yul\":6256:6375   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":6294:6373   */\n      tag_479\n      tag_355\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":6256:6375   */\n    tag_478:\n        /* \"#utility.yul\":6414:6415   */\n      0x00\n        /* \"#utility.yul\":6439:6492   */\n      tag_480\n        /* \"#utility.yul\":6484:6491   */\n      dup7\n        /* \"#utility.yul\":6475:6481   */\n      dup3\n        /* \"#utility.yul\":6464:6473   */\n      dup8\n        /* \"#utility.yul\":6460:6482   */\n      add\n        /* \"#utility.yul\":6439:6492   */\n      tag_358\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":6429:6492   */\n      swap4\n      pop\n        /* \"#utility.yul\":6385:6502   */\n      pop\n        /* \"#utility.yul\":6541:6543   */\n      0x20\n        /* \"#utility.yul\":6567:6620   */\n      tag_481\n        /* \"#utility.yul\":6612:6619   */\n      dup7\n        /* \"#utility.yul\":6603:6609   */\n      dup3\n        /* \"#utility.yul\":6592:6601   */\n      dup8\n        /* \"#utility.yul\":6588:6610   */\n      add\n        /* \"#utility.yul\":6567:6620   */\n      tag_358\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":6557:6620   */\n      swap3\n      pop\n        /* \"#utility.yul\":6512:6630   */\n      pop\n        /* \"#utility.yul\":6669:6671   */\n      0x40\n        /* \"#utility.yul\":6695:6748   */\n      tag_482\n        /* \"#utility.yul\":6740:6747   */\n      dup7\n        /* \"#utility.yul\":6731:6737   */\n      dup3\n        /* \"#utility.yul\":6720:6729   */\n      dup8\n        /* \"#utility.yul\":6716:6738   */\n      add\n        /* \"#utility.yul\":6695:6748   */\n      tag_361\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":6685:6748   */\n      swap2\n      pop\n        /* \"#utility.yul\":6640:6758   */\n      pop\n        /* \"#utility.yul\":6146:6765   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6771:6857   */\n    tag_365:\n        /* \"#utility.yul\":6806:6813   */\n      0x00\n        /* \"#utility.yul\":6846:6850   */\n      0xff\n        /* \"#utility.yul\":6839:6844   */\n      dup3\n        /* \"#utility.yul\":6835:6851   */\n      and\n        /* \"#utility.yul\":6824:6851   */\n      swap1\n      pop\n        /* \"#utility.yul\":6771:6857   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6863:6975   */\n    tag_366:\n        /* \"#utility.yul\":6946:6968   */\n      tag_485\n        /* \"#utility.yul\":6962:6967   */\n      dup2\n        /* \"#utility.yul\":6946:6968   */\n      tag_365\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":6941:6944   */\n      dup3\n        /* \"#utility.yul\":6934:6969   */\n      mstore\n        /* \"#utility.yul\":6863:6975   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6981:7195   */\n    tag_74:\n        /* \"#utility.yul\":7070:7074   */\n      0x00\n        /* \"#utility.yul\":7108:7110   */\n      0x20\n        /* \"#utility.yul\":7097:7106   */\n      dup3\n        /* \"#utility.yul\":7093:7111   */\n      add\n        /* \"#utility.yul\":7085:7111   */\n      swap1\n      pop\n        /* \"#utility.yul\":7121:7188   */\n      tag_487\n        /* \"#utility.yul\":7185:7186   */\n      0x00\n        /* \"#utility.yul\":7174:7183   */\n      dup4\n        /* \"#utility.yul\":7170:7187   */\n      add\n        /* \"#utility.yul\":7161:7167   */\n      dup5\n        /* \"#utility.yul\":7121:7188   */\n      tag_366\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":6981:7195   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7201:7530   */\n    tag_78:\n        /* \"#utility.yul\":7260:7266   */\n      0x00\n        /* \"#utility.yul\":7309:7311   */\n      0x20\n        /* \"#utility.yul\":7297:7306   */\n      dup3\n        /* \"#utility.yul\":7288:7295   */\n      dup5\n        /* \"#utility.yul\":7284:7307   */\n      sub\n        /* \"#utility.yul\":7280:7312   */\n      slt\n        /* \"#utility.yul\":7277:7396   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":7315:7394   */\n      tag_490\n      tag_355\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":7277:7396   */\n    tag_489:\n        /* \"#utility.yul\":7435:7436   */\n      0x00\n        /* \"#utility.yul\":7460:7513   */\n      tag_491\n        /* \"#utility.yul\":7505:7512   */\n      dup5\n        /* \"#utility.yul\":7496:7502   */\n      dup3\n        /* \"#utility.yul\":7485:7494   */\n      dup6\n        /* \"#utility.yul\":7481:7503   */\n      add\n        /* \"#utility.yul\":7460:7513   */\n      tag_361\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":7450:7513   */\n      swap2\n      pop\n        /* \"#utility.yul\":7406:7523   */\n      pop\n        /* \"#utility.yul\":7201:7530   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7536:7654   */\n    tag_367:\n        /* \"#utility.yul\":7623:7647   */\n      tag_493\n        /* \"#utility.yul\":7641:7646   */\n      dup2\n        /* \"#utility.yul\":7623:7647   */\n      tag_344\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":7618:7621   */\n      dup3\n        /* \"#utility.yul\":7611:7648   */\n      mstore\n        /* \"#utility.yul\":7536:7654   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7660:7882   */\n    tag_81:\n        /* \"#utility.yul\":7753:7757   */\n      0x00\n        /* \"#utility.yul\":7791:7793   */\n      0x20\n        /* \"#utility.yul\":7780:7789   */\n      dup3\n        /* \"#utility.yul\":7776:7794   */\n      add\n        /* \"#utility.yul\":7768:7794   */\n      swap1\n      pop\n        /* \"#utility.yul\":7804:7875   */\n      tag_495\n        /* \"#utility.yul\":7872:7873   */\n      0x00\n        /* \"#utility.yul\":7861:7870   */\n      dup4\n        /* \"#utility.yul\":7857:7874   */\n      add\n        /* \"#utility.yul\":7848:7854   */\n      dup5\n        /* \"#utility.yul\":7804:7875   */\n      tag_367\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":7660:7882   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7888:8005   */\n    tag_368:\n        /* \"#utility.yul\":7997:7998   */\n      0x00\n        /* \"#utility.yul\":7994:7995   */\n      dup1\n        /* \"#utility.yul\":7987:7999   */\n      revert\n        /* \"#utility.yul\":8011:8128   */\n    tag_369:\n        /* \"#utility.yul\":8120:8121   */\n      0x00\n        /* \"#utility.yul\":8117:8118   */\n      dup1\n        /* \"#utility.yul\":8110:8122   */\n      revert\n        /* \"#utility.yul\":8134:8251   */\n    tag_370:\n        /* \"#utility.yul\":8243:8244   */\n      0x00\n        /* \"#utility.yul\":8240:8241   */\n      dup1\n        /* \"#utility.yul\":8233:8245   */\n      revert\n        /* \"#utility.yul\":8270:8822   */\n    tag_371:\n        /* \"#utility.yul\":8327:8335   */\n      0x00\n        /* \"#utility.yul\":8337:8343   */\n      dup1\n        /* \"#utility.yul\":8387:8390   */\n      dup4\n        /* \"#utility.yul\":8380:8384   */\n      0x1f\n        /* \"#utility.yul\":8372:8378   */\n      dup5\n        /* \"#utility.yul\":8368:8385   */\n      add\n        /* \"#utility.yul\":8364:8391   */\n      slt\n        /* \"#utility.yul\":8354:8476   */\n      tag_500\n      jumpi\n        /* \"#utility.yul\":8395:8474   */\n      tag_501\n      tag_368\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":8354:8476   */\n    tag_500:\n        /* \"#utility.yul\":8508:8514   */\n      dup3\n        /* \"#utility.yul\":8495:8515   */\n      calldataload\n        /* \"#utility.yul\":8485:8515   */\n      swap1\n      pop\n        /* \"#utility.yul\":8538:8556   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8530:8536   */\n      dup2\n        /* \"#utility.yul\":8527:8557   */\n      gt\n        /* \"#utility.yul\":8524:8641   */\n      iszero\n      tag_502\n      jumpi\n        /* \"#utility.yul\":8560:8639   */\n      tag_503\n      tag_369\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":8524:8641   */\n    tag_502:\n        /* \"#utility.yul\":8674:8678   */\n      0x20\n        /* \"#utility.yul\":8666:8672   */\n      dup4\n        /* \"#utility.yul\":8662:8679   */\n      add\n        /* \"#utility.yul\":8650:8679   */\n      swap2\n      pop\n        /* \"#utility.yul\":8728:8731   */\n      dup4\n        /* \"#utility.yul\":8720:8724   */\n      0x01\n        /* \"#utility.yul\":8712:8718   */\n      dup3\n        /* \"#utility.yul\":8708:8725   */\n      mul\n        /* \"#utility.yul\":8698:8706   */\n      dup4\n        /* \"#utility.yul\":8694:8726   */\n      add\n        /* \"#utility.yul\":8691:8732   */\n      gt\n        /* \"#utility.yul\":8688:8816   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":8735:8814   */\n      tag_505\n      tag_370\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":8688:8816   */\n    tag_504:\n        /* \"#utility.yul\":8270:8822   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8828:9355   */\n    tag_85:\n        /* \"#utility.yul\":8898:8904   */\n      0x00\n        /* \"#utility.yul\":8906:8912   */\n      dup1\n        /* \"#utility.yul\":8955:8957   */\n      0x20\n        /* \"#utility.yul\":8943:8952   */\n      dup4\n        /* \"#utility.yul\":8934:8941   */\n      dup6\n        /* \"#utility.yul\":8930:8953   */\n      sub\n        /* \"#utility.yul\":8926:8958   */\n      slt\n        /* \"#utility.yul\":8923:9042   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":8961:9040   */\n      tag_508\n      tag_355\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":8923:9042   */\n    tag_507:\n        /* \"#utility.yul\":9109:9110   */\n      0x00\n        /* \"#utility.yul\":9098:9107   */\n      dup4\n        /* \"#utility.yul\":9094:9111   */\n      add\n        /* \"#utility.yul\":9081:9112   */\n      calldataload\n        /* \"#utility.yul\":9139:9157   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9131:9137   */\n      dup2\n        /* \"#utility.yul\":9128:9158   */\n      gt\n        /* \"#utility.yul\":9125:9242   */\n      iszero\n      tag_509\n      jumpi\n        /* \"#utility.yul\":9161:9240   */\n      tag_510\n      tag_356\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":9125:9242   */\n    tag_509:\n        /* \"#utility.yul\":9274:9338   */\n      tag_511\n        /* \"#utility.yul\":9330:9337   */\n      dup6\n        /* \"#utility.yul\":9321:9327   */\n      dup3\n        /* \"#utility.yul\":9310:9319   */\n      dup7\n        /* \"#utility.yul\":9306:9328   */\n      add\n        /* \"#utility.yul\":9274:9338   */\n      tag_371\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":9256:9338   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":9052:9348   */\n      pop\n        /* \"#utility.yul\":8828:9355   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9361:9693   */\n    tag_92:\n        /* \"#utility.yul\":9482:9486   */\n      0x00\n        /* \"#utility.yul\":9520:9522   */\n      0x40\n        /* \"#utility.yul\":9509:9518   */\n      dup3\n        /* \"#utility.yul\":9505:9523   */\n      add\n        /* \"#utility.yul\":9497:9523   */\n      swap1\n      pop\n        /* \"#utility.yul\":9533:9604   */\n      tag_513\n        /* \"#utility.yul\":9601:9602   */\n      0x00\n        /* \"#utility.yul\":9590:9599   */\n      dup4\n        /* \"#utility.yul\":9586:9603   */\n      add\n        /* \"#utility.yul\":9577:9583   */\n      dup6\n        /* \"#utility.yul\":9533:9604   */\n      tag_364\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":9614:9686   */\n      tag_514\n        /* \"#utility.yul\":9682:9684   */\n      0x20\n        /* \"#utility.yul\":9671:9680   */\n      dup4\n        /* \"#utility.yul\":9667:9685   */\n      add\n        /* \"#utility.yul\":9658:9664   */\n      dup5\n        /* \"#utility.yul\":9614:9686   */\n      tag_364\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":9361:9693   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9699:9797   */\n    tag_372:\n        /* \"#utility.yul\":9750:9756   */\n      0x00\n        /* \"#utility.yul\":9784:9789   */\n      dup2\n        /* \"#utility.yul\":9778:9790   */\n      mload\n        /* \"#utility.yul\":9768:9790   */\n      swap1\n      pop\n        /* \"#utility.yul\":9699:9797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9803:9971   */\n    tag_373:\n        /* \"#utility.yul\":9886:9897   */\n      0x00\n        /* \"#utility.yul\":9920:9926   */\n      dup3\n        /* \"#utility.yul\":9915:9918   */\n      dup3\n        /* \"#utility.yul\":9908:9927   */\n      mstore\n        /* \"#utility.yul\":9960:9964   */\n      0x20\n        /* \"#utility.yul\":9955:9958   */\n      dup3\n        /* \"#utility.yul\":9951:9965   */\n      add\n        /* \"#utility.yul\":9936:9965   */\n      swap1\n      pop\n        /* \"#utility.yul\":9803:9971   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9977:10350   */\n    tag_374:\n        /* \"#utility.yul\":10063:10066   */\n      0x00\n        /* \"#utility.yul\":10091:10129   */\n      tag_518\n        /* \"#utility.yul\":10123:10128   */\n      dup3\n        /* \"#utility.yul\":10091:10129   */\n      tag_372\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":10145:10215   */\n      tag_519\n        /* \"#utility.yul\":10208:10214   */\n      dup2\n        /* \"#utility.yul\":10203:10206   */\n      dup6\n        /* \"#utility.yul\":10145:10215   */\n      tag_373\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":10138:10215   */\n      swap4\n      pop\n        /* \"#utility.yul\":10224:10289   */\n      tag_520\n        /* \"#utility.yul\":10282:10288   */\n      dup2\n        /* \"#utility.yul\":10277:10280   */\n      dup6\n        /* \"#utility.yul\":10270:10274   */\n      0x20\n        /* \"#utility.yul\":10263:10268   */\n      dup7\n        /* \"#utility.yul\":10259:10275   */\n      add\n        /* \"#utility.yul\":10224:10289   */\n      tag_351\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":10314:10343   */\n      tag_521\n        /* \"#utility.yul\":10336:10342   */\n      dup2\n        /* \"#utility.yul\":10314:10343   */\n      tag_352\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":10309:10312   */\n      dup5\n        /* \"#utility.yul\":10305:10344   */\n      add\n        /* \"#utility.yul\":10298:10344   */\n      swap2\n      pop\n        /* \"#utility.yul\":10067:10350   */\n      pop\n        /* \"#utility.yul\":9977:10350   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10356:10763   */\n    tag_104:\n        /* \"#utility.yul\":10489:10493   */\n      0x00\n        /* \"#utility.yul\":10527:10529   */\n      0x40\n        /* \"#utility.yul\":10516:10525   */\n      dup3\n        /* \"#utility.yul\":10512:10530   */\n      add\n        /* \"#utility.yul\":10504:10530   */\n      swap1\n      pop\n        /* \"#utility.yul\":10540:10605   */\n      tag_523\n        /* \"#utility.yul\":10602:10603   */\n      0x00\n        /* \"#utility.yul\":10591:10600   */\n      dup4\n        /* \"#utility.yul\":10587:10604   */\n      add\n        /* \"#utility.yul\":10578:10584   */\n      dup6\n        /* \"#utility.yul\":10540:10605   */\n      tag_363\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":10652:10661   */\n      dup2\n        /* \"#utility.yul\":10646:10650   */\n      dup2\n        /* \"#utility.yul\":10642:10662   */\n      sub\n        /* \"#utility.yul\":10637:10639   */\n      0x20\n        /* \"#utility.yul\":10626:10635   */\n      dup4\n        /* \"#utility.yul\":10622:10640   */\n      add\n        /* \"#utility.yul\":10615:10663   */\n      mstore\n        /* \"#utility.yul\":10680:10756   */\n      tag_524\n        /* \"#utility.yul\":10751:10755   */\n      dup2\n        /* \"#utility.yul\":10742:10748   */\n      dup5\n        /* \"#utility.yul\":10680:10756   */\n      tag_374\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":10672:10756   */\n      swap1\n      pop\n        /* \"#utility.yul\":10356:10763   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10769:10829   */\n    tag_375:\n        /* \"#utility.yul\":10797:10800   */\n      0x00\n        /* \"#utility.yul\":10818:10823   */\n      dup2\n        /* \"#utility.yul\":10811:10823   */\n      swap1\n      pop\n        /* \"#utility.yul\":10769:10829   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10835:10977   */\n    tag_376:\n        /* \"#utility.yul\":10885:10894   */\n      0x00\n        /* \"#utility.yul\":10918:10971   */\n      tag_527\n        /* \"#utility.yul\":10936:10970   */\n      tag_528\n        /* \"#utility.yul\":10945:10969   */\n      tag_529\n        /* \"#utility.yul\":10963:10968   */\n      dup5\n        /* \"#utility.yul\":10945:10969   */\n      tag_343\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":10936:10970   */\n      tag_375\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":10918:10971   */\n      tag_343\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":10905:10971   */\n      swap1\n      pop\n        /* \"#utility.yul\":10835:10977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10983:11109   */\n    tag_377:\n        /* \"#utility.yul\":11033:11042   */\n      0x00\n        /* \"#utility.yul\":11066:11103   */\n      tag_531\n        /* \"#utility.yul\":11097:11102   */\n      dup3\n        /* \"#utility.yul\":11066:11103   */\n      tag_376\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":11053:11103   */\n      swap1\n      pop\n        /* \"#utility.yul\":10983:11109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11115:11270   */\n    tag_378:\n        /* \"#utility.yul\":11194:11203   */\n      0x00\n        /* \"#utility.yul\":11227:11264   */\n      tag_533\n        /* \"#utility.yul\":11258:11263   */\n      dup3\n        /* \"#utility.yul\":11227:11264   */\n      tag_377\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":11214:11264   */\n      swap1\n      pop\n        /* \"#utility.yul\":11115:11270   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11276:11465   */\n    tag_379:\n        /* \"#utility.yul\":11392:11458   */\n      tag_535\n        /* \"#utility.yul\":11452:11457   */\n      dup2\n        /* \"#utility.yul\":11392:11458   */\n      tag_378\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":11387:11390   */\n      dup3\n        /* \"#utility.yul\":11380:11459   */\n      mstore\n        /* \"#utility.yul\":11276:11465   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11471:11751   */\n    tag_114:\n        /* \"#utility.yul\":11593:11597   */\n      0x00\n        /* \"#utility.yul\":11631:11633   */\n      0x20\n        /* \"#utility.yul\":11620:11629   */\n      dup3\n        /* \"#utility.yul\":11616:11634   */\n      add\n        /* \"#utility.yul\":11608:11634   */\n      swap1\n      pop\n        /* \"#utility.yul\":11644:11744   */\n      tag_537\n        /* \"#utility.yul\":11741:11742   */\n      0x00\n        /* \"#utility.yul\":11730:11739   */\n      dup4\n        /* \"#utility.yul\":11726:11743   */\n      add\n        /* \"#utility.yul\":11717:11723   */\n      dup5\n        /* \"#utility.yul\":11644:11744   */\n      tag_379\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":11471:11751   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11757:12231   */\n    tag_153:\n        /* \"#utility.yul\":11825:11831   */\n      0x00\n        /* \"#utility.yul\":11833:11839   */\n      dup1\n        /* \"#utility.yul\":11882:11884   */\n      0x40\n        /* \"#utility.yul\":11870:11879   */\n      dup4\n        /* \"#utility.yul\":11861:11868   */\n      dup6\n        /* \"#utility.yul\":11857:11880   */\n      sub\n        /* \"#utility.yul\":11853:11885   */\n      slt\n        /* \"#utility.yul\":11850:11969   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":11888:11967   */\n      tag_540\n      tag_355\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":11850:11969   */\n    tag_539:\n        /* \"#utility.yul\":12008:12009   */\n      0x00\n        /* \"#utility.yul\":12033:12086   */\n      tag_541\n        /* \"#utility.yul\":12078:12085   */\n      dup6\n        /* \"#utility.yul\":12069:12075   */\n      dup3\n        /* \"#utility.yul\":12058:12067   */\n      dup7\n        /* \"#utility.yul\":12054:12076   */\n      add\n        /* \"#utility.yul\":12033:12086   */\n      tag_358\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":12023:12086   */\n      swap3\n      pop\n        /* \"#utility.yul\":11979:12096   */\n      pop\n        /* \"#utility.yul\":12135:12137   */\n      0x20\n        /* \"#utility.yul\":12161:12214   */\n      tag_542\n        /* \"#utility.yul\":12206:12213   */\n      dup6\n        /* \"#utility.yul\":12197:12203   */\n      dup3\n        /* \"#utility.yul\":12186:12195   */\n      dup7\n        /* \"#utility.yul\":12182:12204   */\n      add\n        /* \"#utility.yul\":12161:12214   */\n      tag_358\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":12151:12214   */\n      swap2\n      pop\n        /* \"#utility.yul\":12106:12224   */\n      pop\n        /* \"#utility.yul\":11757:12231   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12237:12417   */\n    tag_380:\n        /* \"#utility.yul\":12285:12362   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12282:12283   */\n      0x00\n        /* \"#utility.yul\":12275:12363   */\n      mstore\n        /* \"#utility.yul\":12382:12386   */\n      0x22\n        /* \"#utility.yul\":12379:12380   */\n      0x04\n        /* \"#utility.yul\":12372:12387   */\n      mstore\n        /* \"#utility.yul\":12406:12410   */\n      0x24\n        /* \"#utility.yul\":12403:12404   */\n      0x00\n        /* \"#utility.yul\":12396:12411   */\n      revert\n        /* \"#utility.yul\":12423:12743   */\n    tag_170:\n        /* \"#utility.yul\":12467:12473   */\n      0x00\n        /* \"#utility.yul\":12504:12505   */\n      0x02\n        /* \"#utility.yul\":12498:12502   */\n      dup3\n        /* \"#utility.yul\":12494:12506   */\n      div\n        /* \"#utility.yul\":12484:12506   */\n      swap1\n      pop\n        /* \"#utility.yul\":12551:12552   */\n      0x01\n        /* \"#utility.yul\":12545:12549   */\n      dup3\n        /* \"#utility.yul\":12541:12553   */\n      and\n        /* \"#utility.yul\":12572:12590   */\n      dup1\n        /* \"#utility.yul\":12562:12643   */\n      tag_545\n      jumpi\n        /* \"#utility.yul\":12628:12632   */\n      0x7f\n        /* \"#utility.yul\":12620:12626   */\n      dup3\n        /* \"#utility.yul\":12616:12633   */\n      and\n        /* \"#utility.yul\":12606:12633   */\n      swap2\n      pop\n        /* \"#utility.yul\":12562:12643   */\n    tag_545:\n        /* \"#utility.yul\":12690:12692   */\n      0x20\n        /* \"#utility.yul\":12682:12688   */\n      dup3\n        /* \"#utility.yul\":12679:12693   */\n      lt\n        /* \"#utility.yul\":12659:12677   */\n      dup2\n        /* \"#utility.yul\":12656:12694   */\n      sub\n        /* \"#utility.yul\":12653:12737   */\n      tag_546\n      jumpi\n        /* \"#utility.yul\":12709:12727   */\n      tag_547\n      tag_380\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":12653:12737   */\n    tag_546:\n        /* \"#utility.yul\":12474:12743   */\n      pop\n        /* \"#utility.yul\":12423:12743   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12749:12929   */\n    tag_381:\n        /* \"#utility.yul\":12797:12874   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12794:12795   */\n      0x00\n        /* \"#utility.yul\":12787:12875   */\n      mstore\n        /* \"#utility.yul\":12894:12898   */\n      0x12\n        /* \"#utility.yul\":12891:12892   */\n      0x04\n        /* \"#utility.yul\":12884:12899   */\n      mstore\n        /* \"#utility.yul\":12918:12922   */\n      0x24\n        /* \"#utility.yul\":12915:12916   */\n      0x00\n        /* \"#utility.yul\":12908:12923   */\n      revert\n        /* \"#utility.yul\":12935:13115   */\n    tag_382:\n        /* \"#utility.yul\":12983:13060   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12980:12981   */\n      0x00\n        /* \"#utility.yul\":12973:13061   */\n      mstore\n        /* \"#utility.yul\":13080:13084   */\n      0x11\n        /* \"#utility.yul\":13077:13078   */\n      0x04\n        /* \"#utility.yul\":13070:13085   */\n      mstore\n        /* \"#utility.yul\":13104:13108   */\n      0x24\n        /* \"#utility.yul\":13101:13102   */\n      0x00\n        /* \"#utility.yul\":13094:13109   */\n      revert\n        /* \"#utility.yul\":13121:13306   */\n    tag_184:\n        /* \"#utility.yul\":13161:13162   */\n      0x00\n        /* \"#utility.yul\":13178:13198   */\n      tag_551\n        /* \"#utility.yul\":13196:13197   */\n      dup3\n        /* \"#utility.yul\":13178:13198   */\n      tag_359\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":13173:13198   */\n      swap2\n      pop\n        /* \"#utility.yul\":13212:13232   */\n      tag_552\n        /* \"#utility.yul\":13230:13231   */\n      dup4\n        /* \"#utility.yul\":13212:13232   */\n      tag_359\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":13207:13232   */\n      swap3\n      pop\n        /* \"#utility.yul\":13251:13252   */\n      dup3\n        /* \"#utility.yul\":13241:13276   */\n      tag_553\n      jumpi\n        /* \"#utility.yul\":13256:13274   */\n      tag_554\n      tag_381\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":13241:13276   */\n    tag_553:\n        /* \"#utility.yul\":13298:13299   */\n      dup3\n        /* \"#utility.yul\":13295:13296   */\n      dup3\n        /* \"#utility.yul\":13291:13300   */\n      div\n        /* \"#utility.yul\":13286:13300   */\n      swap1\n      pop\n        /* \"#utility.yul\":13121:13306   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13312:13416   */\n    tag_383:\n        /* \"#utility.yul\":13357:13364   */\n      0x00\n        /* \"#utility.yul\":13386:13410   */\n      tag_556\n        /* \"#utility.yul\":13404:13409   */\n      dup3\n        /* \"#utility.yul\":13386:13410   */\n      tag_343\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":13375:13410   */\n      swap1\n      pop\n        /* \"#utility.yul\":13312:13416   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13422:13560   */\n    tag_384:\n        /* \"#utility.yul\":13503:13535   */\n      tag_558\n        /* \"#utility.yul\":13529:13534   */\n      dup2\n        /* \"#utility.yul\":13503:13535   */\n      tag_383\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":13496:13501   */\n      dup2\n        /* \"#utility.yul\":13493:13536   */\n      eq\n        /* \"#utility.yul\":13483:13554   */\n      tag_559\n      jumpi\n        /* \"#utility.yul\":13550:13551   */\n      0x00\n        /* \"#utility.yul\":13547:13548   */\n      dup1\n        /* \"#utility.yul\":13540:13552   */\n      revert\n        /* \"#utility.yul\":13483:13554   */\n    tag_559:\n        /* \"#utility.yul\":13422:13560   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13566:13721   */\n    tag_385:\n        /* \"#utility.yul\":13620:13625   */\n      0x00\n        /* \"#utility.yul\":13658:13664   */\n      dup2\n        /* \"#utility.yul\":13645:13665   */\n      calldataload\n        /* \"#utility.yul\":13636:13665   */\n      swap1\n      pop\n        /* \"#utility.yul\":13674:13715   */\n      tag_561\n        /* \"#utility.yul\":13709:13714   */\n      dup2\n        /* \"#utility.yul\":13674:13715   */\n      tag_384\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":13566:13721   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13727:14072   */\n    tag_197:\n        /* \"#utility.yul\":13794:13800   */\n      0x00\n        /* \"#utility.yul\":13843:13845   */\n      0x20\n        /* \"#utility.yul\":13831:13840   */\n      dup3\n        /* \"#utility.yul\":13822:13829   */\n      dup5\n        /* \"#utility.yul\":13818:13841   */\n      sub\n        /* \"#utility.yul\":13814:13846   */\n      slt\n        /* \"#utility.yul\":13811:13930   */\n      iszero\n      tag_563\n      jumpi\n        /* \"#utility.yul\":13849:13928   */\n      tag_564\n      tag_355\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":13811:13930   */\n    tag_563:\n        /* \"#utility.yul\":13969:13970   */\n      0x00\n        /* \"#utility.yul\":13994:14055   */\n      tag_565\n        /* \"#utility.yul\":14047:14054   */\n      dup5\n        /* \"#utility.yul\":14038:14044   */\n      dup3\n        /* \"#utility.yul\":14027:14036   */\n      dup6\n        /* \"#utility.yul\":14023:14045   */\n      add\n        /* \"#utility.yul\":13994:14055   */\n      tag_385\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":13984:14055   */\n      swap2\n      pop\n        /* \"#utility.yul\":13940:14065   */\n      pop\n        /* \"#utility.yul\":13727:14072   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14078:14249   */\n    tag_386:\n        /* \"#utility.yul\":14218:14241   */\n      0x55736572206e6f74206c6971756964617461626c650000000000000000000000\n        /* \"#utility.yul\":14214:14215   */\n      0x00\n        /* \"#utility.yul\":14206:14212   */\n      dup3\n        /* \"#utility.yul\":14202:14216   */\n      add\n        /* \"#utility.yul\":14195:14242   */\n      mstore\n        /* \"#utility.yul\":14078:14249   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14255:14621   */\n    tag_387:\n        /* \"#utility.yul\":14397:14400   */\n      0x00\n        /* \"#utility.yul\":14418:14485   */\n      tag_568\n        /* \"#utility.yul\":14482:14484   */\n      0x15\n        /* \"#utility.yul\":14477:14480   */\n      dup4\n        /* \"#utility.yul\":14418:14485   */\n      tag_350\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":14411:14485   */\n      swap2\n      pop\n        /* \"#utility.yul\":14494:14587   */\n      tag_569\n        /* \"#utility.yul\":14583:14586   */\n      dup3\n        /* \"#utility.yul\":14494:14587   */\n      tag_386\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":14612:14614   */\n      0x20\n        /* \"#utility.yul\":14607:14610   */\n      dup3\n        /* \"#utility.yul\":14603:14615   */\n      add\n        /* \"#utility.yul\":14596:14615   */\n      swap1\n      pop\n        /* \"#utility.yul\":14255:14621   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14627:15046   */\n    tag_201:\n        /* \"#utility.yul\":14793:14797   */\n      0x00\n        /* \"#utility.yul\":14831:14833   */\n      0x20\n        /* \"#utility.yul\":14820:14829   */\n      dup3\n        /* \"#utility.yul\":14816:14834   */\n      add\n        /* \"#utility.yul\":14808:14834   */\n      swap1\n      pop\n        /* \"#utility.yul\":14880:14889   */\n      dup2\n        /* \"#utility.yul\":14874:14878   */\n      dup2\n        /* \"#utility.yul\":14870:14890   */\n      sub\n        /* \"#utility.yul\":14866:14867   */\n      0x00\n        /* \"#utility.yul\":14855:14864   */\n      dup4\n        /* \"#utility.yul\":14851:14868   */\n      add\n        /* \"#utility.yul\":14844:14891   */\n      mstore\n        /* \"#utility.yul\":14908:15039   */\n      tag_571\n        /* \"#utility.yul\":15034:15038   */\n      dup2\n        /* \"#utility.yul\":14908:15039   */\n      tag_387\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":14900:15039   */\n      swap1\n      pop\n        /* \"#utility.yul\":14627:15046   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15052:15218   */\n    tag_388:\n        /* \"#utility.yul\":15192:15210   */\n      0x4d757374206465706f7369742045544800000000000000000000000000000000\n        /* \"#utility.yul\":15188:15189   */\n      0x00\n        /* \"#utility.yul\":15180:15186   */\n      dup3\n        /* \"#utility.yul\":15176:15190   */\n      add\n        /* \"#utility.yul\":15169:15211   */\n      mstore\n        /* \"#utility.yul\":15052:15218   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15224:15590   */\n    tag_389:\n        /* \"#utility.yul\":15366:15369   */\n      0x00\n        /* \"#utility.yul\":15387:15454   */\n      tag_574\n        /* \"#utility.yul\":15451:15453   */\n      0x10\n        /* \"#utility.yul\":15446:15449   */\n      dup4\n        /* \"#utility.yul\":15387:15454   */\n      tag_350\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":15380:15454   */\n      swap2\n      pop\n        /* \"#utility.yul\":15463:15556   */\n      tag_575\n        /* \"#utility.yul\":15552:15555   */\n      dup3\n        /* \"#utility.yul\":15463:15556   */\n      tag_388\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":15581:15583   */\n      0x20\n        /* \"#utility.yul\":15576:15579   */\n      dup3\n        /* \"#utility.yul\":15572:15584   */\n      add\n        /* \"#utility.yul\":15565:15584   */\n      swap1\n      pop\n        /* \"#utility.yul\":15224:15590   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15596:16015   */\n    tag_210:\n        /* \"#utility.yul\":15762:15766   */\n      0x00\n        /* \"#utility.yul\":15800:15802   */\n      0x20\n        /* \"#utility.yul\":15789:15798   */\n      dup3\n        /* \"#utility.yul\":15785:15803   */\n      add\n        /* \"#utility.yul\":15777:15803   */\n      swap1\n      pop\n        /* \"#utility.yul\":15849:15858   */\n      dup2\n        /* \"#utility.yul\":15843:15847   */\n      dup2\n        /* \"#utility.yul\":15839:15859   */\n      sub\n        /* \"#utility.yul\":15835:15836   */\n      0x00\n        /* \"#utility.yul\":15824:15833   */\n      dup4\n        /* \"#utility.yul\":15820:15837   */\n      add\n        /* \"#utility.yul\":15813:15860   */\n      mstore\n        /* \"#utility.yul\":15877:16008   */\n      tag_577\n        /* \"#utility.yul\":16003:16007   */\n      dup2\n        /* \"#utility.yul\":15877:16008   */\n      tag_389\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":15869:16008   */\n      swap1\n      pop\n        /* \"#utility.yul\":15596:16015   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16021:16212   */\n    tag_218:\n        /* \"#utility.yul\":16061:16064   */\n      0x00\n        /* \"#utility.yul\":16080:16100   */\n      tag_579\n        /* \"#utility.yul\":16098:16099   */\n      dup3\n        /* \"#utility.yul\":16080:16100   */\n      tag_359\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":16075:16100   */\n      swap2\n      pop\n        /* \"#utility.yul\":16114:16134   */\n      tag_580\n        /* \"#utility.yul\":16132:16133   */\n      dup4\n        /* \"#utility.yul\":16114:16134   */\n      tag_359\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":16109:16134   */\n      swap3\n      pop\n        /* \"#utility.yul\":16157:16158   */\n      dup3\n        /* \"#utility.yul\":16154:16155   */\n      dup3\n        /* \"#utility.yul\":16150:16159   */\n      add\n        /* \"#utility.yul\":16143:16159   */\n      swap1\n      pop\n        /* \"#utility.yul\":16178:16181   */\n      dup1\n        /* \"#utility.yul\":16175:16176   */\n      dup3\n        /* \"#utility.yul\":16172:16182   */\n      gt\n        /* \"#utility.yul\":16169:16205   */\n      iszero\n      tag_581\n      jumpi\n        /* \"#utility.yul\":16185:16203   */\n      tag_582\n      tag_382\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":16169:16205   */\n    tag_581:\n        /* \"#utility.yul\":16021:16212   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16218:16398   */\n    tag_227:\n        /* \"#utility.yul\":16266:16343   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16263:16264   */\n      0x00\n        /* \"#utility.yul\":16256:16344   */\n      mstore\n        /* \"#utility.yul\":16363:16367   */\n      0x32\n        /* \"#utility.yul\":16360:16361   */\n      0x04\n        /* \"#utility.yul\":16353:16368   */\n      mstore\n        /* \"#utility.yul\":16387:16391   */\n      0x24\n        /* \"#utility.yul\":16384:16385   */\n      0x00\n        /* \"#utility.yul\":16377:16392   */\n      revert\n        /* \"#utility.yul\":16404:16572   */\n    tag_390:\n        /* \"#utility.yul\":16544:16564   */\n      0x496e73756666696369656e742054415653540000000000000000000000000000\n        /* \"#utility.yul\":16540:16541   */\n      0x00\n        /* \"#utility.yul\":16532:16538   */\n      dup3\n        /* \"#utility.yul\":16528:16542   */\n      add\n        /* \"#utility.yul\":16521:16565   */\n      mstore\n        /* \"#utility.yul\":16404:16572   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16578:16944   */\n    tag_391:\n        /* \"#utility.yul\":16720:16723   */\n      0x00\n        /* \"#utility.yul\":16741:16808   */\n      tag_586\n        /* \"#utility.yul\":16805:16807   */\n      0x12\n        /* \"#utility.yul\":16800:16803   */\n      dup4\n        /* \"#utility.yul\":16741:16808   */\n      tag_350\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":16734:16808   */\n      swap2\n      pop\n        /* \"#utility.yul\":16817:16910   */\n      tag_587\n        /* \"#utility.yul\":16906:16909   */\n      dup3\n        /* \"#utility.yul\":16817:16910   */\n      tag_390\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":16935:16937   */\n      0x20\n        /* \"#utility.yul\":16930:16933   */\n      dup3\n        /* \"#utility.yul\":16926:16938   */\n      add\n        /* \"#utility.yul\":16919:16938   */\n      swap1\n      pop\n        /* \"#utility.yul\":16578:16944   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16950:17369   */\n    tag_237:\n        /* \"#utility.yul\":17116:17120   */\n      0x00\n        /* \"#utility.yul\":17154:17156   */\n      0x20\n        /* \"#utility.yul\":17143:17152   */\n      dup3\n        /* \"#utility.yul\":17139:17157   */\n      add\n        /* \"#utility.yul\":17131:17157   */\n      swap1\n      pop\n        /* \"#utility.yul\":17203:17212   */\n      dup2\n        /* \"#utility.yul\":17197:17201   */\n      dup2\n        /* \"#utility.yul\":17193:17213   */\n      sub\n        /* \"#utility.yul\":17189:17190   */\n      0x00\n        /* \"#utility.yul\":17178:17187   */\n      dup4\n        /* \"#utility.yul\":17174:17191   */\n      add\n        /* \"#utility.yul\":17167:17214   */\n      mstore\n        /* \"#utility.yul\":17231:17362   */\n      tag_589\n        /* \"#utility.yul\":17357:17361   */\n      dup2\n        /* \"#utility.yul\":17231:17362   */\n      tag_391\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":17223:17362   */\n      swap1\n      pop\n        /* \"#utility.yul\":16950:17369   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17375:17546   */\n    tag_392:\n        /* \"#utility.yul\":17515:17538   */\n      0x4e6f7420656e6f75676820636f6c6c61746572616c0000000000000000000000\n        /* \"#utility.yul\":17511:17512   */\n      0x00\n        /* \"#utility.yul\":17503:17509   */\n      dup3\n        /* \"#utility.yul\":17499:17513   */\n      add\n        /* \"#utility.yul\":17492:17539   */\n      mstore\n        /* \"#utility.yul\":17375:17546   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17552:17918   */\n    tag_393:\n        /* \"#utility.yul\":17694:17697   */\n      0x00\n        /* \"#utility.yul\":17715:17782   */\n      tag_592\n        /* \"#utility.yul\":17779:17781   */\n      0x15\n        /* \"#utility.yul\":17774:17777   */\n      dup4\n        /* \"#utility.yul\":17715:17782   */\n      tag_350\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":17708:17782   */\n      swap2\n      pop\n        /* \"#utility.yul\":17791:17884   */\n      tag_593\n        /* \"#utility.yul\":17880:17883   */\n      dup3\n        /* \"#utility.yul\":17791:17884   */\n      tag_392\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":17909:17911   */\n      0x20\n        /* \"#utility.yul\":17904:17907   */\n      dup3\n        /* \"#utility.yul\":17900:17912   */\n      add\n        /* \"#utility.yul\":17893:17912   */\n      swap1\n      pop\n        /* \"#utility.yul\":17552:17918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17924:18343   */\n    tag_241:\n        /* \"#utility.yul\":18090:18094   */\n      0x00\n        /* \"#utility.yul\":18128:18130   */\n      0x20\n        /* \"#utility.yul\":18117:18126   */\n      dup3\n        /* \"#utility.yul\":18113:18131   */\n      add\n        /* \"#utility.yul\":18105:18131   */\n      swap1\n      pop\n        /* \"#utility.yul\":18177:18186   */\n      dup2\n        /* \"#utility.yul\":18171:18175   */\n      dup2\n        /* \"#utility.yul\":18167:18187   */\n      sub\n        /* \"#utility.yul\":18163:18164   */\n      0x00\n        /* \"#utility.yul\":18152:18161   */\n      dup4\n        /* \"#utility.yul\":18148:18165   */\n      add\n        /* \"#utility.yul\":18141:18188   */\n      mstore\n        /* \"#utility.yul\":18205:18336   */\n      tag_595\n        /* \"#utility.yul\":18331:18335   */\n      dup2\n        /* \"#utility.yul\":18205:18336   */\n      tag_393\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":18197:18336   */\n      swap1\n      pop\n        /* \"#utility.yul\":17924:18343   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18349:18543   */\n    tag_243:\n        /* \"#utility.yul\":18389:18393   */\n      0x00\n        /* \"#utility.yul\":18409:18429   */\n      tag_597\n        /* \"#utility.yul\":18427:18428   */\n      dup3\n        /* \"#utility.yul\":18409:18429   */\n      tag_359\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":18404:18429   */\n      swap2\n      pop\n        /* \"#utility.yul\":18443:18463   */\n      tag_598\n        /* \"#utility.yul\":18461:18462   */\n      dup4\n        /* \"#utility.yul\":18443:18463   */\n      tag_359\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":18438:18463   */\n      swap3\n      pop\n        /* \"#utility.yul\":18487:18488   */\n      dup3\n        /* \"#utility.yul\":18484:18485   */\n      dup3\n        /* \"#utility.yul\":18480:18489   */\n      sub\n        /* \"#utility.yul\":18472:18489   */\n      swap1\n      pop\n        /* \"#utility.yul\":18511:18512   */\n      dup2\n        /* \"#utility.yul\":18505:18509   */\n      dup2\n        /* \"#utility.yul\":18502:18513   */\n      gt\n        /* \"#utility.yul\":18499:18536   */\n      iszero\n      tag_599\n      jumpi\n        /* \"#utility.yul\":18516:18534   */\n      tag_600\n      tag_382\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":18499:18536   */\n    tag_599:\n        /* \"#utility.yul\":18349:18543   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18549:18654   */\n    tag_394:\n        /* \"#utility.yul\":18585:18592   */\n      0x00\n        /* \"#utility.yul\":18625:18647   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":18618:18623   */\n      dup3\n        /* \"#utility.yul\":18614:18648   */\n      and\n        /* \"#utility.yul\":18603:18648   */\n      swap1\n      pop\n        /* \"#utility.yul\":18549:18654   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18660:18780   */\n    tag_395:\n        /* \"#utility.yul\":18732:18755   */\n      tag_603\n        /* \"#utility.yul\":18749:18754   */\n      dup2\n        /* \"#utility.yul\":18732:18755   */\n      tag_394\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":18725:18730   */\n      dup2\n        /* \"#utility.yul\":18722:18756   */\n      eq\n        /* \"#utility.yul\":18712:18774   */\n      tag_604\n      jumpi\n        /* \"#utility.yul\":18770:18771   */\n      0x00\n        /* \"#utility.yul\":18767:18768   */\n      dup1\n        /* \"#utility.yul\":18760:18772   */\n      revert\n        /* \"#utility.yul\":18712:18774   */\n    tag_604:\n        /* \"#utility.yul\":18660:18780   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18786:18927   */\n    tag_396:\n        /* \"#utility.yul\":18842:18847   */\n      0x00\n        /* \"#utility.yul\":18873:18879   */\n      dup2\n        /* \"#utility.yul\":18867:18880   */\n      mload\n        /* \"#utility.yul\":18858:18880   */\n      swap1\n      pop\n        /* \"#utility.yul\":18889:18921   */\n      tag_606\n        /* \"#utility.yul\":18915:18920   */\n      dup2\n        /* \"#utility.yul\":18889:18921   */\n      tag_395\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":18786:18927   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18933:19009   */\n    tag_397:\n        /* \"#utility.yul\":18969:18976   */\n      0x00\n        /* \"#utility.yul\":18998:19003   */\n      dup2\n        /* \"#utility.yul\":18987:19003   */\n      swap1\n      pop\n        /* \"#utility.yul\":18933:19009   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19015:19135   */\n    tag_398:\n        /* \"#utility.yul\":19087:19110   */\n      tag_609\n        /* \"#utility.yul\":19104:19109   */\n      dup2\n        /* \"#utility.yul\":19087:19110   */\n      tag_397\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":19080:19085   */\n      dup2\n        /* \"#utility.yul\":19077:19111   */\n      eq\n        /* \"#utility.yul\":19067:19129   */\n      tag_610\n      jumpi\n        /* \"#utility.yul\":19125:19126   */\n      0x00\n        /* \"#utility.yul\":19122:19123   */\n      dup1\n        /* \"#utility.yul\":19115:19127   */\n      revert\n        /* \"#utility.yul\":19067:19129   */\n    tag_610:\n        /* \"#utility.yul\":19015:19135   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19141:19282   */\n    tag_399:\n        /* \"#utility.yul\":19197:19202   */\n      0x00\n        /* \"#utility.yul\":19228:19234   */\n      dup2\n        /* \"#utility.yul\":19222:19235   */\n      mload\n        /* \"#utility.yul\":19213:19235   */\n      swap1\n      pop\n        /* \"#utility.yul\":19244:19276   */\n      tag_612\n        /* \"#utility.yul\":19270:19275   */\n      dup2\n        /* \"#utility.yul\":19244:19276   */\n      tag_398\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":19141:19282   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19288:19431   */\n    tag_400:\n        /* \"#utility.yul\":19345:19350   */\n      0x00\n        /* \"#utility.yul\":19376:19382   */\n      dup2\n        /* \"#utility.yul\":19370:19383   */\n      mload\n        /* \"#utility.yul\":19361:19383   */\n      swap1\n      pop\n        /* \"#utility.yul\":19392:19425   */\n      tag_614\n        /* \"#utility.yul\":19419:19424   */\n      dup2\n        /* \"#utility.yul\":19392:19425   */\n      tag_360\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":19288:19431   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19437:20408   */\n    tag_253:\n        /* \"#utility.yul\":19540:19546   */\n      0x00\n        /* \"#utility.yul\":19548:19554   */\n      dup1\n        /* \"#utility.yul\":19556:19562   */\n      0x00\n        /* \"#utility.yul\":19564:19570   */\n      dup1\n        /* \"#utility.yul\":19572:19578   */\n      0x00\n        /* \"#utility.yul\":19621:19624   */\n      0xa0\n        /* \"#utility.yul\":19609:19618   */\n      dup7\n        /* \"#utility.yul\":19600:19607   */\n      dup9\n        /* \"#utility.yul\":19596:19619   */\n      sub\n        /* \"#utility.yul\":19592:19625   */\n      slt\n        /* \"#utility.yul\":19589:19709   */\n      iszero\n      tag_616\n      jumpi\n        /* \"#utility.yul\":19628:19707   */\n      tag_617\n      tag_355\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":19589:19709   */\n    tag_616:\n        /* \"#utility.yul\":19748:19749   */\n      0x00\n        /* \"#utility.yul\":19773:19836   */\n      tag_618\n        /* \"#utility.yul\":19828:19835   */\n      dup9\n        /* \"#utility.yul\":19819:19825   */\n      dup3\n        /* \"#utility.yul\":19808:19817   */\n      dup10\n        /* \"#utility.yul\":19804:19826   */\n      add\n        /* \"#utility.yul\":19773:19836   */\n      tag_396\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":19763:19836   */\n      swap6\n      pop\n        /* \"#utility.yul\":19719:19846   */\n      pop\n        /* \"#utility.yul\":19885:19887   */\n      0x20\n        /* \"#utility.yul\":19911:19974   */\n      tag_619\n        /* \"#utility.yul\":19966:19973   */\n      dup9\n        /* \"#utility.yul\":19957:19963   */\n      dup3\n        /* \"#utility.yul\":19946:19955   */\n      dup10\n        /* \"#utility.yul\":19942:19964   */\n      add\n        /* \"#utility.yul\":19911:19974   */\n      tag_399\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":19901:19974   */\n      swap5\n      pop\n        /* \"#utility.yul\":19856:19984   */\n      pop\n        /* \"#utility.yul\":20023:20025   */\n      0x40\n        /* \"#utility.yul\":20049:20113   */\n      tag_620\n        /* \"#utility.yul\":20105:20112   */\n      dup9\n        /* \"#utility.yul\":20096:20102   */\n      dup3\n        /* \"#utility.yul\":20085:20094   */\n      dup10\n        /* \"#utility.yul\":20081:20103   */\n      add\n        /* \"#utility.yul\":20049:20113   */\n      tag_400\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":20039:20113   */\n      swap4\n      pop\n        /* \"#utility.yul\":19994:20123   */\n      pop\n        /* \"#utility.yul\":20162:20164   */\n      0x60\n        /* \"#utility.yul\":20188:20252   */\n      tag_621\n        /* \"#utility.yul\":20244:20251   */\n      dup9\n        /* \"#utility.yul\":20235:20241   */\n      dup3\n        /* \"#utility.yul\":20224:20233   */\n      dup10\n        /* \"#utility.yul\":20220:20242   */\n      add\n        /* \"#utility.yul\":20188:20252   */\n      tag_400\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":20178:20252   */\n      swap3\n      pop\n        /* \"#utility.yul\":20133:20262   */\n      pop\n        /* \"#utility.yul\":20301:20304   */\n      0x80\n        /* \"#utility.yul\":20328:20391   */\n      tag_622\n        /* \"#utility.yul\":20383:20390   */\n      dup9\n        /* \"#utility.yul\":20374:20380   */\n      dup3\n        /* \"#utility.yul\":20363:20372   */\n      dup10\n        /* \"#utility.yul\":20359:20381   */\n      add\n        /* \"#utility.yul\":20328:20391   */\n      tag_396\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":20318:20391   */\n      swap2\n      pop\n        /* \"#utility.yul\":20272:20401   */\n      pop\n        /* \"#utility.yul\":19437:20408   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20414:20577   */\n    tag_401:\n        /* \"#utility.yul\":20554:20569   */\n      0x496e76616c696420707269636500000000000000000000000000000000000000\n        /* \"#utility.yul\":20550:20551   */\n      0x00\n        /* \"#utility.yul\":20542:20548   */\n      dup3\n        /* \"#utility.yul\":20538:20552   */\n      add\n        /* \"#utility.yul\":20531:20570   */\n      mstore\n        /* \"#utility.yul\":20414:20577   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20583:20949   */\n    tag_402:\n        /* \"#utility.yul\":20725:20728   */\n      0x00\n        /* \"#utility.yul\":20746:20813   */\n      tag_625\n        /* \"#utility.yul\":20810:20812   */\n      0x0d\n        /* \"#utility.yul\":20805:20808   */\n      dup4\n        /* \"#utility.yul\":20746:20813   */\n      tag_350\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":20739:20813   */\n      swap2\n      pop\n        /* \"#utility.yul\":20822:20915   */\n      tag_626\n        /* \"#utility.yul\":20911:20914   */\n      dup3\n        /* \"#utility.yul\":20822:20915   */\n      tag_401\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":20940:20942   */\n      0x20\n        /* \"#utility.yul\":20935:20938   */\n      dup3\n        /* \"#utility.yul\":20931:20943   */\n      add\n        /* \"#utility.yul\":20924:20943   */\n      swap1\n      pop\n        /* \"#utility.yul\":20583:20949   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20955:21374   */\n    tag_256:\n        /* \"#utility.yul\":21121:21125   */\n      0x00\n        /* \"#utility.yul\":21159:21161   */\n      0x20\n        /* \"#utility.yul\":21148:21157   */\n      dup3\n        /* \"#utility.yul\":21144:21162   */\n      add\n        /* \"#utility.yul\":21136:21162   */\n      swap1\n      pop\n        /* \"#utility.yul\":21208:21217   */\n      dup2\n        /* \"#utility.yul\":21202:21206   */\n      dup2\n        /* \"#utility.yul\":21198:21218   */\n      sub\n        /* \"#utility.yul\":21194:21195   */\n      0x00\n        /* \"#utility.yul\":21183:21192   */\n      dup4\n        /* \"#utility.yul\":21179:21196   */\n      add\n        /* \"#utility.yul\":21172:21219   */\n      mstore\n        /* \"#utility.yul\":21236:21367   */\n      tag_628\n        /* \"#utility.yul\":21362:21366   */\n      dup2\n        /* \"#utility.yul\":21236:21367   */\n      tag_402\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":21228:21367   */\n      swap1\n      pop\n        /* \"#utility.yul\":20955:21374   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21380:21482   */\n    tag_403:\n        /* \"#utility.yul\":21422:21430   */\n      0x00\n        /* \"#utility.yul\":21469:21474   */\n      dup2\n        /* \"#utility.yul\":21466:21467   */\n      0x01\n        /* \"#utility.yul\":21462:21475   */\n      shr\n        /* \"#utility.yul\":21441:21475   */\n      swap1\n      pop\n        /* \"#utility.yul\":21380:21482   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21488:22336   */\n    tag_404:\n        /* \"#utility.yul\":21549:21554   */\n      0x00\n        /* \"#utility.yul\":21556:21560   */\n      dup1\n        /* \"#utility.yul\":21580:21586   */\n      dup3\n        /* \"#utility.yul\":21571:21586   */\n      swap2\n      pop\n        /* \"#utility.yul\":21604:21609   */\n      dup4\n        /* \"#utility.yul\":21595:21609   */\n      swap1\n      pop\n        /* \"#utility.yul\":21618:22330   */\n    tag_631:\n        /* \"#utility.yul\":21639:21640   */\n      0x01\n        /* \"#utility.yul\":21629:21637   */\n      dup6\n        /* \"#utility.yul\":21626:21641   */\n      gt\n        /* \"#utility.yul\":21618:22330   */\n      iszero\n      tag_633\n      jumpi\n        /* \"#utility.yul\":21734:21738   */\n      dup1\n        /* \"#utility.yul\":21729:21732   */\n      dup7\n        /* \"#utility.yul\":21725:21739   */\n      div\n        /* \"#utility.yul\":21719:21723   */\n      dup2\n        /* \"#utility.yul\":21716:21740   */\n      gt\n        /* \"#utility.yul\":21713:21763   */\n      iszero\n      tag_634\n      jumpi\n        /* \"#utility.yul\":21743:21761   */\n      tag_635\n      tag_382\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":21713:21763   */\n    tag_634:\n        /* \"#utility.yul\":21793:21794   */\n      0x01\n        /* \"#utility.yul\":21783:21791   */\n      dup6\n        /* \"#utility.yul\":21779:21795   */\n      and\n        /* \"#utility.yul\":21776:22227   */\n      iszero\n      tag_636\n      jumpi\n        /* \"#utility.yul\":22208:22212   */\n      dup1\n        /* \"#utility.yul\":22201:22206   */\n      dup3\n        /* \"#utility.yul\":22197:22213   */\n      mul\n        /* \"#utility.yul\":22188:22213   */\n      swap2\n      pop\n        /* \"#utility.yul\":21776:22227   */\n    tag_636:\n        /* \"#utility.yul\":22258:22262   */\n      dup1\n        /* \"#utility.yul\":22252:22256   */\n      dup2\n        /* \"#utility.yul\":22248:22263   */\n      mul\n        /* \"#utility.yul\":22240:22263   */\n      swap1\n      pop\n        /* \"#utility.yul\":22288:22320   */\n      tag_637\n        /* \"#utility.yul\":22311:22319   */\n      dup6\n        /* \"#utility.yul\":22288:22320   */\n      tag_403\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":22276:22320   */\n      swap5\n      pop\n        /* \"#utility.yul\":21618:22330   */\n      jump(tag_631)\n    tag_633:\n        /* \"#utility.yul\":21488:22336   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22342:23415   */\n    tag_405:\n        /* \"#utility.yul\":22396:22401   */\n      0x00\n        /* \"#utility.yul\":22587:22595   */\n      dup3\n        /* \"#utility.yul\":22577:22617   */\n      tag_639\n      jumpi\n        /* \"#utility.yul\":22608:22609   */\n      0x01\n        /* \"#utility.yul\":22599:22609   */\n      swap1\n      pop\n        /* \"#utility.yul\":22610:22615   */\n      jump(tag_638)\n        /* \"#utility.yul\":22577:22617   */\n    tag_639:\n        /* \"#utility.yul\":22636:22640   */\n      dup2\n        /* \"#utility.yul\":22626:22662   */\n      tag_640\n      jumpi\n        /* \"#utility.yul\":22653:22654   */\n      0x00\n        /* \"#utility.yul\":22644:22654   */\n      swap1\n      pop\n        /* \"#utility.yul\":22655:22660   */\n      jump(tag_638)\n        /* \"#utility.yul\":22626:22662   */\n    tag_640:\n        /* \"#utility.yul\":22722:22726   */\n      dup2\n        /* \"#utility.yul\":22770:22771   */\n      0x01\n        /* \"#utility.yul\":22765:22792   */\n      dup2\n      eq\n      tag_642\n      jumpi\n        /* \"#utility.yul\":22806:22807   */\n      0x02\n        /* \"#utility.yul\":22801:22992   */\n      dup2\n      eq\n      tag_643\n      jumpi\n        /* \"#utility.yul\":22715:22992   */\n      jump(tag_641)\n        /* \"#utility.yul\":22765:22792   */\n    tag_642:\n        /* \"#utility.yul\":22783:22784   */\n      0x01\n        /* \"#utility.yul\":22774:22784   */\n      swap2\n      pop\n        /* \"#utility.yul\":22785:22790   */\n      pop\n      jump(tag_638)\n        /* \"#utility.yul\":22801:22992   */\n    tag_643:\n        /* \"#utility.yul\":22846:22849   */\n      0xff\n        /* \"#utility.yul\":22836:22844   */\n      dup5\n        /* \"#utility.yul\":22833:22850   */\n      gt\n        /* \"#utility.yul\":22830:22873   */\n      iszero\n      tag_644\n      jumpi\n        /* \"#utility.yul\":22853:22871   */\n      tag_645\n      tag_382\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":22830:22873   */\n    tag_644:\n        /* \"#utility.yul\":22902:22910   */\n      dup4\n        /* \"#utility.yul\":22899:22900   */\n      0x02\n        /* \"#utility.yul\":22895:22911   */\n      exp\n        /* \"#utility.yul\":22886:22911   */\n      swap2\n      pop\n        /* \"#utility.yul\":22937:22940   */\n      dup5\n        /* \"#utility.yul\":22930:22935   */\n      dup3\n        /* \"#utility.yul\":22927:22941   */\n      gt\n        /* \"#utility.yul\":22924:22964   */\n      iszero\n      tag_646\n      jumpi\n        /* \"#utility.yul\":22944:22962   */\n      tag_647\n      tag_382\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":22924:22964   */\n    tag_646:\n        /* \"#utility.yul\":22977:22982   */\n      pop\n      jump(tag_638)\n        /* \"#utility.yul\":22715:22992   */\n    tag_641:\n      pop\n        /* \"#utility.yul\":23101:23103   */\n      0x20\n        /* \"#utility.yul\":23091:23099   */\n      dup4\n        /* \"#utility.yul\":23088:23104   */\n      lt\n        /* \"#utility.yul\":23082:23085   */\n      0x0133\n        /* \"#utility.yul\":23076:23080   */\n      dup4\n        /* \"#utility.yul\":23073:23086   */\n      lt\n        /* \"#utility.yul\":23069:23105   */\n      and\n        /* \"#utility.yul\":23051:23053   */\n      0x4e\n        /* \"#utility.yul\":23041:23049   */\n      dup5\n        /* \"#utility.yul\":23038:23054   */\n      lt\n        /* \"#utility.yul\":23033:23035   */\n      0x0b\n        /* \"#utility.yul\":23027:23031   */\n      dup5\n        /* \"#utility.yul\":23024:23036   */\n      lt\n        /* \"#utility.yul\":23020:23055   */\n      and\n        /* \"#utility.yul\":23004:23115   */\n      or\n        /* \"#utility.yul\":23001:23247   */\n      iszero\n      tag_648\n      jumpi\n        /* \"#utility.yul\":23157:23165   */\n      dup3\n        /* \"#utility.yul\":23151:23155   */\n      dup3\n        /* \"#utility.yul\":23147:23166   */\n      exp\n        /* \"#utility.yul\":23138:23166   */\n      swap1\n      pop\n        /* \"#utility.yul\":23192:23195   */\n      dup4\n        /* \"#utility.yul\":23185:23190   */\n      dup2\n        /* \"#utility.yul\":23182:23196   */\n      gt\n        /* \"#utility.yul\":23179:23219   */\n      iszero\n      tag_649\n      jumpi\n        /* \"#utility.yul\":23199:23217   */\n      tag_650\n      tag_382\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":23179:23219   */\n    tag_649:\n        /* \"#utility.yul\":23232:23237   */\n      jump(tag_638)\n        /* \"#utility.yul\":23001:23247   */\n    tag_648:\n        /* \"#utility.yul\":23272:23314   */\n      tag_651\n        /* \"#utility.yul\":23310:23313   */\n      dup5\n        /* \"#utility.yul\":23300:23308   */\n      dup5\n        /* \"#utility.yul\":23294:23298   */\n      dup5\n        /* \"#utility.yul\":23291:23292   */\n      0x01\n        /* \"#utility.yul\":23272:23314   */\n      tag_404\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":23257:23314   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":23346:23350   */\n      dup2\n        /* \"#utility.yul\":23341:23344   */\n      dup5\n        /* \"#utility.yul\":23337:23351   */\n      div\n        /* \"#utility.yul\":23330:23335   */\n      dup2\n        /* \"#utility.yul\":23327:23352   */\n      gt\n        /* \"#utility.yul\":23324:23375   */\n      iszero\n      tag_652\n      jumpi\n        /* \"#utility.yul\":23355:23373   */\n      tag_653\n      tag_382\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":23324:23375   */\n    tag_652:\n        /* \"#utility.yul\":23404:23408   */\n      dup2\n        /* \"#utility.yul\":23397:23402   */\n      dup2\n        /* \"#utility.yul\":23393:23409   */\n      mul\n        /* \"#utility.yul\":23384:23409   */\n      swap1\n      pop\n        /* \"#utility.yul\":22342:23415   */\n    tag_638:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23421:23706   */\n    tag_270:\n        /* \"#utility.yul\":23481:23486   */\n      0x00\n        /* \"#utility.yul\":23505:23528   */\n      tag_655\n        /* \"#utility.yul\":23523:23527   */\n      dup3\n        /* \"#utility.yul\":23505:23528   */\n      tag_359\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":23497:23528   */\n      swap2\n      pop\n        /* \"#utility.yul\":23549:23576   */\n      tag_656\n        /* \"#utility.yul\":23567:23575   */\n      dup4\n        /* \"#utility.yul\":23549:23576   */\n      tag_359\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":23537:23576   */\n      swap3\n      pop\n        /* \"#utility.yul\":23595:23699   */\n      tag_657\n        /* \"#utility.yul\":23632:23698   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":23622:23630   */\n      dup5\n        /* \"#utility.yul\":23616:23620   */\n      dup5\n        /* \"#utility.yul\":23595:23699   */\n      tag_405\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":23586:23699   */\n      swap1\n      pop\n        /* \"#utility.yul\":23421:23706   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23712:24122   */\n    tag_272:\n        /* \"#utility.yul\":23752:23759   */\n      0x00\n        /* \"#utility.yul\":23775:23795   */\n      tag_659\n        /* \"#utility.yul\":23793:23794   */\n      dup3\n        /* \"#utility.yul\":23775:23795   */\n      tag_359\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":23770:23795   */\n      swap2\n      pop\n        /* \"#utility.yul\":23809:23829   */\n      tag_660\n        /* \"#utility.yul\":23827:23828   */\n      dup4\n        /* \"#utility.yul\":23809:23829   */\n      tag_359\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":23804:23829   */\n      swap3\n      pop\n        /* \"#utility.yul\":23864:23865   */\n      dup3\n        /* \"#utility.yul\":23861:23862   */\n      dup3\n        /* \"#utility.yul\":23857:23866   */\n      mul\n        /* \"#utility.yul\":23886:23916   */\n      tag_661\n        /* \"#utility.yul\":23904:23915   */\n      dup2\n        /* \"#utility.yul\":23886:23916   */\n      tag_359\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":23875:23916   */\n      swap2\n      pop\n        /* \"#utility.yul\":24065:24066   */\n      dup3\n        /* \"#utility.yul\":24056:24063   */\n      dup3\n        /* \"#utility.yul\":24052:24067   */\n      div\n        /* \"#utility.yul\":24049:24050   */\n      dup5\n        /* \"#utility.yul\":24046:24068   */\n      eq\n        /* \"#utility.yul\":24026:24027   */\n      dup4\n        /* \"#utility.yul\":24019:24028   */\n      iszero\n        /* \"#utility.yul\":23999:24082   */\n      or\n        /* \"#utility.yul\":23976:24115   */\n      tag_662\n      jumpi\n        /* \"#utility.yul\":24095:24113   */\n      tag_663\n      tag_382\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":23976:24115   */\n    tag_662:\n        /* \"#utility.yul\":23760:24122   */\n      pop\n        /* \"#utility.yul\":23712:24122   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24128:24307   */\n    tag_406:\n        /* \"#utility.yul\":24268:24299   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e2030000000\n        /* \"#utility.yul\":24264:24265   */\n      0x00\n        /* \"#utility.yul\":24256:24262   */\n      dup3\n        /* \"#utility.yul\":24252:24266   */\n      add\n        /* \"#utility.yul\":24245:24300   */\n      mstore\n        /* \"#utility.yul\":24128:24307   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24313:24679   */\n    tag_407:\n        /* \"#utility.yul\":24455:24458   */\n      0x00\n        /* \"#utility.yul\":24476:24543   */\n      tag_666\n        /* \"#utility.yul\":24540:24542   */\n      0x1d\n        /* \"#utility.yul\":24535:24538   */\n      dup4\n        /* \"#utility.yul\":24476:24543   */\n      tag_350\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":24469:24543   */\n      swap2\n      pop\n        /* \"#utility.yul\":24552:24645   */\n      tag_667\n        /* \"#utility.yul\":24641:24644   */\n      dup3\n        /* \"#utility.yul\":24552:24645   */\n      tag_406\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":24670:24672   */\n      0x20\n        /* \"#utility.yul\":24665:24668   */\n      dup3\n        /* \"#utility.yul\":24661:24673   */\n      add\n        /* \"#utility.yul\":24654:24673   */\n      swap1\n      pop\n        /* \"#utility.yul\":24313:24679   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24685:25104   */\n    tag_281:\n        /* \"#utility.yul\":24851:24855   */\n      0x00\n        /* \"#utility.yul\":24889:24891   */\n      0x20\n        /* \"#utility.yul\":24878:24887   */\n      dup3\n        /* \"#utility.yul\":24874:24892   */\n      add\n        /* \"#utility.yul\":24866:24892   */\n      swap1\n      pop\n        /* \"#utility.yul\":24938:24947   */\n      dup2\n        /* \"#utility.yul\":24932:24936   */\n      dup2\n        /* \"#utility.yul\":24928:24948   */\n      sub\n        /* \"#utility.yul\":24924:24925   */\n      0x00\n        /* \"#utility.yul\":24913:24922   */\n      dup4\n        /* \"#utility.yul\":24909:24926   */\n      add\n        /* \"#utility.yul\":24902:24949   */\n      mstore\n        /* \"#utility.yul\":24966:25097   */\n      tag_669\n        /* \"#utility.yul\":25092:25096   */\n      dup2\n        /* \"#utility.yul\":24966:25097   */\n      tag_407\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":24958:25097   */\n      swap1\n      pop\n        /* \"#utility.yul\":24685:25104   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25110:25552   */\n    tag_307:\n        /* \"#utility.yul\":25259:25263   */\n      0x00\n        /* \"#utility.yul\":25297:25299   */\n      0x60\n        /* \"#utility.yul\":25286:25295   */\n      dup3\n        /* \"#utility.yul\":25282:25300   */\n      add\n        /* \"#utility.yul\":25274:25300   */\n      swap1\n      pop\n        /* \"#utility.yul\":25310:25381   */\n      tag_671\n        /* \"#utility.yul\":25378:25379   */\n      0x00\n        /* \"#utility.yul\":25367:25376   */\n      dup4\n        /* \"#utility.yul\":25363:25380   */\n      add\n        /* \"#utility.yul\":25354:25360   */\n      dup7\n        /* \"#utility.yul\":25310:25381   */\n      tag_367\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":25391:25463   */\n      tag_672\n        /* \"#utility.yul\":25459:25461   */\n      0x20\n        /* \"#utility.yul\":25448:25457   */\n      dup4\n        /* \"#utility.yul\":25444:25462   */\n      add\n        /* \"#utility.yul\":25435:25441   */\n      dup6\n        /* \"#utility.yul\":25391:25463   */\n      tag_364\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":25473:25545   */\n      tag_673\n        /* \"#utility.yul\":25541:25543   */\n      0x40\n        /* \"#utility.yul\":25530:25539   */\n      dup4\n        /* \"#utility.yul\":25526:25544   */\n      add\n        /* \"#utility.yul\":25517:25523   */\n      dup5\n        /* \"#utility.yul\":25473:25545   */\n      tag_364\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":25110:25552   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122061fffbf708ef46195a5ed7bae219ff1b3bff2ac8edcabaca14119d6aa0017b4564736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_302": {
									"entryPoint": null,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_990": {
									"entryPoint": null,
									"id": 990,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 327,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 788,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 910,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 382,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 337,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 868,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 524,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 675,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 718,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5231:10",
										"nodeType": "YulBlock",
										"src": "0:5231:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:10",
													"nodeType": "YulBlock",
													"src": "66:40:10",
													"statements": [
														{
															"nativeSrc": "77:22:10",
															"nodeType": "YulAssignment",
															"src": "77:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:10"
																},
																"nativeSrc": "87:12:10",
																"nodeType": "YulFunctionCall",
																"src": "87:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:10",
														"nodeType": "YulTypedName",
														"src": "49:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:10",
														"nodeType": "YulTypedName",
														"src": "59:6:10",
														"type": ""
													}
												],
												"src": "7:99:10"
											},
											{
												"body": {
													"nativeSrc": "140:152:10",
													"nodeType": "YulBlock",
													"src": "140:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:10",
																		"nodeType": "YulLiteral",
																		"src": "157:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:10",
																		"nodeType": "YulLiteral",
																		"src": "160:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:10"
																},
																"nativeSrc": "150:88:10",
																"nodeType": "YulFunctionCall",
																"src": "150:88:10"
															},
															"nativeSrc": "150:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:10",
																		"nodeType": "YulLiteral",
																		"src": "254:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:10",
																		"nodeType": "YulLiteral",
																		"src": "257:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:10"
																},
																"nativeSrc": "247:15:10",
																"nodeType": "YulFunctionCall",
																"src": "247:15:10"
															},
															"nativeSrc": "247:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:10",
																		"nodeType": "YulLiteral",
																		"src": "278:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:10",
																		"nodeType": "YulLiteral",
																		"src": "281:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:10"
																},
																"nativeSrc": "271:15:10",
																"nodeType": "YulFunctionCall",
																"src": "271:15:10"
															},
															"nativeSrc": "271:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:10"
											},
											{
												"body": {
													"nativeSrc": "326:152:10",
													"nodeType": "YulBlock",
													"src": "326:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:10",
																		"nodeType": "YulLiteral",
																		"src": "343:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:10",
																		"nodeType": "YulLiteral",
																		"src": "346:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:10"
																},
																"nativeSrc": "336:88:10",
																"nodeType": "YulFunctionCall",
																"src": "336:88:10"
															},
															"nativeSrc": "336:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:10",
																		"nodeType": "YulLiteral",
																		"src": "440:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:10",
																		"nodeType": "YulLiteral",
																		"src": "443:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:10"
																},
																"nativeSrc": "433:15:10",
																"nodeType": "YulFunctionCall",
																"src": "433:15:10"
															},
															"nativeSrc": "433:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:10",
																		"nodeType": "YulLiteral",
																		"src": "464:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:10",
																		"nodeType": "YulLiteral",
																		"src": "467:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:10"
																},
																"nativeSrc": "457:15:10",
																"nodeType": "YulFunctionCall",
																"src": "457:15:10"
															},
															"nativeSrc": "457:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:10"
											},
											{
												"body": {
													"nativeSrc": "535:269:10",
													"nodeType": "YulBlock",
													"src": "535:269:10",
													"statements": [
														{
															"nativeSrc": "545:22:10",
															"nodeType": "YulAssignment",
															"src": "545:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:10",
																		"nodeType": "YulLiteral",
																		"src": "565:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:10"
																},
																"nativeSrc": "555:12:10",
																"nodeType": "YulFunctionCall",
																"src": "555:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:10"
																}
															]
														},
														{
															"nativeSrc": "576:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:10",
																		"nodeType": "YulLiteral",
																		"src": "612:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:10"
																},
																"nativeSrc": "602:12:10",
																"nodeType": "YulFunctionCall",
																"src": "602:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:10",
																	"nodeType": "YulTypedName",
																	"src": "580:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:10",
																"nodeType": "YulBlock",
																"src": "653:51:10",
																"statements": [
																	{
																		"nativeSrc": "667:27:10",
																		"nodeType": "YulAssignment",
																		"src": "667:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:10",
																					"nodeType": "YulLiteral",
																					"src": "689:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:10"
																			},
																			"nativeSrc": "677:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:10"
																},
																"nativeSrc": "626:26:10",
																"nodeType": "YulFunctionCall",
																"src": "626:26:10"
															},
															"nativeSrc": "623:81:10",
															"nodeType": "YulIf",
															"src": "623:81:10"
														},
														{
															"body": {
																"nativeSrc": "756:42:10",
																"nodeType": "YulBlock",
																"src": "756:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:10"
																			},
																			"nativeSrc": "770:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:10"
																		},
																		"nativeSrc": "770:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:10",
																				"nodeType": "YulLiteral",
																				"src": "751:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:10"
																		},
																		"nativeSrc": "740:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:10"
																},
																"nativeSrc": "717:38:10",
																"nodeType": "YulFunctionCall",
																"src": "717:38:10"
															},
															"nativeSrc": "714:84:10",
															"nodeType": "YulIf",
															"src": "714:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:10",
														"nodeType": "YulTypedName",
														"src": "519:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:10",
														"nodeType": "YulTypedName",
														"src": "528:6:10",
														"type": ""
													}
												],
												"src": "484:320:10"
											},
											{
												"body": {
													"nativeSrc": "864:87:10",
													"nodeType": "YulBlock",
													"src": "864:87:10",
													"statements": [
														{
															"nativeSrc": "874:11:10",
															"nodeType": "YulAssignment",
															"src": "874:11:10",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:10",
																"nodeType": "YulIdentifier",
																"src": "882:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:10",
																		"nodeType": "YulLiteral",
																		"src": "902:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:10"
																},
																"nativeSrc": "895:14:10",
																"nodeType": "YulFunctionCall",
																"src": "895:14:10"
															},
															"nativeSrc": "895:14:10",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:10"
														},
														{
															"nativeSrc": "918:26:10",
															"nodeType": "YulAssignment",
															"src": "918:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:10",
																		"nodeType": "YulLiteral",
																		"src": "936:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:10",
																		"nodeType": "YulLiteral",
																		"src": "939:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:10"
																},
																"nativeSrc": "926:18:10",
																"nodeType": "YulFunctionCall",
																"src": "926:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:10",
														"nodeType": "YulTypedName",
														"src": "851:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:10",
														"nodeType": "YulTypedName",
														"src": "859:4:10",
														"type": ""
													}
												],
												"src": "810:141:10"
											},
											{
												"body": {
													"nativeSrc": "1001:49:10",
													"nodeType": "YulBlock",
													"src": "1001:49:10",
													"statements": [
														{
															"nativeSrc": "1011:33:10",
															"nodeType": "YulAssignment",
															"src": "1011:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:10"
																		},
																		"nativeSrc": "1025:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:10"
																},
																"nativeSrc": "1021:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:10"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:10",
														"nodeType": "YulTypedName",
														"src": "984:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:10",
														"nodeType": "YulTypedName",
														"src": "994:6:10",
														"type": ""
													}
												],
												"src": "957:93:10"
											},
											{
												"body": {
													"nativeSrc": "1109:54:10",
													"nodeType": "YulBlock",
													"src": "1109:54:10",
													"statements": [
														{
															"nativeSrc": "1119:37:10",
															"nodeType": "YulAssignment",
															"src": "1119:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:10"
																},
																"nativeSrc": "1140:16:10",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:10"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:10",
														"nodeType": "YulTypedName",
														"src": "1084:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:10",
														"nodeType": "YulTypedName",
														"src": "1090:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:10",
														"nodeType": "YulTypedName",
														"src": "1100:8:10",
														"type": ""
													}
												],
												"src": "1056:107:10"
											},
											{
												"body": {
													"nativeSrc": "1245:317:10",
													"nodeType": "YulBlock",
													"src": "1245:317:10",
													"statements": [
														{
															"nativeSrc": "1255:35:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:10",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:10"
																},
																"nativeSrc": "1272:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:10"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:10",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:10",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:10"
																},
																"nativeSrc": "1311:97:10",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:10",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:10",
															"nodeType": "YulAssignment",
															"src": "1417:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:10"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:10"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:10"
																},
																"nativeSrc": "1429:39:10",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:10"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:10"
																}
															]
														},
														{
															"nativeSrc": "1477:30:10",
															"nodeType": "YulAssignment",
															"src": "1477:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:10"
																		},
																		"nativeSrc": "1497:9:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:10"
																},
																"nativeSrc": "1486:21:10",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:10"
																}
															]
														},
														{
															"nativeSrc": "1516:40:10",
															"nodeType": "YulAssignment",
															"src": "1516:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:10"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:10"
																		},
																		"nativeSrc": "1536:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:10"
																},
																"nativeSrc": "1526:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:10"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:10",
														"nodeType": "YulTypedName",
														"src": "1206:5:10",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:10",
														"nodeType": "YulTypedName",
														"src": "1213:10:10",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:10",
														"nodeType": "YulTypedName",
														"src": "1225:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:10",
														"nodeType": "YulTypedName",
														"src": "1238:6:10",
														"type": ""
													}
												],
												"src": "1169:393:10"
											},
											{
												"body": {
													"nativeSrc": "1613:32:10",
													"nodeType": "YulBlock",
													"src": "1613:32:10",
													"statements": [
														{
															"nativeSrc": "1623:16:10",
															"nodeType": "YulAssignment",
															"src": "1623:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:10",
																"nodeType": "YulIdentifier",
																"src": "1634:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:10",
														"nodeType": "YulTypedName",
														"src": "1595:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:10",
														"nodeType": "YulTypedName",
														"src": "1605:7:10",
														"type": ""
													}
												],
												"src": "1568:77:10"
											},
											{
												"body": {
													"nativeSrc": "1683:28:10",
													"nodeType": "YulBlock",
													"src": "1683:28:10",
													"statements": [
														{
															"nativeSrc": "1693:12:10",
															"nodeType": "YulAssignment",
															"src": "1693:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:10",
																"nodeType": "YulIdentifier",
																"src": "1700:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:10",
														"nodeType": "YulTypedName",
														"src": "1669:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:10",
														"nodeType": "YulTypedName",
														"src": "1679:3:10",
														"type": ""
													}
												],
												"src": "1651:60:10"
											},
											{
												"body": {
													"nativeSrc": "1777:82:10",
													"nodeType": "YulBlock",
													"src": "1777:82:10",
													"statements": [
														{
															"nativeSrc": "1787:66:10",
															"nodeType": "YulAssignment",
															"src": "1787:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:10"
																				},
																				"nativeSrc": "1827:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:10"
																		},
																		"nativeSrc": "1818:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:10"
																},
																"nativeSrc": "1800:53:10",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:10",
														"nodeType": "YulTypedName",
														"src": "1757:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:10",
														"nodeType": "YulTypedName",
														"src": "1767:9:10",
														"type": ""
													}
												],
												"src": "1717:142:10"
											},
											{
												"body": {
													"nativeSrc": "1912:28:10",
													"nodeType": "YulBlock",
													"src": "1912:28:10",
													"statements": [
														{
															"nativeSrc": "1922:12:10",
															"nodeType": "YulAssignment",
															"src": "1922:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:10",
																"nodeType": "YulIdentifier",
																"src": "1929:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:10"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:10",
														"nodeType": "YulTypedName",
														"src": "1898:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:10",
														"nodeType": "YulTypedName",
														"src": "1908:3:10",
														"type": ""
													}
												],
												"src": "1865:75:10"
											},
											{
												"body": {
													"nativeSrc": "2022:193:10",
													"nodeType": "YulBlock",
													"src": "2022:193:10",
													"statements": [
														{
															"nativeSrc": "2032:63:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:10"
																},
																"nativeSrc": "2056:39:10",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:10"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:10",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:10"
																				},
																				"nativeSrc": "2145:11:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:10"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:10",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:10"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:10",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:10"
																				},
																				"nativeSrc": "2166:41:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:10"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:10",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:10"
																		},
																		"nativeSrc": "2117:91:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:10"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:10"
																},
																"nativeSrc": "2104:105:10",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:10"
															},
															"nativeSrc": "2104:105:10",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:10"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:10",
														"nodeType": "YulTypedName",
														"src": "1999:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:10",
														"nodeType": "YulTypedName",
														"src": "2005:6:10",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:10",
														"nodeType": "YulTypedName",
														"src": "2013:7:10",
														"type": ""
													}
												],
												"src": "1946:269:10"
											},
											{
												"body": {
													"nativeSrc": "2270:24:10",
													"nodeType": "YulBlock",
													"src": "2270:24:10",
													"statements": [
														{
															"nativeSrc": "2280:8:10",
															"nodeType": "YulAssignment",
															"src": "2280:8:10",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:10",
																"nodeType": "YulLiteral",
																"src": "2287:1:10",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:10"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:10",
														"nodeType": "YulTypedName",
														"src": "2266:3:10",
														"type": ""
													}
												],
												"src": "2221:73:10"
											},
											{
												"body": {
													"nativeSrc": "2353:136:10",
													"nodeType": "YulBlock",
													"src": "2353:136:10",
													"statements": [
														{
															"nativeSrc": "2363:46:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:10"
																},
																"nativeSrc": "2377:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:10"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:10",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:10"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:10"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:10"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:10"
																},
																"nativeSrc": "2418:65:10",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:10"
															},
															"nativeSrc": "2418:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:10"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:10",
														"nodeType": "YulTypedName",
														"src": "2339:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:10",
														"nodeType": "YulTypedName",
														"src": "2345:6:10",
														"type": ""
													}
												],
												"src": "2300:189:10"
											},
											{
												"body": {
													"nativeSrc": "2545:136:10",
													"nodeType": "YulBlock",
													"src": "2545:136:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:10",
																"nodeType": "YulBlock",
																"src": "2612:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:10",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:10"
																			},
																			"nativeSrc": "2626:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:10"
																		},
																		"nativeSrc": "2626:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:10"
																},
																"nativeSrc": "2562:14:10",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:10"
															},
															"nativeSrc": "2555:120:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:10",
																"nodeType": "YulBlock",
																"src": "2577:26:10",
																"statements": [
																	{
																		"nativeSrc": "2579:22:10",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:10"
																			},
																			"nativeSrc": "2588:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:10"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:10",
																"nodeType": "YulBlock",
																"src": "2559:2:10",
																"statements": []
															},
															"src": "2555:120:10"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:10",
														"nodeType": "YulTypedName",
														"src": "2533:5:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:10",
														"nodeType": "YulTypedName",
														"src": "2540:3:10",
														"type": ""
													}
												],
												"src": "2495:186:10"
											},
											{
												"body": {
													"nativeSrc": "2766:464:10",
													"nodeType": "YulBlock",
													"src": "2766:464:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:10",
																"nodeType": "YulBlock",
																"src": "2792:431:10",
																"statements": [
																	{
																		"nativeSrc": "2806:54:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:10"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:10",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:10"
																			},
																			"nativeSrc": "2822:38:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:10"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:10",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:10"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:10",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:10"
																					},
																					"nativeSrc": "2906:29:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:10"
																			},
																			"nativeSrc": "2892:44:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:10",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:10",
																			"nodeType": "YulBlock",
																			"src": "3093:27:10",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:10",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:10",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:10",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:10",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:10"
																			},
																			"nativeSrc": "3074:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:10"
																		},
																		"nativeSrc": "3071:49:10",
																		"nodeType": "YulIf",
																		"src": "3071:49:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:10",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:10"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:10",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:10"
																							},
																							"nativeSrc": "3189:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:10"
																					},
																					"nativeSrc": "3175:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:10"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:10",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:10"
																			},
																			"nativeSrc": "3133:80:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:10"
																		},
																		"nativeSrc": "3133:80:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:10"
																},
																"nativeSrc": "2780:11:10",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:10"
															},
															"nativeSrc": "2777:446:10",
															"nodeType": "YulIf",
															"src": "2777:446:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:10",
														"nodeType": "YulTypedName",
														"src": "2742:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:10",
														"nodeType": "YulTypedName",
														"src": "2749:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:10",
														"nodeType": "YulTypedName",
														"src": "2754:10:10",
														"type": ""
													}
												],
												"src": "2687:543:10"
											},
											{
												"body": {
													"nativeSrc": "3299:54:10",
													"nodeType": "YulBlock",
													"src": "3299:54:10",
													"statements": [
														{
															"nativeSrc": "3309:37:10",
															"nodeType": "YulAssignment",
															"src": "3309:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:10"
																},
																"nativeSrc": "3330:16:10",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:10",
														"nodeType": "YulTypedName",
														"src": "3274:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:10",
														"nodeType": "YulTypedName",
														"src": "3280:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:10",
														"nodeType": "YulTypedName",
														"src": "3290:8:10",
														"type": ""
													}
												],
												"src": "3236:117:10"
											},
											{
												"body": {
													"nativeSrc": "3410:118:10",
													"nodeType": "YulBlock",
													"src": "3410:118:10",
													"statements": [
														{
															"nativeSrc": "3420:68:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:10",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:10",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:10"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:10"
																				},
																				"nativeSrc": "3465:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:10",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:10"
																				},
																				"nativeSrc": "3480:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:10"
																		},
																		"nativeSrc": "3436:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:10"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:10"
																},
																"nativeSrc": "3432:56:10",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:10",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:10",
															"nodeType": "YulAssignment",
															"src": "3497:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:10"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:10"
																},
																"nativeSrc": "3507:15:10",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:10"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:10",
														"nodeType": "YulTypedName",
														"src": "3387:4:10",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:10",
														"nodeType": "YulTypedName",
														"src": "3393:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:10",
														"nodeType": "YulTypedName",
														"src": "3403:6:10",
														"type": ""
													}
												],
												"src": "3359:169:10"
											},
											{
												"body": {
													"nativeSrc": "3614:214:10",
													"nodeType": "YulBlock",
													"src": "3614:214:10",
													"statements": [
														{
															"nativeSrc": "3747:37:10",
															"nodeType": "YulAssignment",
															"src": "3747:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:10"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:10"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:10"
																},
																"nativeSrc": "3755:29:10",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:10"
																}
															]
														},
														{
															"nativeSrc": "3793:29:10",
															"nodeType": "YulAssignment",
															"src": "3793:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:10",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:10"
																		},
																		"nativeSrc": "3810:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:10"
																},
																"nativeSrc": "3801:21:10",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:10",
														"nodeType": "YulTypedName",
														"src": "3595:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:10",
														"nodeType": "YulTypedName",
														"src": "3601:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:10",
														"nodeType": "YulTypedName",
														"src": "3609:4:10",
														"type": ""
													}
												],
												"src": "3533:295:10"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:10",
													"nodeType": "YulBlock",
													"src": "3925:1303:10",
													"statements": [
														{
															"nativeSrc": "3936:51:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:10"
																},
																"nativeSrc": "3950:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:10",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:10",
																"nodeType": "YulBlock",
																"src": "4072:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:10"
																			},
																			"nativeSrc": "4074:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:10"
																		},
																		"nativeSrc": "4074:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:10",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:10"
																},
																"nativeSrc": "4041:30:10",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:10"
															},
															"nativeSrc": "4038:56:10",
															"nodeType": "YulIf",
															"src": "4038:56:10"
														},
														{
															"nativeSrc": "4104:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:10"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:10"
																		},
																		"nativeSrc": "4144:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:10"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:10"
																},
																"nativeSrc": "4118:38:10",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:10"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:10",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:10"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:10"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:10",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:10"
																},
																"nativeSrc": "4203:67:10",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:10"
															},
															"nativeSrc": "4203:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:10"
														},
														{
															"nativeSrc": "4280:18:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:10",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:10",
																"nodeType": "YulLiteral",
																"src": "4297:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:10",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:10",
															"nodeType": "YulAssignment",
															"src": "4308:17:10",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:10",
																"nodeType": "YulLiteral",
																"src": "4321:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:10",
																		"nodeType": "YulBlock",
																		"src": "4372:611:10",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:10",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:10",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:10"
																							},
																							"nativeSrc": "4413:9:10",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:10"
																					},
																					"nativeSrc": "4401:22:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:10",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:10",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:10"
																					},
																					"nativeSrc": "4451:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:10",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:10",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:10",
																					"nodeType": "YulBlock",
																					"src": "4569:163:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:10",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:10",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:10"
																												},
																												"nativeSrc": "4608:19:10",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:10"
																										},
																										"nativeSrc": "4602:26:10",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:10"
																								},
																								"nativeSrc": "4587:42:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:10"
																							},
																							"nativeSrc": "4587:42:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:10"
																						},
																						{
																							"nativeSrc": "4646:24:10",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:10",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:10"
																								},
																								"nativeSrc": "4656:14:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:10"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:10",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:10",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:10",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:10",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:10"
																								},
																								"nativeSrc": "4700:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:10"
																					},
																					"nativeSrc": "4532:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:10"
																				},
																				"nativeSrc": "4524:208:10",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:10",
																					"nodeType": "YulBlock",
																					"src": "4547:21:10",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:10",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:10",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:10",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:10"
																								},
																								"nativeSrc": "4554:12:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:10",
																					"nodeType": "YulBlock",
																					"src": "4528:3:10",
																					"statements": []
																				},
																				"src": "4524:208:10"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:10",
																					"nodeType": "YulBlock",
																					"src": "4768:156:10",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:10",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:10"
																										},
																										"nativeSrc": "4809:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:10"
																								},
																								"nativeSrc": "4803:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:10",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:10",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:10"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:10",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:10",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:10"
																												},
																												"nativeSrc": "4891:17:10",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:10"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:10",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:10"
																										},
																										"nativeSrc": "4861:48:10",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:10"
																								},
																								"nativeSrc": "4846:64:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:10"
																							},
																							"nativeSrc": "4846:64:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:10"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:10"
																					},
																					"nativeSrc": "4748:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:10"
																				},
																				"nativeSrc": "4745:179:10",
																				"nodeType": "YulIf",
																				"src": "4745:179:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:10"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:10",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:10",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:10"
																									},
																									"nativeSrc": "4954:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:10",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:10"
																							},
																							"nativeSrc": "4950:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:10"
																					},
																					"nativeSrc": "4937:36:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:10"
																				},
																				"nativeSrc": "4937:36:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:10"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:10",
																	"nodeType": "YulCase",
																	"src": "4365:618:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:10",
																		"nodeType": "YulBlock",
																		"src": "5000:222:10",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:10",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:10",
																					"nodeType": "YulBlock",
																					"src": "5051:67:10",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:10",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:10"
																										},
																										"nativeSrc": "5084:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:10"
																								},
																								"nativeSrc": "5078:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:10"
																				},
																				"nativeSrc": "5041:77:10",
																				"nodeType": "YulIf",
																				"src": "5041:77:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:10"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:10",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:10"
																							},
																							"nativeSrc": "5144:67:10",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:10"
																					},
																					"nativeSrc": "5131:81:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:10"
																				},
																				"nativeSrc": "5131:81:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:10"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:10",
																	"nodeType": "YulCase",
																	"src": "4992:230:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:10"
																},
																"nativeSrc": "4342:14:10",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:10"
															},
															"nativeSrc": "4335:887:10",
															"nodeType": "YulSwitch",
															"src": "4335:887:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:10",
														"nodeType": "YulTypedName",
														"src": "3914:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:10",
														"nodeType": "YulTypedName",
														"src": "3920:3:10",
														"type": ""
													}
												],
												"src": "3833:1395:10"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040518060400160405280600b81526020017f5441565320537461626c650000000000000000000000000000000000000000008152506040518060400160405280600581526020017f544156535400000000000000000000000000000000000000000000000000000081525081600390816200008e9190620003ab565b508060049081620000a09190620003ab565b5050505f73694aa1769357215de4fac081bf1f309adc32530690508060055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f3390508060065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200048f565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620001c357607f821691505b602082108103620001d957620001d86200017e565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026200023d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000200565b62000249868362000200565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620002936200028d620002878462000261565b6200026a565b62000261565b9050919050565b5f819050919050565b620002ae8362000273565b620002c6620002bd826200029a565b8484546200020c565b825550505050565b5f90565b620002dc620002ce565b620002e9818484620002a3565b505050565b5b818110156200031057620003045f82620002d2565b600181019050620002ef565b5050565b601f8211156200035f576200032981620001df565b6200033484620001f1565b8101602085101562000344578190505b6200035c6200035385620001f1565b830182620002ee565b50505b505050565b5f82821c905092915050565b5f620003815f198460080262000364565b1980831691505092915050565b5f6200039b838362000370565b9150826002028217905092915050565b620003b68262000147565b67ffffffffffffffff811115620003d257620003d162000151565b5b620003de8254620001ab565b620003eb82828562000314565b5f60209050601f83116001811462000421575f84156200040c578287015190505b6200041885826200038e565b86555062000487565b601f1984166200043186620001df565b5f5b828110156200045a5784890151825560018201915060208501945060208101905062000433565b868310156200047a578489015162000476601f89168262000370565b8355505b6001600288020188555050505b505050505050565b612952806200049d5f395ff3fe608060405260043610610183575f3560e01c806370a08231116100d0578063a9059cbb11610089578063d9e69a0511610063578063d9e69a05146105bc578063dd62ed3e146105e6578063e36b72c614610622578063e5c338ee1461064c5761018a565b8063a9059cbb14610508578063b5fbc7a014610544578063b855fa5b146105805761018a565b806370a08231146103fc578063741bef1a1461043857806375b1475d146104625780637c695cc11461048c5780638e15f473146104b457806395d89b41146104de5761018a565b8063313ce5671161013d57806355f575101161011757806355f575101461034e578063663837db1461038b5780636c09395e146103955780636e04ff0d146103bf5761018a565b8063313ce567146102c0578063365b98b2146102ea5780634585e33b146103265761018a565b8062ce8e3e1461018e57806306fdde03146101b8578063095ea7b3146101e257806315a3ba431461021e57806318160ddd1461025a57806323b872dd146102845761018a565b3661018a57005b5f80fd5b348015610199575f80fd5b506101a2610688565b6040516101af9190611d11565b60405180910390f35b3480156101c3575f80fd5b506101cc610713565b6040516101d99190611dbb565b60405180910390f35b3480156101ed575f80fd5b5061020860048036038101906102039190611e40565b6107a3565b6040516102159190611e98565b60405180910390f35b348015610229575f80fd5b50610244600480360381019061023f9190611eb1565b6107c5565b6040516102519190611eeb565b60405180910390f35b348015610265575f80fd5b5061026e61087e565b60405161027b9190611eeb565b60405180910390f35b34801561028f575f80fd5b506102aa60048036038101906102a59190611f04565b610887565b6040516102b79190611e98565b60405180910390f35b3480156102cb575f80fd5b506102d46108b5565b6040516102e19190611f6f565b60405180910390f35b3480156102f5575f80fd5b50610310600480360381019061030b9190611f88565b6108bd565b60405161031d9190611fc2565b60405180910390f35b348015610331575f80fd5b5061034c6004803603810190610347919061203c565b6108f8565b005b348015610359575f80fd5b50610374600480360381019061036f9190611eb1565b610b47565b604051610382929190612087565b60405180910390f35b610393610b67565b005b3480156103a0575f80fd5b506103a9610e08565b6040516103b69190611fc2565b60405180910390f35b3480156103ca575f80fd5b506103e560048036038101906103e0919061203c565b610e2d565b6040516103f3929190612100565b60405180910390f35b348015610407575f80fd5b50610422600480360381019061041d9190611eb1565b610eeb565b60405161042f9190611eeb565b60405180910390f35b348015610443575f80fd5b5061044c610f30565b6040516104599190612189565b60405180910390f35b34801561046d575f80fd5b50610476610f55565b6040516104839190611eeb565b60405180910390f35b348015610497575f80fd5b506104b260048036038101906104ad9190611f88565b610f5a565b005b3480156104bf575f80fd5b506104c8611180565b6040516104d59190611eeb565b60405180910390f35b3480156104e9575f80fd5b506104f261125f565b6040516104ff9190611dbb565b60405180910390f35b348015610513575f80fd5b5061052e60048036038101906105299190611e40565b6112ef565b60405161053b9190611e98565b60405180910390f35b34801561054f575f80fd5b5061056a60048036038101906105659190611f88565b611311565b6040516105779190611eeb565b60405180910390f35b34801561058b575f80fd5b506105a660048036038101906105a19190611f88565b611396565b6040516105b39190611eeb565b60405180910390f35b3480156105c7575f80fd5b506105d061144d565b6040516105dd9190611eeb565b60405180910390f35b3480156105f1575f80fd5b5061060c600480360381019061060791906121a2565b611452565b6040516106199190611eeb565b60405180910390f35b34801561062d575f80fd5b506106366114d4565b6040516106439190611eeb565b60405180910390f35b348015610657575f80fd5b50610672600480360381019061066d9190611eb1565b6114d9565b60405161067f9190611eeb565b60405180910390f35b6060600880548060200260200160405190810160405280929190818152602001828054801561070957602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106c0575b5050505050905090565b6060600380546107229061220d565b80601f016020809104026020016040519081016040528092919081815260200182805461074e9061220d565b80156107995780601f1061077057610100808354040283529160200191610799565b820191905f5260205f20905b81548152906001019060200180831161077c57829003601f168201915b5050505050905090565b5f806107ad6115a8565b90506107ba8185856115af565b600191505092915050565b5f8060075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060400160405290815f820154815260200160018201548152505090505f816020015103610858577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff915050610879565b5f610862846114d9565b90508160200151816108749190612297565b925050505b919050565b5f600254905090565b5f806108916115a8565b905061089e8582856115c1565b6108a9858585611654565b60019150509392505050565b5f6002905090565b600881815481106108cc575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f82828101906109089190612302565b90506096610915826107c5565b10610955576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094c90612377565b60405180910390fd5b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060400160405290815f820154815260200160018201548152505090506109c1828260200151611744565b5f60075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015490505f60075f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01819055505f60075f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001018190555060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610af1573d5f803e3d5ffd5b508273ffffffffffffffffffffffffffffffffffffffff167fa5ee7a2b0254fce91deed604506790ed7fa072d0b14cba4859c3bc8955b9caac82604051610b389190611eeb565b60405180910390a25050505050565b6007602052805f5260405f205f91509050805f0154908060010154905082565b5f3411610ba9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba0906123df565b60405180910390fd5b5f610bb334611311565b9050610bbf33826117c3565b5f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015403610d0a5760095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610d0957600833908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505b5b3460075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f828254610d5891906123fd565b925050819055508060075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f828254610dae91906123fd565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a153483604051610dfd929190612087565b60405180910390a250565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60605f5b600880549050811015610ece575f60088281548110610e5457610e53612430565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506096610e89826107c5565b1015610ec0576001935080604051602001610ea49190611fc2565b6040516020818303038152906040529250600193505050610ee4565b508080600101915050610e32565b505f60405180602001604052805f815250915091505b9250929050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600881565b80610f6433610eeb565b1015610fa5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9c906124a7565b60405180910390fd5b5f610faf82611396565b90508060075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01541015611033576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102a9061250f565b60405180910390fd5b8060075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f828254611081919061252d565b925050819055508160075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f8282546110d7919061252d565b925050819055506110e83383611744565b3373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f1935050505015801561112b573d5f803e3d5ffd5b503373ffffffffffffffffffffffffffffffffffffffff167f49995e5dd6158cf69ad3e9777c46755a1a826a446c6416992167462dad033b2a8383604051611174929190612087565b60405180910390a25050565b5f8060055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156111ec573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061121091906125e6565b5050509150505f8113611258576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124f906126a7565b60405180910390fd5b8091505090565b60606004805461126e9061220d565b80601f016020809104026020016040519081016040528092919081815260200182805461129a9061220d565b80156112e55780601f106112bc576101008083540402835291602001916112e5565b820191905f5260205f20905b8154815290600101906020018083116112c857829003601f168201915b5050505050905090565b5f806112f96115a8565b9050611306818585611654565b600191505092915050565b5f8061131b611180565b90505f6113266108b5565b60ff16600a61133591906127f4565b90505f670de0b6b3a76400006305f5e100838588611353919061283e565b61135d919061283e565b6113679190612297565b6113719190612297565b90506096606482611382919061283e565b61138c9190612297565b9350505050919050565b5f8082116113d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d0906128c9565b60405180910390fd5b5f6113e2611180565b90505f6064670de0b6b3a7640000856113fb919061283e565b6114059190612297565b90505f6064609683611417919061283e565b6114219190612297565b90505f836305f5e10083611435919061283e565b61143f9190612297565b905080945050505050919050565b609681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b606481565b5f806114e3611180565b90505f60075f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060400160405290815f820154815260200160018201548152505090505f61154c6108b5565b60ff16600a61155b91906127f4565b90505f670de0b6b3a76400006305f5e1008386865f015161157c919061283e565b611586919061283e565b6115909190612297565b61159a9190612297565b905080945050505050919050565b5f33905090565b6115bc8383836001611842565b505050565b5f6115cc8484611452565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561164e578181101561163f578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401611636939291906128e7565b60405180910390fd5b61164d84848484035f611842565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036116c4575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016116bb9190611fc2565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611734575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161172b9190611fc2565b60405180910390fd5b61173f838383611a11565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036117b4575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016117ab9190611fc2565b60405180910390fd5b6117bf825f83611a11565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611833575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161182a9190611fc2565b60405180910390fd5b61183e5f8383611a11565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036118b2575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016118a99190611fc2565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611922575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016119199190611fc2565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611a0b578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611a029190611eeb565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a61578060025f828254611a5591906123fd565b92505081905550611b2f565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611aea578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611ae1939291906128e7565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b76578060025f8282540392505081905550611bc0565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611c1d9190611eeb565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611c7c82611c53565b9050919050565b611c8c81611c72565b82525050565b5f611c9d8383611c83565b60208301905092915050565b5f602082019050919050565b5f611cbf82611c2a565b611cc98185611c34565b9350611cd483611c44565b805f5b83811015611d04578151611ceb8882611c92565b9750611cf683611ca9565b925050600181019050611cd7565b5085935050505092915050565b5f6020820190508181035f830152611d298184611cb5565b905092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611d68578082015181840152602081019050611d4d565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611d8d82611d31565b611d978185611d3b565b9350611da7818560208601611d4b565b611db081611d73565b840191505092915050565b5f6020820190508181035f830152611dd38184611d83565b905092915050565b5f80fd5b5f80fd5b611dec81611c72565b8114611df6575f80fd5b50565b5f81359050611e0781611de3565b92915050565b5f819050919050565b611e1f81611e0d565b8114611e29575f80fd5b50565b5f81359050611e3a81611e16565b92915050565b5f8060408385031215611e5657611e55611ddb565b5b5f611e6385828601611df9565b9250506020611e7485828601611e2c565b9150509250929050565b5f8115159050919050565b611e9281611e7e565b82525050565b5f602082019050611eab5f830184611e89565b92915050565b5f60208284031215611ec657611ec5611ddb565b5b5f611ed384828501611df9565b91505092915050565b611ee581611e0d565b82525050565b5f602082019050611efe5f830184611edc565b92915050565b5f805f60608486031215611f1b57611f1a611ddb565b5b5f611f2886828701611df9565b9350506020611f3986828701611df9565b9250506040611f4a86828701611e2c565b9150509250925092565b5f60ff82169050919050565b611f6981611f54565b82525050565b5f602082019050611f825f830184611f60565b92915050565b5f60208284031215611f9d57611f9c611ddb565b5b5f611faa84828501611e2c565b91505092915050565b611fbc81611c72565b82525050565b5f602082019050611fd55f830184611fb3565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f840112611ffc57611ffb611fdb565b5b8235905067ffffffffffffffff81111561201957612018611fdf565b5b60208301915083600182028301111561203557612034611fe3565b5b9250929050565b5f806020838503121561205257612051611ddb565b5b5f83013567ffffffffffffffff81111561206f5761206e611ddf565b5b61207b85828601611fe7565b92509250509250929050565b5f60408201905061209a5f830185611edc565b6120a76020830184611edc565b9392505050565b5f81519050919050565b5f82825260208201905092915050565b5f6120d2826120ae565b6120dc81856120b8565b93506120ec818560208601611d4b565b6120f581611d73565b840191505092915050565b5f6040820190506121135f830185611e89565b818103602083015261212581846120c8565b90509392505050565b5f819050919050565b5f61215161214c61214784611c53565b61212e565b611c53565b9050919050565b5f61216282612137565b9050919050565b5f61217382612158565b9050919050565b61218381612169565b82525050565b5f60208201905061219c5f83018461217a565b92915050565b5f80604083850312156121b8576121b7611ddb565b5b5f6121c585828601611df9565b92505060206121d685828601611df9565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061222457607f821691505b602082108103612237576122366121e0565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6122a182611e0d565b91506122ac83611e0d565b9250826122bc576122bb61223d565b5b828204905092915050565b5f6122d182611c53565b9050919050565b6122e1816122c7565b81146122eb575f80fd5b50565b5f813590506122fc816122d8565b92915050565b5f6020828403121561231757612316611ddb565b5b5f612324848285016122ee565b91505092915050565b7f55736572206e6f74206c6971756964617461626c6500000000000000000000005f82015250565b5f612361601583611d3b565b915061236c8261232d565b602082019050919050565b5f6020820190508181035f83015261238e81612355565b9050919050565b7f4d757374206465706f73697420455448000000000000000000000000000000005f82015250565b5f6123c9601083611d3b565b91506123d482612395565b602082019050919050565b5f6020820190508181035f8301526123f6816123bd565b9050919050565b5f61240782611e0d565b915061241283611e0d565b925082820190508082111561242a5761242961226a565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f496e73756666696369656e7420544156535400000000000000000000000000005f82015250565b5f612491601283611d3b565b915061249c8261245d565b602082019050919050565b5f6020820190508181035f8301526124be81612485565b9050919050565b7f4e6f7420656e6f75676820636f6c6c61746572616c00000000000000000000005f82015250565b5f6124f9601583611d3b565b9150612504826124c5565b602082019050919050565b5f6020820190508181035f830152612526816124ed565b9050919050565b5f61253782611e0d565b915061254283611e0d565b925082820390508181111561255a5761255961226a565b5b92915050565b5f69ffffffffffffffffffff82169050919050565b61257e81612560565b8114612588575f80fd5b50565b5f8151905061259981612575565b92915050565b5f819050919050565b6125b18161259f565b81146125bb575f80fd5b50565b5f815190506125cc816125a8565b92915050565b5f815190506125e081611e16565b92915050565b5f805f805f60a086880312156125ff576125fe611ddb565b5b5f61260c8882890161258b565b955050602061261d888289016125be565b945050604061262e888289016125d2565b935050606061263f888289016125d2565b92505060806126508882890161258b565b9150509295509295909350565b7f496e76616c6964207072696365000000000000000000000000000000000000005f82015250565b5f612691600d83611d3b565b915061269c8261265d565b602082019050919050565b5f6020820190508181035f8301526126be81612685565b9050919050565b5f8160011c9050919050565b5f808291508390505b600185111561271a578086048111156126f6576126f561226a565b5b60018516156127055780820291505b8081029050612713856126c5565b94506126da565b94509492505050565b5f8261273257600190506127ed565b8161273f575f90506127ed565b8160018114612755576002811461275f5761278e565b60019150506127ed565b60ff8411156127715761277061226a565b5b8360020a9150848211156127885761278761226a565b5b506127ed565b5060208310610133831016604e8410600b84101617156127c35782820a9050838111156127be576127bd61226a565b5b6127ed565b6127d084848460016126d1565b925090508184048111156127e7576127e661226a565b5b81810290505b9392505050565b5f6127fe82611e0d565b915061280983611e0d565b92506128367fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612723565b905092915050565b5f61284882611e0d565b915061285383611e0d565b925082820261286181611e0d565b915082820484148315176128785761287761226a565b5b5092915050565b7f416d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f6128b3601d83611d3b565b91506128be8261287f565b602082019050919050565b5f6020820190508181035f8301526128e0816128a7565b9050919050565b5f6060820190506128fa5f830186611fb3565b6129076020830185611edc565b6129146040830184611edc565b94935050505056fea264697066735822122061fffbf708ef46195a5ed7bae219ff1b3bff2ac8edcabaca14119d6aa0017b4564736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5441565320537461626C65000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5441565354000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x8E SWAP2 SWAP1 PUSH3 0x3AB JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xA0 SWAP2 SWAP1 PUSH3 0x3AB JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0x694AA1769357215DE4FAC081BF1F309ADC325306 SWAP1 POP DUP1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 CALLER SWAP1 POP DUP1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x48F JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x1C3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1D9 JUMPI PUSH3 0x1D8 PUSH3 0x17E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x23D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x200 JUMP JUMPDEST PUSH3 0x249 DUP7 DUP4 PUSH3 0x200 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x293 PUSH3 0x28D PUSH3 0x287 DUP5 PUSH3 0x261 JUMP JUMPDEST PUSH3 0x26A JUMP JUMPDEST PUSH3 0x261 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2AE DUP4 PUSH3 0x273 JUMP JUMPDEST PUSH3 0x2C6 PUSH3 0x2BD DUP3 PUSH3 0x29A JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x20C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x2DC PUSH3 0x2CE JUMP JUMPDEST PUSH3 0x2E9 DUP2 DUP5 DUP5 PUSH3 0x2A3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x310 JUMPI PUSH3 0x304 PUSH0 DUP3 PUSH3 0x2D2 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x2EF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x35F JUMPI PUSH3 0x329 DUP2 PUSH3 0x1DF JUMP JUMPDEST PUSH3 0x334 DUP5 PUSH3 0x1F1 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x344 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x35C PUSH3 0x353 DUP6 PUSH3 0x1F1 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x2EE JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x381 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x364 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x39B DUP4 DUP4 PUSH3 0x370 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x3B6 DUP3 PUSH3 0x147 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x3D2 JUMPI PUSH3 0x3D1 PUSH3 0x151 JUMP JUMPDEST JUMPDEST PUSH3 0x3DE DUP3 SLOAD PUSH3 0x1AB JUMP JUMPDEST PUSH3 0x3EB DUP3 DUP3 DUP6 PUSH3 0x314 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x421 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x40C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x418 DUP6 DUP3 PUSH3 0x38E JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x487 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x431 DUP7 PUSH3 0x1DF JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x45A JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x433 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x47A JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x476 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x370 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2952 DUP1 PUSH3 0x49D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x183 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xD9E69A05 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xD9E69A05 EQ PUSH2 0x5BC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5E6 JUMPI DUP1 PUSH4 0xE36B72C6 EQ PUSH2 0x622 JUMPI DUP1 PUSH4 0xE5C338EE EQ PUSH2 0x64C JUMPI PUSH2 0x18A JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x508 JUMPI DUP1 PUSH4 0xB5FBC7A0 EQ PUSH2 0x544 JUMPI DUP1 PUSH4 0xB855FA5B EQ PUSH2 0x580 JUMPI PUSH2 0x18A JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3FC JUMPI DUP1 PUSH4 0x741BEF1A EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0x75B1475D EQ PUSH2 0x462 JUMPI DUP1 PUSH4 0x7C695CC1 EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x4B4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4DE JUMPI PUSH2 0x18A JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x13D JUMPI DUP1 PUSH4 0x55F57510 GT PUSH2 0x117 JUMPI DUP1 PUSH4 0x55F57510 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x663837DB EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x6C09395E EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x3BF JUMPI PUSH2 0x18A JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x365B98B2 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x326 JUMPI PUSH2 0x18A JUMP JUMPDEST DUP1 PUSH3 0xCE8E3E EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x15A3BA43 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x284 JUMPI PUSH2 0x18A JUMP JUMPDEST CALLDATASIZE PUSH2 0x18A JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x199 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH2 0x688 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x1D11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CC PUSH2 0x713 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x1E40 JUMP JUMPDEST PUSH2 0x7A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x1E98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x229 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1EB1 JUMP JUMPDEST PUSH2 0x7C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x265 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26E PUSH2 0x87E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x1F04 JUMP JUMPDEST PUSH2 0x887 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x1E98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH2 0x8B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x1F6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x1F88 JUMP JUMPDEST PUSH2 0x8BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x331 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x203C JUMP JUMPDEST PUSH2 0x8F8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x359 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x1EB1 JUMP JUMPDEST PUSH2 0xB47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x382 SWAP3 SWAP2 SWAP1 PUSH2 0x2087 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x393 PUSH2 0xB67 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A9 PUSH2 0xE08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E0 SWAP2 SWAP1 PUSH2 0x203C JUMP JUMPDEST PUSH2 0xE2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F3 SWAP3 SWAP2 SWAP1 PUSH2 0x2100 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x407 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x422 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41D SWAP2 SWAP1 PUSH2 0x1EB1 JUMP JUMPDEST PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42F SWAP2 SWAP1 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x443 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x44C PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x2189 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x476 PUSH2 0xF55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x483 SWAP2 SWAP1 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x497 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AD SWAP2 SWAP1 PUSH2 0x1F88 JUMP JUMPDEST PUSH2 0xF5A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C8 PUSH2 0x1180 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D5 SWAP2 SWAP1 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F2 PUSH2 0x125F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FF SWAP2 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x513 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x52E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x1E40 JUMP JUMPDEST PUSH2 0x12EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53B SWAP2 SWAP1 PUSH2 0x1E98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x56A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x565 SWAP2 SWAP1 PUSH2 0x1F88 JUMP JUMPDEST PUSH2 0x1311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x577 SWAP2 SWAP1 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A1 SWAP2 SWAP1 PUSH2 0x1F88 JUMP JUMPDEST PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B3 SWAP2 SWAP1 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D0 PUSH2 0x144D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DD SWAP2 SWAP1 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x60C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x607 SWAP2 SWAP1 PUSH2 0x21A2 JUMP JUMPDEST PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x619 SWAP2 SWAP1 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x636 PUSH2 0x14D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x643 SWAP2 SWAP1 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x657 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x672 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66D SWAP2 SWAP1 PUSH2 0x1EB1 JUMP JUMPDEST PUSH2 0x14D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67F SWAP2 SWAP1 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x709 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x6C0 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x722 SWAP1 PUSH2 0x220D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x74E SWAP1 PUSH2 0x220D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x799 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x770 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x799 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x77C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x7AD PUSH2 0x15A8 JUMP JUMPDEST SWAP1 POP PUSH2 0x7BA DUP2 DUP6 DUP6 PUSH2 0x15AF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH0 DUP2 PUSH1 0x20 ADD MLOAD SUB PUSH2 0x858 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 POP POP PUSH2 0x879 JUMP JUMPDEST PUSH0 PUSH2 0x862 DUP5 PUSH2 0x14D9 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x20 ADD MLOAD DUP2 PUSH2 0x874 SWAP2 SWAP1 PUSH2 0x2297 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x891 PUSH2 0x15A8 JUMP JUMPDEST SWAP1 POP PUSH2 0x89E DUP6 DUP3 DUP6 PUSH2 0x15C1 JUMP JUMPDEST PUSH2 0x8A9 DUP6 DUP6 DUP6 PUSH2 0x1654 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x8CC JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP3 DUP3 DUP2 ADD SWAP1 PUSH2 0x908 SWAP2 SWAP1 PUSH2 0x2302 JUMP JUMPDEST SWAP1 POP PUSH1 0x96 PUSH2 0x915 DUP3 PUSH2 0x7C5 JUMP JUMPDEST LT PUSH2 0x955 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94C SWAP1 PUSH2 0x2377 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH2 0x9C1 DUP3 DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0x1744 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD SWAP1 POP PUSH0 PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xAF1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA5EE7A2B0254FCE91DEED604506790ED7FA072D0B14CBA4859C3BC8955B9CAAC DUP3 PUSH1 0x40 MLOAD PUSH2 0xB38 SWAP2 SWAP1 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0xBA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA0 SWAP1 PUSH2 0x23DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xBB3 CALLVALUE PUSH2 0x1311 JUMP JUMPDEST SWAP1 POP PUSH2 0xBBF CALLER DUP3 PUSH2 0x17C3 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD SUB PUSH2 0xD0A JUMPI PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xD09 JUMPI PUSH1 0x8 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST CALLVALUE PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD58 SWAP2 SWAP1 PUSH2 0x23FD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDAE SWAP2 SWAP1 PUSH2 0x23FD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 CALLVALUE DUP4 PUSH1 0x40 MLOAD PUSH2 0xDFD SWAP3 SWAP2 SWAP1 PUSH2 0x2087 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH0 JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xECE JUMPI PUSH0 PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xE54 JUMPI PUSH2 0xE53 PUSH2 0x2430 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x96 PUSH2 0xE89 DUP3 PUSH2 0x7C5 JUMP JUMPDEST LT ISZERO PUSH2 0xEC0 JUMPI PUSH1 0x1 SWAP4 POP DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEA4 SWAP2 SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP PUSH1 0x1 SWAP4 POP POP POP PUSH2 0xEE4 JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xE32 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 DUP2 JUMP JUMPDEST DUP1 PUSH2 0xF64 CALLER PUSH2 0xEEB JUMP JUMPDEST LT ISZERO PUSH2 0xFA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9C SWAP1 PUSH2 0x24A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xFAF DUP3 PUSH2 0x1396 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD LT ISZERO PUSH2 0x1033 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102A SWAP1 PUSH2 0x250F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1081 SWAP2 SWAP1 PUSH2 0x252D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x10D7 SWAP2 SWAP1 PUSH2 0x252D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x10E8 CALLER DUP4 PUSH2 0x1744 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x112B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x49995E5DD6158CF69AD3E9777C46755A1A826A446C6416992167462DAD033B2A DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1174 SWAP3 SWAP2 SWAP1 PUSH2 0x2087 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11EC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1210 SWAP2 SWAP1 PUSH2 0x25E6 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 DUP2 SGT PUSH2 0x1258 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124F SWAP1 PUSH2 0x26A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x126E SWAP1 PUSH2 0x220D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x129A SWAP1 PUSH2 0x220D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x12E5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x12BC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x12E5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x12C8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x12F9 PUSH2 0x15A8 JUMP JUMPDEST SWAP1 POP PUSH2 0x1306 DUP2 DUP6 DUP6 PUSH2 0x1654 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x131B PUSH2 0x1180 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1326 PUSH2 0x8B5 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA PUSH2 0x1335 SWAP2 SWAP1 PUSH2 0x27F4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH4 0x5F5E100 DUP4 DUP6 DUP9 PUSH2 0x1353 SWAP2 SWAP1 PUSH2 0x283E JUMP JUMPDEST PUSH2 0x135D SWAP2 SWAP1 PUSH2 0x283E JUMP JUMPDEST PUSH2 0x1367 SWAP2 SWAP1 PUSH2 0x2297 JUMP JUMPDEST PUSH2 0x1371 SWAP2 SWAP1 PUSH2 0x2297 JUMP JUMPDEST SWAP1 POP PUSH1 0x96 PUSH1 0x64 DUP3 PUSH2 0x1382 SWAP2 SWAP1 PUSH2 0x283E JUMP JUMPDEST PUSH2 0x138C SWAP2 SWAP1 PUSH2 0x2297 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 GT PUSH2 0x13D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D0 SWAP1 PUSH2 0x28C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x13E2 PUSH2 0x1180 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x13FB SWAP2 SWAP1 PUSH2 0x283E JUMP JUMPDEST PUSH2 0x1405 SWAP2 SWAP1 PUSH2 0x2297 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0x96 DUP4 PUSH2 0x1417 SWAP2 SWAP1 PUSH2 0x283E JUMP JUMPDEST PUSH2 0x1421 SWAP2 SWAP1 PUSH2 0x2297 JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH4 0x5F5E100 DUP4 PUSH2 0x1435 SWAP2 SWAP1 PUSH2 0x283E JUMP JUMPDEST PUSH2 0x143F SWAP2 SWAP1 PUSH2 0x2297 JUMP JUMPDEST SWAP1 POP DUP1 SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x96 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x14E3 PUSH2 0x1180 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH0 PUSH2 0x154C PUSH2 0x8B5 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA PUSH2 0x155B SWAP2 SWAP1 PUSH2 0x27F4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH4 0x5F5E100 DUP4 DUP7 DUP7 PUSH0 ADD MLOAD PUSH2 0x157C SWAP2 SWAP1 PUSH2 0x283E JUMP JUMPDEST PUSH2 0x1586 SWAP2 SWAP1 PUSH2 0x283E JUMP JUMPDEST PUSH2 0x1590 SWAP2 SWAP1 PUSH2 0x2297 JUMP JUMPDEST PUSH2 0x159A SWAP2 SWAP1 PUSH2 0x2297 JUMP JUMPDEST SWAP1 POP DUP1 SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x15BC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1842 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15CC DUP5 DUP5 PUSH2 0x1452 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x164E JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x163F JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1636 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x164D DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1842 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16C4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16BB SWAP2 SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1734 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x172B SWAP2 SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x173F DUP4 DUP4 DUP4 PUSH2 0x1A11 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17B4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17AB SWAP2 SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17BF DUP3 PUSH0 DUP4 PUSH2 0x1A11 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1833 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x182A SWAP2 SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x183E PUSH0 DUP4 DUP4 PUSH2 0x1A11 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18B2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A9 SWAP2 SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1922 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1919 SWAP2 SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1A0B JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1A02 SWAP2 SWAP1 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A61 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1A55 SWAP2 SWAP1 PUSH2 0x23FD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1B2F JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1AEA JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AE1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B76 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1BC0 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1C1D SWAP2 SWAP1 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C7C DUP3 PUSH2 0x1C53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C8C DUP2 PUSH2 0x1C72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C9D DUP4 DUP4 PUSH2 0x1C83 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CBF DUP3 PUSH2 0x1C2A JUMP JUMPDEST PUSH2 0x1CC9 DUP2 DUP6 PUSH2 0x1C34 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CD4 DUP4 PUSH2 0x1C44 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D04 JUMPI DUP2 MLOAD PUSH2 0x1CEB DUP9 DUP3 PUSH2 0x1C92 JUMP JUMPDEST SWAP8 POP PUSH2 0x1CF6 DUP4 PUSH2 0x1CA9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1CD7 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D29 DUP2 DUP5 PUSH2 0x1CB5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D68 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D4D JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D8D DUP3 PUSH2 0x1D31 JUMP JUMPDEST PUSH2 0x1D97 DUP2 DUP6 PUSH2 0x1D3B JUMP JUMPDEST SWAP4 POP PUSH2 0x1DA7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D4B JUMP JUMPDEST PUSH2 0x1DB0 DUP2 PUSH2 0x1D73 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DD3 DUP2 DUP5 PUSH2 0x1D83 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1DEC DUP2 PUSH2 0x1C72 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DF6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E07 DUP2 PUSH2 0x1DE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E1F DUP2 PUSH2 0x1E0D JUMP JUMPDEST DUP2 EQ PUSH2 0x1E29 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E3A DUP2 PUSH2 0x1E16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E56 JUMPI PUSH2 0x1E55 PUSH2 0x1DDB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E63 DUP6 DUP3 DUP7 ADD PUSH2 0x1DF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E74 DUP6 DUP3 DUP7 ADD PUSH2 0x1E2C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E92 DUP2 PUSH2 0x1E7E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EAB PUSH0 DUP4 ADD DUP5 PUSH2 0x1E89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EC6 JUMPI PUSH2 0x1EC5 PUSH2 0x1DDB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1ED3 DUP5 DUP3 DUP6 ADD PUSH2 0x1DF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EE5 DUP2 PUSH2 0x1E0D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EFE PUSH0 DUP4 ADD DUP5 PUSH2 0x1EDC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F1B JUMPI PUSH2 0x1F1A PUSH2 0x1DDB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F28 DUP7 DUP3 DUP8 ADD PUSH2 0x1DF9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F39 DUP7 DUP3 DUP8 ADD PUSH2 0x1DF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F4A DUP7 DUP3 DUP8 ADD PUSH2 0x1E2C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F69 DUP2 PUSH2 0x1F54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F82 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F9D JUMPI PUSH2 0x1F9C PUSH2 0x1DDB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FAA DUP5 DUP3 DUP6 ADD PUSH2 0x1E2C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FBC DUP2 PUSH2 0x1C72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FD5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1FB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1FFC JUMPI PUSH2 0x1FFB PUSH2 0x1FDB JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2019 JUMPI PUSH2 0x2018 PUSH2 0x1FDF JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2035 JUMPI PUSH2 0x2034 PUSH2 0x1FE3 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2052 JUMPI PUSH2 0x2051 PUSH2 0x1DDB JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x206F JUMPI PUSH2 0x206E PUSH2 0x1DDF JUMP JUMPDEST JUMPDEST PUSH2 0x207B DUP6 DUP3 DUP7 ADD PUSH2 0x1FE7 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x209A PUSH0 DUP4 ADD DUP6 PUSH2 0x1EDC JUMP JUMPDEST PUSH2 0x20A7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1EDC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20D2 DUP3 PUSH2 0x20AE JUMP JUMPDEST PUSH2 0x20DC DUP2 DUP6 PUSH2 0x20B8 JUMP JUMPDEST SWAP4 POP PUSH2 0x20EC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D4B JUMP JUMPDEST PUSH2 0x20F5 DUP2 PUSH2 0x1D73 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2113 PUSH0 DUP4 ADD DUP6 PUSH2 0x1E89 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2125 DUP2 DUP5 PUSH2 0x20C8 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2151 PUSH2 0x214C PUSH2 0x2147 DUP5 PUSH2 0x1C53 JUMP JUMPDEST PUSH2 0x212E JUMP JUMPDEST PUSH2 0x1C53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2162 DUP3 PUSH2 0x2137 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2173 DUP3 PUSH2 0x2158 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2183 DUP2 PUSH2 0x2169 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x219C PUSH0 DUP4 ADD DUP5 PUSH2 0x217A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21B8 JUMPI PUSH2 0x21B7 PUSH2 0x1DDB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21C5 DUP6 DUP3 DUP7 ADD PUSH2 0x1DF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21D6 DUP6 DUP3 DUP7 ADD PUSH2 0x1DF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2224 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2237 JUMPI PUSH2 0x2236 PUSH2 0x21E0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x22A1 DUP3 PUSH2 0x1E0D JUMP JUMPDEST SWAP2 POP PUSH2 0x22AC DUP4 PUSH2 0x1E0D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x22BC JUMPI PUSH2 0x22BB PUSH2 0x223D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22D1 DUP3 PUSH2 0x1C53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22E1 DUP2 PUSH2 0x22C7 JUMP JUMPDEST DUP2 EQ PUSH2 0x22EB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22FC DUP2 PUSH2 0x22D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2317 JUMPI PUSH2 0x2316 PUSH2 0x1DDB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2324 DUP5 DUP3 DUP6 ADD PUSH2 0x22EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x55736572206E6F74206C6971756964617461626C650000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2361 PUSH1 0x15 DUP4 PUSH2 0x1D3B JUMP JUMPDEST SWAP2 POP PUSH2 0x236C DUP3 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x238E DUP2 PUSH2 0x2355 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D757374206465706F7369742045544800000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23C9 PUSH1 0x10 DUP4 PUSH2 0x1D3B JUMP JUMPDEST SWAP2 POP PUSH2 0x23D4 DUP3 PUSH2 0x2395 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23F6 DUP2 PUSH2 0x23BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2407 DUP3 PUSH2 0x1E0D JUMP JUMPDEST SWAP2 POP PUSH2 0x2412 DUP4 PUSH2 0x1E0D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x242A JUMPI PUSH2 0x2429 PUSH2 0x226A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x496E73756666696369656E742054415653540000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2491 PUSH1 0x12 DUP4 PUSH2 0x1D3B JUMP JUMPDEST SWAP2 POP PUSH2 0x249C DUP3 PUSH2 0x245D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24BE DUP2 PUSH2 0x2485 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820636F6C6C61746572616C0000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24F9 PUSH1 0x15 DUP4 PUSH2 0x1D3B JUMP JUMPDEST SWAP2 POP PUSH2 0x2504 DUP3 PUSH2 0x24C5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2526 DUP2 PUSH2 0x24ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2537 DUP3 PUSH2 0x1E0D JUMP JUMPDEST SWAP2 POP PUSH2 0x2542 DUP4 PUSH2 0x1E0D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x255A JUMPI PUSH2 0x2559 PUSH2 0x226A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x257E DUP2 PUSH2 0x2560 JUMP JUMPDEST DUP2 EQ PUSH2 0x2588 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2599 DUP2 PUSH2 0x2575 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25B1 DUP2 PUSH2 0x259F JUMP JUMPDEST DUP2 EQ PUSH2 0x25BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x25CC DUP2 PUSH2 0x25A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x25E0 DUP2 PUSH2 0x1E16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x25FF JUMPI PUSH2 0x25FE PUSH2 0x1DDB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x260C DUP9 DUP3 DUP10 ADD PUSH2 0x258B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x261D DUP9 DUP3 DUP10 ADD PUSH2 0x25BE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x262E DUP9 DUP3 DUP10 ADD PUSH2 0x25D2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x263F DUP9 DUP3 DUP10 ADD PUSH2 0x25D2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2650 DUP9 DUP3 DUP10 ADD PUSH2 0x258B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x496E76616C696420707269636500000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2691 PUSH1 0xD DUP4 PUSH2 0x1D3B JUMP JUMPDEST SWAP2 POP PUSH2 0x269C DUP3 PUSH2 0x265D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26BE DUP2 PUSH2 0x2685 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x271A JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x26F6 JUMPI PUSH2 0x26F5 PUSH2 0x226A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x2705 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x2713 DUP6 PUSH2 0x26C5 JUMP JUMPDEST SWAP5 POP PUSH2 0x26DA JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2732 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x27ED JUMP JUMPDEST DUP2 PUSH2 0x273F JUMPI PUSH0 SWAP1 POP PUSH2 0x27ED JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2755 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x275F JUMPI PUSH2 0x278E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x27ED JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2771 JUMPI PUSH2 0x2770 PUSH2 0x226A JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x2788 JUMPI PUSH2 0x2787 PUSH2 0x226A JUMP JUMPDEST JUMPDEST POP PUSH2 0x27ED JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x27C3 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x27BE JUMPI PUSH2 0x27BD PUSH2 0x226A JUMP JUMPDEST JUMPDEST PUSH2 0x27ED JUMP JUMPDEST PUSH2 0x27D0 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x26D1 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x27E7 JUMPI PUSH2 0x27E6 PUSH2 0x226A JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27FE DUP3 PUSH2 0x1E0D JUMP JUMPDEST SWAP2 POP PUSH2 0x2809 DUP4 PUSH2 0x1E0D JUMP JUMPDEST SWAP3 POP PUSH2 0x2836 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x2723 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2848 DUP3 PUSH2 0x1E0D JUMP JUMPDEST SWAP2 POP PUSH2 0x2853 DUP4 PUSH2 0x1E0D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2861 DUP2 PUSH2 0x1E0D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2878 JUMPI PUSH2 0x2877 PUSH2 0x226A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28B3 PUSH1 0x1D DUP4 PUSH2 0x1D3B JUMP JUMPDEST SWAP2 POP PUSH2 0x28BE DUP3 PUSH2 0x287F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28E0 DUP2 PUSH2 0x28A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x28FA PUSH0 DUP4 ADD DUP7 PUSH2 0x1FB3 JUMP JUMPDEST PUSH2 0x2907 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1EDC JUMP JUMPDEST PUSH2 0x2914 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1EDC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xFFFB 0xF7 ADDMOD 0xEF CHAINID NOT GAS MCOPY 0xD7 0xBA 0xE2 NOT SELFDESTRUCT SHL EXTCODESIZE SELFDESTRUCT 0x2A 0xC8 0xED 0xCA 0xBA 0xCA EQ GT SWAP14 PUSH11 0xA0017B4564736F6C634300 ADDMOD XOR STOP CALLER ",
							"sourceMap": "313:7650:9:-:0;;;1501:577;;;;;;;;;;1582:113:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1744:25:9::1;1772:42;1744:70;;1859:17;1825:9;;:52;;;;;;;;;;;;;;;;;;1979:27;2009:10;1979:40;;2051:19;2030:18;;:40;;;;;;;;;;;;;;;;;;1545:533;;313:7650:::0;;7:99:10;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;313:7650:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@COLLATERAL_RATIO_915": {
									"entryPoint": 5197,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DATAFEED_PRICE_DECIMALS_918": {
									"entryPoint": 3925,
									"id": 918,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DECIMALS_FACTOR_921": {
									"entryPoint": 5332,
									"id": 921,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1493": {
									"entryPoint": null,
									"id": 1493,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_656": {
									"entryPoint": 5551,
									"id": 656,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_716": {
									"entryPoint": 6210,
									"id": 716,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_638": {
									"entryPoint": 5956,
									"id": 638,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_605": {
									"entryPoint": 6083,
									"id": 605,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_881": {
									"entryPoint": 5544,
									"id": 881,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_764": {
									"entryPoint": 5569,
									"id": 764,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_495": {
									"entryPoint": 5716,
									"id": 495,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_572": {
									"entryPoint": 6673,
									"id": 572,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_392": {
									"entryPoint": 5202,
									"id": 392,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_416": {
									"entryPoint": 1955,
									"id": 416,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_351": {
									"entryPoint": 3819,
									"id": 351,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnAndWithdraw_1241": {
									"entryPoint": 3930,
									"id": 1241,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@checkUpkeep_1407": {
									"entryPoint": 3629,
									"id": 1407,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@decimals_999": {
									"entryPoint": 2229,
									"id": 999,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@depositAndMint_1121": {
									"entryPoint": 2919,
									"id": 1121,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@estimateMintAmount_1041": {
									"entryPoint": 4881,
									"id": 1041,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@estimateWithdrawETH_1170": {
									"entryPoint": 5014,
									"id": 1170,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getCollateralRatio_1348": {
									"entryPoint": 1989,
									"id": 1348,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getLatestPrice_1265": {
									"entryPoint": 4480,
									"id": 1265,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getUserCollateralUSD_1311": {
									"entryPoint": 5337,
									"id": 1311,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUsers_1489": {
									"entryPoint": 1672,
									"id": 1489,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@liquidationAddress_923": {
									"entryPoint": 3592,
									"id": 923,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_311": {
									"entryPoint": 1811,
									"id": 311,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@performUpkeep_1480": {
									"entryPoint": 2296,
									"id": 1480,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@positions_933": {
									"entryPoint": 2887,
									"id": 933,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@priceFeed_912": {
									"entryPoint": 3888,
									"id": 912,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_320": {
									"entryPoint": 4703,
									"id": 320,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_338": {
									"entryPoint": 2174,
									"id": 338,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_448": {
									"entryPoint": 2183,
									"id": 448,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_375": {
									"entryPoint": 4847,
									"id": 375,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@users_936": {
									"entryPoint": 2237,
									"id": 936,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 7673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 8942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 8167,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 9662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 9682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 9611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable": {
									"entryPoint": 8962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes_calldata_ptr": {
									"entryPoint": 8252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8072,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 9702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 7314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 7299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_AggregatorV3Interface_$113_to_t_address_fromStack": {
									"entryPoint": 8570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_50f00e964d5ac3dac66b67fc2e4625a9ccdc3847ded815dc2ac958369f46a7c1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6c777964fa4658a71f8d61a969529a42363944b5db8f79613b59875ba240aae8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d1048d9dc1318c819f2a5bff283d5a7be63fad68260777f8e26c6a69616e566c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9453,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9861,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 8032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10471,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7832,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8448,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_AggregatorV3Interface_$113__to_t_address__fromStack_reversed": {
									"entryPoint": 8585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_50f00e964d5ac3dac66b67fc2e4625a9ccdc3847ded815dc2ac958369f46a7c1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6c777964fa4658a71f8d61a969529a42363944b5db8f79613b59875ba240aae8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d1048d9dc1318c819f2a5bff283d5a7be63fad68260777f8e26c6a69616e566c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8327,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 8047,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7473,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 9937,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 10228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 10019,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 10302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7282,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 8903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 9631,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 8020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 9568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_AggregatorV3Interface_$113_to_t_address": {
									"entryPoint": 8553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 8536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 8503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7499,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 8494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8810,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8765,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8672,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9264,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 8159,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8155,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 8163,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7647,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7643,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 9925,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296": {
									"entryPoint": 10367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_50f00e964d5ac3dac66b67fc2e4625a9ccdc3847ded815dc2ac958369f46a7c1": {
									"entryPoint": 9109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6c777964fa4658a71f8d61a969529a42363944b5db8f79613b59875ba240aae8": {
									"entryPoint": 9309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d1048d9dc1318c819f2a5bff283d5a7be63fad68260777f8e26c6a69616e566c": {
									"entryPoint": 9005,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad": {
									"entryPoint": 9413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7": {
									"entryPoint": 9821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 8920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 9640,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 9589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:25555:10",
										"nodeType": "YulBlock",
										"src": "0:25555:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "81:40:10",
													"nodeType": "YulBlock",
													"src": "81:40:10",
													"statements": [
														{
															"nativeSrc": "92:22:10",
															"nodeType": "YulAssignment",
															"src": "92:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "108:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "108:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "102:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "102:5:10"
																},
																"nativeSrc": "102:12:10",
																"nodeType": "YulFunctionCall",
																"src": "102:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "92:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "92:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "7:114:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "64:5:10",
														"nodeType": "YulTypedName",
														"src": "64:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "74:6:10",
														"nodeType": "YulTypedName",
														"src": "74:6:10",
														"type": ""
													}
												],
												"src": "7:114:10"
											},
											{
												"body": {
													"nativeSrc": "238:73:10",
													"nodeType": "YulBlock",
													"src": "238:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "255:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "255:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "260:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "260:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "248:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "248:6:10"
																},
																"nativeSrc": "248:19:10",
																"nodeType": "YulFunctionCall",
																"src": "248:19:10"
															},
															"nativeSrc": "248:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "248:19:10"
														},
														{
															"nativeSrc": "276:29:10",
															"nodeType": "YulAssignment",
															"src": "276:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "295:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "295:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "300:4:10",
																		"nodeType": "YulLiteral",
																		"src": "300:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "291:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "291:3:10"
																},
																"nativeSrc": "291:14:10",
																"nodeType": "YulFunctionCall",
																"src": "291:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "276:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "276:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nativeSrc": "127:184:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "210:3:10",
														"nodeType": "YulTypedName",
														"src": "210:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "215:6:10",
														"nodeType": "YulTypedName",
														"src": "215:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "226:11:10",
														"nodeType": "YulTypedName",
														"src": "226:11:10",
														"type": ""
													}
												],
												"src": "127:184:10"
											},
											{
												"body": {
													"nativeSrc": "389:60:10",
													"nodeType": "YulBlock",
													"src": "389:60:10",
													"statements": [
														{
															"nativeSrc": "399:11:10",
															"nodeType": "YulAssignment",
															"src": "399:11:10",
															"value": {
																"name": "ptr",
																"nativeSrc": "407:3:10",
																"nodeType": "YulIdentifier",
																"src": "407:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "399:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "399:4:10"
																}
															]
														},
														{
															"nativeSrc": "420:22:10",
															"nodeType": "YulAssignment",
															"src": "420:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "432:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "432:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "437:4:10",
																		"nodeType": "YulLiteral",
																		"src": "437:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "428:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "428:3:10"
																},
																"nativeSrc": "428:14:10",
																"nodeType": "YulFunctionCall",
																"src": "428:14:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "420:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "420:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "317:132:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "376:3:10",
														"nodeType": "YulTypedName",
														"src": "376:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "384:4:10",
														"nodeType": "YulTypedName",
														"src": "384:4:10",
														"type": ""
													}
												],
												"src": "317:132:10"
											},
											{
												"body": {
													"nativeSrc": "500:81:10",
													"nodeType": "YulBlock",
													"src": "500:81:10",
													"statements": [
														{
															"nativeSrc": "510:65:10",
															"nodeType": "YulAssignment",
															"src": "510:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "525:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "525:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "532:42:10",
																		"nodeType": "YulLiteral",
																		"src": "532:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "521:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "521:3:10"
																},
																"nativeSrc": "521:54:10",
																"nodeType": "YulFunctionCall",
																"src": "521:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "510:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "510:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "455:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "482:5:10",
														"nodeType": "YulTypedName",
														"src": "482:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "492:7:10",
														"nodeType": "YulTypedName",
														"src": "492:7:10",
														"type": ""
													}
												],
												"src": "455:126:10"
											},
											{
												"body": {
													"nativeSrc": "632:51:10",
													"nodeType": "YulBlock",
													"src": "632:51:10",
													"statements": [
														{
															"nativeSrc": "642:35:10",
															"nodeType": "YulAssignment",
															"src": "642:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "671:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "671:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "653:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "653:17:10"
																},
																"nativeSrc": "653:24:10",
																"nodeType": "YulFunctionCall",
																"src": "653:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "642:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "642:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "587:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "614:5:10",
														"nodeType": "YulTypedName",
														"src": "614:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "624:7:10",
														"nodeType": "YulTypedName",
														"src": "624:7:10",
														"type": ""
													}
												],
												"src": "587:96:10"
											},
											{
												"body": {
													"nativeSrc": "744:53:10",
													"nodeType": "YulBlock",
													"src": "744:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "761:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "761:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "784:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "784:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "766:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "766:17:10"
																		},
																		"nativeSrc": "766:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "766:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "754:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "754:6:10"
																},
																"nativeSrc": "754:37:10",
																"nodeType": "YulFunctionCall",
																"src": "754:37:10"
															},
															"nativeSrc": "754:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "754:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "689:108:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "732:5:10",
														"nodeType": "YulTypedName",
														"src": "732:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "739:3:10",
														"nodeType": "YulTypedName",
														"src": "739:3:10",
														"type": ""
													}
												],
												"src": "689:108:10"
											},
											{
												"body": {
													"nativeSrc": "883:99:10",
													"nodeType": "YulBlock",
													"src": "883:99:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "927:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "927:6:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "935:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "935:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nativeSrc": "893:33:10",
																	"nodeType": "YulIdentifier",
																	"src": "893:33:10"
																},
																"nativeSrc": "893:46:10",
																"nodeType": "YulFunctionCall",
																"src": "893:46:10"
															},
															"nativeSrc": "893:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "893:46:10"
														},
														{
															"nativeSrc": "948:28:10",
															"nodeType": "YulAssignment",
															"src": "948:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "966:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "966:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "971:4:10",
																		"nodeType": "YulLiteral",
																		"src": "971:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "962:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "962:3:10"
																},
																"nativeSrc": "962:14:10",
																"nodeType": "YulFunctionCall",
																"src": "962:14:10"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "948:10:10",
																	"nodeType": "YulIdentifier",
																	"src": "948:10:10"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nativeSrc": "803:179:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "856:6:10",
														"nodeType": "YulTypedName",
														"src": "856:6:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "864:3:10",
														"nodeType": "YulTypedName",
														"src": "864:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "872:10:10",
														"nodeType": "YulTypedName",
														"src": "872:10:10",
														"type": ""
													}
												],
												"src": "803:179:10"
											},
											{
												"body": {
													"nativeSrc": "1063:38:10",
													"nodeType": "YulBlock",
													"src": "1063:38:10",
													"statements": [
														{
															"nativeSrc": "1073:22:10",
															"nodeType": "YulAssignment",
															"src": "1073:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "1085:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1085:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1090:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1090:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1081:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1081:3:10"
																},
																"nativeSrc": "1081:14:10",
																"nodeType": "YulFunctionCall",
																"src": "1081:14:10"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "1073:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1073:4:10"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "988:113:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1050:3:10",
														"nodeType": "YulTypedName",
														"src": "1050:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "1058:4:10",
														"nodeType": "YulTypedName",
														"src": "1058:4:10",
														"type": ""
													}
												],
												"src": "988:113:10"
											},
											{
												"body": {
													"nativeSrc": "1261:608:10",
													"nodeType": "YulBlock",
													"src": "1261:608:10",
													"statements": [
														{
															"nativeSrc": "1271:68:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1271:68:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1333:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1333:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "1285:47:10",
																	"nodeType": "YulIdentifier",
																	"src": "1285:47:10"
																},
																"nativeSrc": "1285:54:10",
																"nodeType": "YulFunctionCall",
																"src": "1285:54:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1275:6:10",
																	"nodeType": "YulTypedName",
																	"src": "1275:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1348:93:10",
															"nodeType": "YulAssignment",
															"src": "1348:93:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1429:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1429:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1434:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1434:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "1355:73:10",
																	"nodeType": "YulIdentifier",
																	"src": "1355:73:10"
																},
																"nativeSrc": "1355:86:10",
																"nodeType": "YulFunctionCall",
																"src": "1355:86:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1348:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1348:3:10"
																}
															]
														},
														{
															"nativeSrc": "1450:71:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1450:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1515:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1515:5:10"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "1465:49:10",
																	"nodeType": "YulIdentifier",
																	"src": "1465:49:10"
																},
																"nativeSrc": "1465:56:10",
																"nodeType": "YulFunctionCall",
																"src": "1465:56:10"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "1454:7:10",
																	"nodeType": "YulTypedName",
																	"src": "1454:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1530:21:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1530:21:10",
															"value": {
																"name": "baseRef",
																"nativeSrc": "1544:7:10",
																"nodeType": "YulIdentifier",
																"src": "1544:7:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "1534:6:10",
																	"nodeType": "YulTypedName",
																	"src": "1534:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1620:224:10",
																"nodeType": "YulBlock",
																"src": "1620:224:10",
																"statements": [
																	{
																		"nativeSrc": "1634:34:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1634:34:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "1661:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "1661:6:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "1655:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1655:5:10"
																			},
																			"nativeSrc": "1655:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1655:13:10"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "1638:13:10",
																				"nodeType": "YulTypedName",
																				"src": "1638:13:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1681:70:10",
																		"nodeType": "YulAssignment",
																		"src": "1681:70:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "1732:13:10",
																					"nodeType": "YulIdentifier",
																					"src": "1732:13:10"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "1747:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1747:3:10"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nativeSrc": "1688:43:10",
																				"nodeType": "YulIdentifier",
																				"src": "1688:43:10"
																			},
																			"nativeSrc": "1688:63:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1688:63:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "1681:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1681:3:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1764:70:10",
																		"nodeType": "YulAssignment",
																		"src": "1764:70:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "1827:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "1827:6:10"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nativeSrc": "1774:52:10",
																				"nodeType": "YulIdentifier",
																				"src": "1774:52:10"
																			},
																			"nativeSrc": "1774:60:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1774:60:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "1764:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1764:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1582:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "1582:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1585:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1585:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1579:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1579:2:10"
																},
																"nativeSrc": "1579:13:10",
																"nodeType": "YulFunctionCall",
																"src": "1579:13:10"
															},
															"nativeSrc": "1560:284:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1593:18:10",
																"nodeType": "YulBlock",
																"src": "1593:18:10",
																"statements": [
																	{
																		"nativeSrc": "1595:14:10",
																		"nodeType": "YulAssignment",
																		"src": "1595:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1604:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "1604:1:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1607:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1607:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1600:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1600:3:10"
																			},
																			"nativeSrc": "1600:9:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1600:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1595:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "1595:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1564:14:10",
																"nodeType": "YulBlock",
																"src": "1564:14:10",
																"statements": [
																	{
																		"nativeSrc": "1566:10:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1566:10:10",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "1575:1:10",
																			"nodeType": "YulLiteral",
																			"src": "1575:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "1570:1:10",
																				"nodeType": "YulTypedName",
																				"src": "1570:1:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "1560:284:10"
														},
														{
															"nativeSrc": "1853:10:10",
															"nodeType": "YulAssignment",
															"src": "1853:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "1860:3:10",
																"nodeType": "YulIdentifier",
																"src": "1860:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1853:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1853:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nativeSrc": "1137:732:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1240:5:10",
														"nodeType": "YulTypedName",
														"src": "1240:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1247:3:10",
														"nodeType": "YulTypedName",
														"src": "1247:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1256:3:10",
														"nodeType": "YulTypedName",
														"src": "1256:3:10",
														"type": ""
													}
												],
												"src": "1137:732:10"
											},
											{
												"body": {
													"nativeSrc": "2023:225:10",
													"nodeType": "YulBlock",
													"src": "2023:225:10",
													"statements": [
														{
															"nativeSrc": "2033:26:10",
															"nodeType": "YulAssignment",
															"src": "2033:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2045:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2045:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2056:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2056:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2041:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2041:3:10"
																},
																"nativeSrc": "2041:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2041:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2033:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2033:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2080:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2080:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2091:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2091:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2076:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2076:3:10"
																		},
																		"nativeSrc": "2076:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2076:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2099:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "2099:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2105:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2105:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2095:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2095:3:10"
																		},
																		"nativeSrc": "2095:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2095:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2069:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2069:6:10"
																},
																"nativeSrc": "2069:47:10",
																"nodeType": "YulFunctionCall",
																"src": "2069:47:10"
															},
															"nativeSrc": "2069:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "2069:47:10"
														},
														{
															"nativeSrc": "2125:116:10",
															"nodeType": "YulAssignment",
															"src": "2125:116:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2227:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2227:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2236:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2236:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "2133:93:10",
																	"nodeType": "YulIdentifier",
																	"src": "2133:93:10"
																},
																"nativeSrc": "2133:108:10",
																"nodeType": "YulFunctionCall",
																"src": "2133:108:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2125:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2125:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "1875:373:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1995:9:10",
														"nodeType": "YulTypedName",
														"src": "1995:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2007:6:10",
														"nodeType": "YulTypedName",
														"src": "2007:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2018:4:10",
														"nodeType": "YulTypedName",
														"src": "2018:4:10",
														"type": ""
													}
												],
												"src": "1875:373:10"
											},
											{
												"body": {
													"nativeSrc": "2313:40:10",
													"nodeType": "YulBlock",
													"src": "2313:40:10",
													"statements": [
														{
															"nativeSrc": "2324:22:10",
															"nodeType": "YulAssignment",
															"src": "2324:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2340:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2340:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2334:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2334:5:10"
																},
																"nativeSrc": "2334:12:10",
																"nodeType": "YulFunctionCall",
																"src": "2334:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2324:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "2254:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2296:5:10",
														"nodeType": "YulTypedName",
														"src": "2296:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2306:6:10",
														"nodeType": "YulTypedName",
														"src": "2306:6:10",
														"type": ""
													}
												],
												"src": "2254:99:10"
											},
											{
												"body": {
													"nativeSrc": "2455:73:10",
													"nodeType": "YulBlock",
													"src": "2455:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2472:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2472:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2477:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2477:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2465:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2465:6:10"
																},
																"nativeSrc": "2465:19:10",
																"nodeType": "YulFunctionCall",
																"src": "2465:19:10"
															},
															"nativeSrc": "2465:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "2465:19:10"
														},
														{
															"nativeSrc": "2493:29:10",
															"nodeType": "YulAssignment",
															"src": "2493:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2512:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2512:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2517:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2517:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2508:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2508:3:10"
																},
																"nativeSrc": "2508:14:10",
																"nodeType": "YulFunctionCall",
																"src": "2508:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2493:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "2493:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2359:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2427:3:10",
														"nodeType": "YulTypedName",
														"src": "2427:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2432:6:10",
														"nodeType": "YulTypedName",
														"src": "2432:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2443:11:10",
														"nodeType": "YulTypedName",
														"src": "2443:11:10",
														"type": ""
													}
												],
												"src": "2359:169:10"
											},
											{
												"body": {
													"nativeSrc": "2596:184:10",
													"nodeType": "YulBlock",
													"src": "2596:184:10",
													"statements": [
														{
															"nativeSrc": "2606:10:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2606:10:10",
															"value": {
																"kind": "number",
																"nativeSrc": "2615:1:10",
																"nodeType": "YulLiteral",
																"src": "2615:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "2610:1:10",
																	"nodeType": "YulTypedName",
																	"src": "2610:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2675:63:10",
																"nodeType": "YulBlock",
																"src": "2675:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "2700:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "2700:3:10"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "2705:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "2705:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2696:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "2696:3:10"
																					},
																					"nativeSrc": "2696:11:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2696:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "2719:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "2719:3:10"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "2724:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "2724:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2715:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "2715:3:10"
																							},
																							"nativeSrc": "2715:11:10",
																							"nodeType": "YulFunctionCall",
																							"src": "2715:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2709:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2709:5:10"
																					},
																					"nativeSrc": "2709:18:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2709:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2689:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2689:6:10"
																			},
																			"nativeSrc": "2689:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2689:39:10"
																		},
																		"nativeSrc": "2689:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2689:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "2636:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "2636:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2639:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2639:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2633:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2633:2:10"
																},
																"nativeSrc": "2633:13:10",
																"nodeType": "YulFunctionCall",
																"src": "2633:13:10"
															},
															"nativeSrc": "2625:113:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2647:19:10",
																"nodeType": "YulBlock",
																"src": "2647:19:10",
																"statements": [
																	{
																		"nativeSrc": "2649:15:10",
																		"nodeType": "YulAssignment",
																		"src": "2649:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "2658:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "2658:1:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2661:2:10",
																					"nodeType": "YulLiteral",
																					"src": "2661:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2654:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2654:3:10"
																			},
																			"nativeSrc": "2654:10:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2654:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "2649:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "2649:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2629:3:10",
																"nodeType": "YulBlock",
																"src": "2629:3:10",
																"statements": []
															},
															"src": "2625:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2758:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2758:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2763:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2763:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2754:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2754:3:10"
																		},
																		"nativeSrc": "2754:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2754:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2772:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2772:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2747:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2747:6:10"
																},
																"nativeSrc": "2747:27:10",
																"nodeType": "YulFunctionCall",
																"src": "2747:27:10"
															},
															"nativeSrc": "2747:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "2747:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2534:246:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2578:3:10",
														"nodeType": "YulTypedName",
														"src": "2578:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2583:3:10",
														"nodeType": "YulTypedName",
														"src": "2583:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2588:6:10",
														"nodeType": "YulTypedName",
														"src": "2588:6:10",
														"type": ""
													}
												],
												"src": "2534:246:10"
											},
											{
												"body": {
													"nativeSrc": "2834:54:10",
													"nodeType": "YulBlock",
													"src": "2834:54:10",
													"statements": [
														{
															"nativeSrc": "2844:38:10",
															"nodeType": "YulAssignment",
															"src": "2844:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2862:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2862:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2869:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2869:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2858:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2858:3:10"
																		},
																		"nativeSrc": "2858:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2858:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2878:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2878:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2874:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2874:3:10"
																		},
																		"nativeSrc": "2874:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2874:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2854:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2854:3:10"
																},
																"nativeSrc": "2854:28:10",
																"nodeType": "YulFunctionCall",
																"src": "2854:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2844:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2844:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2786:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2817:5:10",
														"nodeType": "YulTypedName",
														"src": "2817:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2827:6:10",
														"nodeType": "YulTypedName",
														"src": "2827:6:10",
														"type": ""
													}
												],
												"src": "2786:102:10"
											},
											{
												"body": {
													"nativeSrc": "2986:285:10",
													"nodeType": "YulBlock",
													"src": "2986:285:10",
													"statements": [
														{
															"nativeSrc": "2996:53:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2996:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3043:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3043:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3010:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "3010:32:10"
																},
																"nativeSrc": "3010:39:10",
																"nodeType": "YulFunctionCall",
																"src": "3010:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3000:6:10",
																	"nodeType": "YulTypedName",
																	"src": "3000:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3058:78:10",
															"nodeType": "YulAssignment",
															"src": "3058:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3124:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3124:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3129:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3129:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3065:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "3065:58:10"
																},
																"nativeSrc": "3065:71:10",
																"nodeType": "YulFunctionCall",
																"src": "3065:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3058:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3058:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3184:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3184:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3191:4:10",
																				"nodeType": "YulLiteral",
																				"src": "3191:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3180:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3180:3:10"
																		},
																		"nativeSrc": "3180:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3180:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3198:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3198:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3203:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3203:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "3145:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "3145:34:10"
																},
																"nativeSrc": "3145:65:10",
																"nodeType": "YulFunctionCall",
																"src": "3145:65:10"
															},
															"nativeSrc": "3145:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "3145:65:10"
														},
														{
															"nativeSrc": "3219:46:10",
															"nodeType": "YulAssignment",
															"src": "3219:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3230:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3230:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3257:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3257:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "3235:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "3235:21:10"
																		},
																		"nativeSrc": "3235:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3235:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3226:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3226:3:10"
																},
																"nativeSrc": "3226:39:10",
																"nodeType": "YulFunctionCall",
																"src": "3226:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3219:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3219:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2894:377:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2967:5:10",
														"nodeType": "YulTypedName",
														"src": "2967:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2974:3:10",
														"nodeType": "YulTypedName",
														"src": "2974:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2982:3:10",
														"nodeType": "YulTypedName",
														"src": "2982:3:10",
														"type": ""
													}
												],
												"src": "2894:377:10"
											},
											{
												"body": {
													"nativeSrc": "3395:195:10",
													"nodeType": "YulBlock",
													"src": "3395:195:10",
													"statements": [
														{
															"nativeSrc": "3405:26:10",
															"nodeType": "YulAssignment",
															"src": "3405:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3417:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3417:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3428:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3428:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3413:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3413:3:10"
																},
																"nativeSrc": "3413:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3413:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3405:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3405:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3452:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3452:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3463:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3463:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3448:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3448:3:10"
																		},
																		"nativeSrc": "3448:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3448:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3471:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "3471:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3477:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3477:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3467:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3467:3:10"
																		},
																		"nativeSrc": "3467:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3467:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3441:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3441:6:10"
																},
																"nativeSrc": "3441:47:10",
																"nodeType": "YulFunctionCall",
																"src": "3441:47:10"
															},
															"nativeSrc": "3441:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "3441:47:10"
														},
														{
															"nativeSrc": "3497:86:10",
															"nodeType": "YulAssignment",
															"src": "3497:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3569:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3569:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "3578:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3578:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3505:63:10",
																	"nodeType": "YulIdentifier",
																	"src": "3505:63:10"
																},
																"nativeSrc": "3505:78:10",
																"nodeType": "YulFunctionCall",
																"src": "3505:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3497:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3497:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3277:313:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3367:9:10",
														"nodeType": "YulTypedName",
														"src": "3367:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3379:6:10",
														"nodeType": "YulTypedName",
														"src": "3379:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3390:4:10",
														"nodeType": "YulTypedName",
														"src": "3390:4:10",
														"type": ""
													}
												],
												"src": "3277:313:10"
											},
											{
												"body": {
													"nativeSrc": "3636:35:10",
													"nodeType": "YulBlock",
													"src": "3636:35:10",
													"statements": [
														{
															"nativeSrc": "3646:19:10",
															"nodeType": "YulAssignment",
															"src": "3646:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3662:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3662:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3656:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3656:5:10"
																},
																"nativeSrc": "3656:9:10",
																"nodeType": "YulFunctionCall",
																"src": "3656:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "3646:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3646:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "3596:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "3629:6:10",
														"nodeType": "YulTypedName",
														"src": "3629:6:10",
														"type": ""
													}
												],
												"src": "3596:75:10"
											},
											{
												"body": {
													"nativeSrc": "3766:28:10",
													"nodeType": "YulBlock",
													"src": "3766:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3783:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3783:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3786:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3786:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3776:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:10"
																},
																"nativeSrc": "3776:12:10",
																"nodeType": "YulFunctionCall",
																"src": "3776:12:10"
															},
															"nativeSrc": "3776:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "3776:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "3677:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "3677:117:10"
											},
											{
												"body": {
													"nativeSrc": "3889:28:10",
													"nodeType": "YulBlock",
													"src": "3889:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3906:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3906:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3909:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3909:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3899:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3899:6:10"
																},
																"nativeSrc": "3899:12:10",
																"nodeType": "YulFunctionCall",
																"src": "3899:12:10"
															},
															"nativeSrc": "3899:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "3899:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "3800:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "3800:117:10"
											},
											{
												"body": {
													"nativeSrc": "3966:79:10",
													"nodeType": "YulBlock",
													"src": "3966:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4023:16:10",
																"nodeType": "YulBlock",
																"src": "4023:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4032:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4032:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4035:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4035:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4025:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4025:6:10"
																			},
																			"nativeSrc": "4025:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4025:12:10"
																		},
																		"nativeSrc": "4025:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4025:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3989:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3989:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4014:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4014:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3996:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "3996:17:10"
																				},
																				"nativeSrc": "3996:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3996:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3986:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3986:2:10"
																		},
																		"nativeSrc": "3986:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3986:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3979:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3979:6:10"
																},
																"nativeSrc": "3979:43:10",
																"nodeType": "YulFunctionCall",
																"src": "3979:43:10"
															},
															"nativeSrc": "3976:63:10",
															"nodeType": "YulIf",
															"src": "3976:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3923:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3959:5:10",
														"nodeType": "YulTypedName",
														"src": "3959:5:10",
														"type": ""
													}
												],
												"src": "3923:122:10"
											},
											{
												"body": {
													"nativeSrc": "4103:87:10",
													"nodeType": "YulBlock",
													"src": "4103:87:10",
													"statements": [
														{
															"nativeSrc": "4113:29:10",
															"nodeType": "YulAssignment",
															"src": "4113:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4135:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4135:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4122:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "4122:12:10"
																},
																"nativeSrc": "4122:20:10",
																"nodeType": "YulFunctionCall",
																"src": "4122:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4113:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4113:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4178:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4178:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4151:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "4151:26:10"
																},
																"nativeSrc": "4151:33:10",
																"nodeType": "YulFunctionCall",
																"src": "4151:33:10"
															},
															"nativeSrc": "4151:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "4151:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4051:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4081:6:10",
														"nodeType": "YulTypedName",
														"src": "4081:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4089:3:10",
														"nodeType": "YulTypedName",
														"src": "4089:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4097:5:10",
														"nodeType": "YulTypedName",
														"src": "4097:5:10",
														"type": ""
													}
												],
												"src": "4051:139:10"
											},
											{
												"body": {
													"nativeSrc": "4241:32:10",
													"nodeType": "YulBlock",
													"src": "4241:32:10",
													"statements": [
														{
															"nativeSrc": "4251:16:10",
															"nodeType": "YulAssignment",
															"src": "4251:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "4262:5:10",
																"nodeType": "YulIdentifier",
																"src": "4262:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4251:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "4251:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4196:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4223:5:10",
														"nodeType": "YulTypedName",
														"src": "4223:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4233:7:10",
														"nodeType": "YulTypedName",
														"src": "4233:7:10",
														"type": ""
													}
												],
												"src": "4196:77:10"
											},
											{
												"body": {
													"nativeSrc": "4322:79:10",
													"nodeType": "YulBlock",
													"src": "4322:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4379:16:10",
																"nodeType": "YulBlock",
																"src": "4379:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4388:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4388:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4391:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4391:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4381:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4381:6:10"
																			},
																			"nativeSrc": "4381:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4381:12:10"
																		},
																		"nativeSrc": "4381:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4381:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4345:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4345:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4370:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4370:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4352:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "4352:17:10"
																				},
																				"nativeSrc": "4352:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4352:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4342:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "4342:2:10"
																		},
																		"nativeSrc": "4342:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4342:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4335:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4335:6:10"
																},
																"nativeSrc": "4335:43:10",
																"nodeType": "YulFunctionCall",
																"src": "4335:43:10"
															},
															"nativeSrc": "4332:63:10",
															"nodeType": "YulIf",
															"src": "4332:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "4279:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4315:5:10",
														"nodeType": "YulTypedName",
														"src": "4315:5:10",
														"type": ""
													}
												],
												"src": "4279:122:10"
											},
											{
												"body": {
													"nativeSrc": "4459:87:10",
													"nodeType": "YulBlock",
													"src": "4459:87:10",
													"statements": [
														{
															"nativeSrc": "4469:29:10",
															"nodeType": "YulAssignment",
															"src": "4469:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4491:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4491:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4478:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "4478:12:10"
																},
																"nativeSrc": "4478:20:10",
																"nodeType": "YulFunctionCall",
																"src": "4478:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4469:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4469:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4534:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4534:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "4507:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "4507:26:10"
																},
																"nativeSrc": "4507:33:10",
																"nodeType": "YulFunctionCall",
																"src": "4507:33:10"
															},
															"nativeSrc": "4507:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "4507:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "4407:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4437:6:10",
														"nodeType": "YulTypedName",
														"src": "4437:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4445:3:10",
														"nodeType": "YulTypedName",
														"src": "4445:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4453:5:10",
														"nodeType": "YulTypedName",
														"src": "4453:5:10",
														"type": ""
													}
												],
												"src": "4407:139:10"
											},
											{
												"body": {
													"nativeSrc": "4635:391:10",
													"nodeType": "YulBlock",
													"src": "4635:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4681:83:10",
																"nodeType": "YulBlock",
																"src": "4681:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4683:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4683:77:10"
																			},
																			"nativeSrc": "4683:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4683:79:10"
																		},
																		"nativeSrc": "4683:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4683:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4656:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4656:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4665:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4665:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4652:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4652:3:10"
																		},
																		"nativeSrc": "4652:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4652:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4677:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4677:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4648:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4648:3:10"
																},
																"nativeSrc": "4648:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4648:32:10"
															},
															"nativeSrc": "4645:119:10",
															"nodeType": "YulIf",
															"src": "4645:119:10"
														},
														{
															"nativeSrc": "4774:117:10",
															"nodeType": "YulBlock",
															"src": "4774:117:10",
															"statements": [
																{
																	"nativeSrc": "4789:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4789:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4803:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4803:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4793:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4793:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4818:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4818:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4853:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4853:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4864:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4864:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4849:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4849:3:10"
																				},
																				"nativeSrc": "4849:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4849:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4873:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4873:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4828:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4828:20:10"
																		},
																		"nativeSrc": "4828:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4828:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4818:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4818:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4901:118:10",
															"nodeType": "YulBlock",
															"src": "4901:118:10",
															"statements": [
																{
																	"nativeSrc": "4916:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4916:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4930:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4930:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4920:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4920:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4946:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4946:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4981:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4981:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4992:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4992:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4977:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4977:3:10"
																				},
																				"nativeSrc": "4977:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4977:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5001:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5001:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4956:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4956:20:10"
																		},
																		"nativeSrc": "4956:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4956:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4946:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4946:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4552:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4597:9:10",
														"nodeType": "YulTypedName",
														"src": "4597:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4608:7:10",
														"nodeType": "YulTypedName",
														"src": "4608:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4620:6:10",
														"nodeType": "YulTypedName",
														"src": "4620:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4628:6:10",
														"nodeType": "YulTypedName",
														"src": "4628:6:10",
														"type": ""
													}
												],
												"src": "4552:474:10"
											},
											{
												"body": {
													"nativeSrc": "5074:48:10",
													"nodeType": "YulBlock",
													"src": "5074:48:10",
													"statements": [
														{
															"nativeSrc": "5084:32:10",
															"nodeType": "YulAssignment",
															"src": "5084:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5109:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5109:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5102:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:10"
																		},
																		"nativeSrc": "5102:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5102:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5095:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5095:6:10"
																},
																"nativeSrc": "5095:21:10",
																"nodeType": "YulFunctionCall",
																"src": "5095:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5084:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "5084:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "5032:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5056:5:10",
														"nodeType": "YulTypedName",
														"src": "5056:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5066:7:10",
														"nodeType": "YulTypedName",
														"src": "5066:7:10",
														"type": ""
													}
												],
												"src": "5032:90:10"
											},
											{
												"body": {
													"nativeSrc": "5187:50:10",
													"nodeType": "YulBlock",
													"src": "5187:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5204:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5204:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5224:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5224:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "5209:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "5209:14:10"
																		},
																		"nativeSrc": "5209:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5209:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5197:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5197:6:10"
																},
																"nativeSrc": "5197:34:10",
																"nodeType": "YulFunctionCall",
																"src": "5197:34:10"
															},
															"nativeSrc": "5197:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "5197:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "5128:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5175:5:10",
														"nodeType": "YulTypedName",
														"src": "5175:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5182:3:10",
														"nodeType": "YulTypedName",
														"src": "5182:3:10",
														"type": ""
													}
												],
												"src": "5128:109:10"
											},
											{
												"body": {
													"nativeSrc": "5335:118:10",
													"nodeType": "YulBlock",
													"src": "5335:118:10",
													"statements": [
														{
															"nativeSrc": "5345:26:10",
															"nodeType": "YulAssignment",
															"src": "5345:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5357:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5357:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5368:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5368:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5353:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5353:3:10"
																},
																"nativeSrc": "5353:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5353:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5345:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5345:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5419:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5419:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5432:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5432:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5443:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5443:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5428:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5428:3:10"
																		},
																		"nativeSrc": "5428:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5428:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "5381:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "5381:37:10"
																},
																"nativeSrc": "5381:65:10",
																"nodeType": "YulFunctionCall",
																"src": "5381:65:10"
															},
															"nativeSrc": "5381:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "5381:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "5243:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5307:9:10",
														"nodeType": "YulTypedName",
														"src": "5307:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5319:6:10",
														"nodeType": "YulTypedName",
														"src": "5319:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5330:4:10",
														"nodeType": "YulTypedName",
														"src": "5330:4:10",
														"type": ""
													}
												],
												"src": "5243:210:10"
											},
											{
												"body": {
													"nativeSrc": "5525:263:10",
													"nodeType": "YulBlock",
													"src": "5525:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5571:83:10",
																"nodeType": "YulBlock",
																"src": "5571:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5573:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5573:77:10"
																			},
																			"nativeSrc": "5573:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5573:79:10"
																		},
																		"nativeSrc": "5573:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5573:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5546:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5546:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5555:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5555:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5542:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5542:3:10"
																		},
																		"nativeSrc": "5542:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5542:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5567:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5567:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5538:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5538:3:10"
																},
																"nativeSrc": "5538:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5538:32:10"
															},
															"nativeSrc": "5535:119:10",
															"nodeType": "YulIf",
															"src": "5535:119:10"
														},
														{
															"nativeSrc": "5664:117:10",
															"nodeType": "YulBlock",
															"src": "5664:117:10",
															"statements": [
																{
																	"nativeSrc": "5679:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5679:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5693:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5693:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5683:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5683:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5708:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5708:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5743:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5743:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5754:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5754:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5739:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5739:3:10"
																				},
																				"nativeSrc": "5739:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5739:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5763:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5763:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5718:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5718:20:10"
																		},
																		"nativeSrc": "5718:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5718:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5708:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5708:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5459:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5495:9:10",
														"nodeType": "YulTypedName",
														"src": "5495:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5506:7:10",
														"nodeType": "YulTypedName",
														"src": "5506:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5518:6:10",
														"nodeType": "YulTypedName",
														"src": "5518:6:10",
														"type": ""
													}
												],
												"src": "5459:329:10"
											},
											{
												"body": {
													"nativeSrc": "5859:53:10",
													"nodeType": "YulBlock",
													"src": "5859:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5876:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5876:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5899:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5899:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5881:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "5881:17:10"
																		},
																		"nativeSrc": "5881:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5881:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5869:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5869:6:10"
																},
																"nativeSrc": "5869:37:10",
																"nodeType": "YulFunctionCall",
																"src": "5869:37:10"
															},
															"nativeSrc": "5869:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "5869:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5794:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5847:5:10",
														"nodeType": "YulTypedName",
														"src": "5847:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5854:3:10",
														"nodeType": "YulTypedName",
														"src": "5854:3:10",
														"type": ""
													}
												],
												"src": "5794:118:10"
											},
											{
												"body": {
													"nativeSrc": "6016:124:10",
													"nodeType": "YulBlock",
													"src": "6016:124:10",
													"statements": [
														{
															"nativeSrc": "6026:26:10",
															"nodeType": "YulAssignment",
															"src": "6026:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6038:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6038:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6049:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6049:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6034:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6034:3:10"
																},
																"nativeSrc": "6034:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6034:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6026:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6026:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6106:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6106:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6119:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6119:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6130:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6130:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6115:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6115:3:10"
																		},
																		"nativeSrc": "6115:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6115:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6062:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6062:43:10"
																},
																"nativeSrc": "6062:71:10",
																"nodeType": "YulFunctionCall",
																"src": "6062:71:10"
															},
															"nativeSrc": "6062:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "6062:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5918:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5988:9:10",
														"nodeType": "YulTypedName",
														"src": "5988:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6000:6:10",
														"nodeType": "YulTypedName",
														"src": "6000:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6011:4:10",
														"nodeType": "YulTypedName",
														"src": "6011:4:10",
														"type": ""
													}
												],
												"src": "5918:222:10"
											},
											{
												"body": {
													"nativeSrc": "6246:519:10",
													"nodeType": "YulBlock",
													"src": "6246:519:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6292:83:10",
																"nodeType": "YulBlock",
																"src": "6292:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6294:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6294:77:10"
																			},
																			"nativeSrc": "6294:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6294:79:10"
																		},
																		"nativeSrc": "6294:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6294:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6267:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6267:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6276:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6276:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6263:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6263:3:10"
																		},
																		"nativeSrc": "6263:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6263:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6288:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6288:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6259:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6259:3:10"
																},
																"nativeSrc": "6259:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6259:32:10"
															},
															"nativeSrc": "6256:119:10",
															"nodeType": "YulIf",
															"src": "6256:119:10"
														},
														{
															"nativeSrc": "6385:117:10",
															"nodeType": "YulBlock",
															"src": "6385:117:10",
															"statements": [
																{
																	"nativeSrc": "6400:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6400:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6414:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6414:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6404:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6404:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6429:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6429:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6464:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6464:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6475:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6475:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6460:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6460:3:10"
																				},
																				"nativeSrc": "6460:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6460:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6484:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6484:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6439:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6439:20:10"
																		},
																		"nativeSrc": "6439:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6439:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6429:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6429:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6512:118:10",
															"nodeType": "YulBlock",
															"src": "6512:118:10",
															"statements": [
																{
																	"nativeSrc": "6527:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6527:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6541:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6541:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6531:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6531:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6557:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6557:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6592:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6592:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6603:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6603:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6588:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6588:3:10"
																				},
																				"nativeSrc": "6588:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6588:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6612:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6612:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6567:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6567:20:10"
																		},
																		"nativeSrc": "6567:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6567:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6557:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6557:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6640:118:10",
															"nodeType": "YulBlock",
															"src": "6640:118:10",
															"statements": [
																{
																	"nativeSrc": "6655:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6655:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6669:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6669:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6659:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6659:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6685:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6685:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6720:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6720:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6731:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6731:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6716:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6716:3:10"
																				},
																				"nativeSrc": "6716:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6716:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6740:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6740:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6695:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6695:20:10"
																		},
																		"nativeSrc": "6695:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6695:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6685:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6685:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "6146:619:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6200:9:10",
														"nodeType": "YulTypedName",
														"src": "6200:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6211:7:10",
														"nodeType": "YulTypedName",
														"src": "6211:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6223:6:10",
														"nodeType": "YulTypedName",
														"src": "6223:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6231:6:10",
														"nodeType": "YulTypedName",
														"src": "6231:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6239:6:10",
														"nodeType": "YulTypedName",
														"src": "6239:6:10",
														"type": ""
													}
												],
												"src": "6146:619:10"
											},
											{
												"body": {
													"nativeSrc": "6814:43:10",
													"nodeType": "YulBlock",
													"src": "6814:43:10",
													"statements": [
														{
															"nativeSrc": "6824:27:10",
															"nodeType": "YulAssignment",
															"src": "6824:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6839:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6839:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6846:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6846:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6835:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6835:3:10"
																},
																"nativeSrc": "6835:16:10",
																"nodeType": "YulFunctionCall",
																"src": "6835:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6824:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "6824:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "6771:86:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6796:5:10",
														"nodeType": "YulTypedName",
														"src": "6796:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6806:7:10",
														"nodeType": "YulTypedName",
														"src": "6806:7:10",
														"type": ""
													}
												],
												"src": "6771:86:10"
											},
											{
												"body": {
													"nativeSrc": "6924:51:10",
													"nodeType": "YulBlock",
													"src": "6924:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6941:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6941:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6962:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6962:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "6946:15:10",
																			"nodeType": "YulIdentifier",
																			"src": "6946:15:10"
																		},
																		"nativeSrc": "6946:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6946:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6934:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6934:6:10"
																},
																"nativeSrc": "6934:35:10",
																"nodeType": "YulFunctionCall",
																"src": "6934:35:10"
															},
															"nativeSrc": "6934:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "6934:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "6863:112:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6912:5:10",
														"nodeType": "YulTypedName",
														"src": "6912:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6919:3:10",
														"nodeType": "YulTypedName",
														"src": "6919:3:10",
														"type": ""
													}
												],
												"src": "6863:112:10"
											},
											{
												"body": {
													"nativeSrc": "7075:120:10",
													"nodeType": "YulBlock",
													"src": "7075:120:10",
													"statements": [
														{
															"nativeSrc": "7085:26:10",
															"nodeType": "YulAssignment",
															"src": "7085:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7097:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7097:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7108:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7108:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7093:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7093:3:10"
																},
																"nativeSrc": "7093:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7093:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7085:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7085:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7161:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7161:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7174:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7174:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7185:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7185:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7170:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7170:3:10"
																		},
																		"nativeSrc": "7170:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7170:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "7121:39:10",
																	"nodeType": "YulIdentifier",
																	"src": "7121:39:10"
																},
																"nativeSrc": "7121:67:10",
																"nodeType": "YulFunctionCall",
																"src": "7121:67:10"
															},
															"nativeSrc": "7121:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "7121:67:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "6981:214:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7047:9:10",
														"nodeType": "YulTypedName",
														"src": "7047:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7059:6:10",
														"nodeType": "YulTypedName",
														"src": "7059:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7070:4:10",
														"nodeType": "YulTypedName",
														"src": "7070:4:10",
														"type": ""
													}
												],
												"src": "6981:214:10"
											},
											{
												"body": {
													"nativeSrc": "7267:263:10",
													"nodeType": "YulBlock",
													"src": "7267:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "7313:83:10",
																"nodeType": "YulBlock",
																"src": "7313:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7315:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "7315:77:10"
																			},
																			"nativeSrc": "7315:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7315:79:10"
																		},
																		"nativeSrc": "7315:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7315:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7288:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7288:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7297:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7297:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7284:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7284:3:10"
																		},
																		"nativeSrc": "7284:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7284:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7309:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7309:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7280:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7280:3:10"
																},
																"nativeSrc": "7280:32:10",
																"nodeType": "YulFunctionCall",
																"src": "7280:32:10"
															},
															"nativeSrc": "7277:119:10",
															"nodeType": "YulIf",
															"src": "7277:119:10"
														},
														{
															"nativeSrc": "7406:117:10",
															"nodeType": "YulBlock",
															"src": "7406:117:10",
															"statements": [
																{
																	"nativeSrc": "7421:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7421:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7435:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7435:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7425:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7425:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7450:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7450:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7485:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7485:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7496:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7496:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7481:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7481:3:10"
																				},
																				"nativeSrc": "7481:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7481:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7505:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7505:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7460:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7460:20:10"
																		},
																		"nativeSrc": "7460:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7460:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7450:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7450:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "7201:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7237:9:10",
														"nodeType": "YulTypedName",
														"src": "7237:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7248:7:10",
														"nodeType": "YulTypedName",
														"src": "7248:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7260:6:10",
														"nodeType": "YulTypedName",
														"src": "7260:6:10",
														"type": ""
													}
												],
												"src": "7201:329:10"
											},
											{
												"body": {
													"nativeSrc": "7601:53:10",
													"nodeType": "YulBlock",
													"src": "7601:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7618:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7618:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7641:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "7641:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7623:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "7623:17:10"
																		},
																		"nativeSrc": "7623:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7623:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7611:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7611:6:10"
																},
																"nativeSrc": "7611:37:10",
																"nodeType": "YulFunctionCall",
																"src": "7611:37:10"
															},
															"nativeSrc": "7611:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "7611:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7536:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7589:5:10",
														"nodeType": "YulTypedName",
														"src": "7589:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7596:3:10",
														"nodeType": "YulTypedName",
														"src": "7596:3:10",
														"type": ""
													}
												],
												"src": "7536:118:10"
											},
											{
												"body": {
													"nativeSrc": "7758:124:10",
													"nodeType": "YulBlock",
													"src": "7758:124:10",
													"statements": [
														{
															"nativeSrc": "7768:26:10",
															"nodeType": "YulAssignment",
															"src": "7768:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7780:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7780:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7791:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7791:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7776:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7776:3:10"
																},
																"nativeSrc": "7776:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7776:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7768:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7768:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7848:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7848:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7861:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7861:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7872:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7872:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7857:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7857:3:10"
																		},
																		"nativeSrc": "7857:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7857:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7804:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "7804:43:10"
																},
																"nativeSrc": "7804:71:10",
																"nodeType": "YulFunctionCall",
																"src": "7804:71:10"
															},
															"nativeSrc": "7804:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "7804:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7660:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7730:9:10",
														"nodeType": "YulTypedName",
														"src": "7730:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7742:6:10",
														"nodeType": "YulTypedName",
														"src": "7742:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7753:4:10",
														"nodeType": "YulTypedName",
														"src": "7753:4:10",
														"type": ""
													}
												],
												"src": "7660:222:10"
											},
											{
												"body": {
													"nativeSrc": "7977:28:10",
													"nodeType": "YulBlock",
													"src": "7977:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7994:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7994:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7997:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7997:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7987:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7987:6:10"
																},
																"nativeSrc": "7987:12:10",
																"nodeType": "YulFunctionCall",
																"src": "7987:12:10"
															},
															"nativeSrc": "7987:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "7987:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "7888:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "7888:117:10"
											},
											{
												"body": {
													"nativeSrc": "8100:28:10",
													"nodeType": "YulBlock",
													"src": "8100:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8117:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8117:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8120:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8120:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8110:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8110:6:10"
																},
																"nativeSrc": "8110:12:10",
																"nodeType": "YulFunctionCall",
																"src": "8110:12:10"
															},
															"nativeSrc": "8110:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "8110:12:10"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "8011:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "8011:117:10"
											},
											{
												"body": {
													"nativeSrc": "8223:28:10",
													"nodeType": "YulBlock",
													"src": "8223:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8240:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8240:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8243:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8243:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8233:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8233:6:10"
																},
																"nativeSrc": "8233:12:10",
																"nodeType": "YulFunctionCall",
																"src": "8233:12:10"
															},
															"nativeSrc": "8233:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "8233:12:10"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "8134:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "8134:117:10"
											},
											{
												"body": {
													"nativeSrc": "8344:478:10",
													"nodeType": "YulBlock",
													"src": "8344:478:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "8393:83:10",
																"nodeType": "YulBlock",
																"src": "8393:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8395:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "8395:77:10"
																			},
																			"nativeSrc": "8395:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8395:79:10"
																		},
																		"nativeSrc": "8395:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8395:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8372:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8372:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8380:4:10",
																						"nodeType": "YulLiteral",
																						"src": "8380:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8368:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8368:3:10"
																				},
																				"nativeSrc": "8368:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8368:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8387:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "8387:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8364:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8364:3:10"
																		},
																		"nativeSrc": "8364:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8364:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8357:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8357:6:10"
																},
																"nativeSrc": "8357:35:10",
																"nodeType": "YulFunctionCall",
																"src": "8357:35:10"
															},
															"nativeSrc": "8354:122:10",
															"nodeType": "YulIf",
															"src": "8354:122:10"
														},
														{
															"nativeSrc": "8485:30:10",
															"nodeType": "YulAssignment",
															"src": "8485:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8508:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8508:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8495:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "8495:12:10"
																},
																"nativeSrc": "8495:20:10",
																"nodeType": "YulFunctionCall",
																"src": "8495:20:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8485:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8485:6:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8558:83:10",
																"nodeType": "YulBlock",
																"src": "8558:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "8560:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "8560:77:10"
																			},
																			"nativeSrc": "8560:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8560:79:10"
																		},
																		"nativeSrc": "8560:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8560:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8530:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8530:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8538:18:10",
																		"nodeType": "YulLiteral",
																		"src": "8538:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8527:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "8527:2:10"
																},
																"nativeSrc": "8527:30:10",
																"nodeType": "YulFunctionCall",
																"src": "8527:30:10"
															},
															"nativeSrc": "8524:117:10",
															"nodeType": "YulIf",
															"src": "8524:117:10"
														},
														{
															"nativeSrc": "8650:29:10",
															"nodeType": "YulAssignment",
															"src": "8650:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8666:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8666:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8674:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8674:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8662:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8662:3:10"
																},
																"nativeSrc": "8662:17:10",
																"nodeType": "YulFunctionCall",
																"src": "8662:17:10"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "8650:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "8650:8:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8733:83:10",
																"nodeType": "YulBlock",
																"src": "8733:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "8735:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "8735:77:10"
																			},
																			"nativeSrc": "8735:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8735:79:10"
																		},
																		"nativeSrc": "8735:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8735:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "8698:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "8698:8:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "8712:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8712:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8720:4:10",
																						"nodeType": "YulLiteral",
																						"src": "8720:4:10",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "8708:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8708:3:10"
																				},
																				"nativeSrc": "8708:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8708:17:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8694:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8694:3:10"
																		},
																		"nativeSrc": "8694:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8694:32:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8728:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8728:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8691:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "8691:2:10"
																},
																"nativeSrc": "8691:41:10",
																"nodeType": "YulFunctionCall",
																"src": "8691:41:10"
															},
															"nativeSrc": "8688:128:10",
															"nodeType": "YulIf",
															"src": "8688:128:10"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nativeSrc": "8270:552:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8311:6:10",
														"nodeType": "YulTypedName",
														"src": "8311:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8319:3:10",
														"nodeType": "YulTypedName",
														"src": "8319:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "8327:8:10",
														"nodeType": "YulTypedName",
														"src": "8327:8:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8337:6:10",
														"nodeType": "YulTypedName",
														"src": "8337:6:10",
														"type": ""
													}
												],
												"src": "8270:552:10"
											},
											{
												"body": {
													"nativeSrc": "8913:442:10",
													"nodeType": "YulBlock",
													"src": "8913:442:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "8959:83:10",
																"nodeType": "YulBlock",
																"src": "8959:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8961:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "8961:77:10"
																			},
																			"nativeSrc": "8961:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8961:79:10"
																		},
																		"nativeSrc": "8961:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8961:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8934:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8934:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8943:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8943:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8930:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8930:3:10"
																		},
																		"nativeSrc": "8930:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8930:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8955:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8955:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8926:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8926:3:10"
																},
																"nativeSrc": "8926:32:10",
																"nodeType": "YulFunctionCall",
																"src": "8926:32:10"
															},
															"nativeSrc": "8923:119:10",
															"nodeType": "YulIf",
															"src": "8923:119:10"
														},
														{
															"nativeSrc": "9052:296:10",
															"nodeType": "YulBlock",
															"src": "9052:296:10",
															"statements": [
																{
																	"nativeSrc": "9067:45:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9067:45:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9098:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "9098:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9109:1:10",
																						"nodeType": "YulLiteral",
																						"src": "9109:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9094:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9094:3:10"
																				},
																				"nativeSrc": "9094:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9094:17:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9081:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "9081:12:10"
																		},
																		"nativeSrc": "9081:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9081:31:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9071:6:10",
																			"nodeType": "YulTypedName",
																			"src": "9071:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9159:83:10",
																		"nodeType": "YulBlock",
																		"src": "9159:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9161:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "9161:77:10"
																					},
																					"nativeSrc": "9161:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "9161:79:10"
																				},
																				"nativeSrc": "9161:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "9161:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9131:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9131:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9139:18:10",
																				"nodeType": "YulLiteral",
																				"src": "9139:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9128:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "9128:2:10"
																		},
																		"nativeSrc": "9128:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9128:30:10"
																	},
																	"nativeSrc": "9125:117:10",
																	"nodeType": "YulIf",
																	"src": "9125:117:10"
																},
																{
																	"nativeSrc": "9256:82:10",
																	"nodeType": "YulAssignment",
																	"src": "9256:82:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9310:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "9310:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9321:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "9321:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9306:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9306:3:10"
																				},
																				"nativeSrc": "9306:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9306:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9330:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9330:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nativeSrc": "9274:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "9274:31:10"
																		},
																		"nativeSrc": "9274:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9274:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9256:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "9256:6:10"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "9264:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "9264:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_calldata_ptr",
												"nativeSrc": "8828:527:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8875:9:10",
														"nodeType": "YulTypedName",
														"src": "8875:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8886:7:10",
														"nodeType": "YulTypedName",
														"src": "8886:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8898:6:10",
														"nodeType": "YulTypedName",
														"src": "8898:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8906:6:10",
														"nodeType": "YulTypedName",
														"src": "8906:6:10",
														"type": ""
													}
												],
												"src": "8828:527:10"
											},
											{
												"body": {
													"nativeSrc": "9487:206:10",
													"nodeType": "YulBlock",
													"src": "9487:206:10",
													"statements": [
														{
															"nativeSrc": "9497:26:10",
															"nodeType": "YulAssignment",
															"src": "9497:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9509:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9509:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9520:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9520:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9505:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9505:3:10"
																},
																"nativeSrc": "9505:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9505:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9497:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9497:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9577:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9577:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9590:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9590:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9601:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9601:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9586:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9586:3:10"
																		},
																		"nativeSrc": "9586:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9586:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9533:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9533:43:10"
																},
																"nativeSrc": "9533:71:10",
																"nodeType": "YulFunctionCall",
																"src": "9533:71:10"
															},
															"nativeSrc": "9533:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "9533:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9658:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9658:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9671:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9671:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9682:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9682:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9667:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9667:3:10"
																		},
																		"nativeSrc": "9667:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9667:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9614:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9614:43:10"
																},
																"nativeSrc": "9614:72:10",
																"nodeType": "YulFunctionCall",
																"src": "9614:72:10"
															},
															"nativeSrc": "9614:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "9614:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9361:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9451:9:10",
														"nodeType": "YulTypedName",
														"src": "9451:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9463:6:10",
														"nodeType": "YulTypedName",
														"src": "9463:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9471:6:10",
														"nodeType": "YulTypedName",
														"src": "9471:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9482:4:10",
														"nodeType": "YulTypedName",
														"src": "9482:4:10",
														"type": ""
													}
												],
												"src": "9361:332:10"
											},
											{
												"body": {
													"nativeSrc": "9757:40:10",
													"nodeType": "YulBlock",
													"src": "9757:40:10",
													"statements": [
														{
															"nativeSrc": "9768:22:10",
															"nodeType": "YulAssignment",
															"src": "9768:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9784:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "9784:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9778:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "9778:5:10"
																},
																"nativeSrc": "9778:12:10",
																"nodeType": "YulFunctionCall",
																"src": "9778:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9768:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9768:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "9699:98:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9740:5:10",
														"nodeType": "YulTypedName",
														"src": "9740:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9750:6:10",
														"nodeType": "YulTypedName",
														"src": "9750:6:10",
														"type": ""
													}
												],
												"src": "9699:98:10"
											},
											{
												"body": {
													"nativeSrc": "9898:73:10",
													"nodeType": "YulBlock",
													"src": "9898:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9915:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9915:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9920:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9920:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9908:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9908:6:10"
																},
																"nativeSrc": "9908:19:10",
																"nodeType": "YulFunctionCall",
																"src": "9908:19:10"
															},
															"nativeSrc": "9908:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "9908:19:10"
														},
														{
															"nativeSrc": "9936:29:10",
															"nodeType": "YulAssignment",
															"src": "9936:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9955:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9955:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9960:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9960:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9951:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9951:3:10"
																},
																"nativeSrc": "9951:14:10",
																"nodeType": "YulFunctionCall",
																"src": "9951:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9936:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "9803:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9870:3:10",
														"nodeType": "YulTypedName",
														"src": "9870:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9875:6:10",
														"nodeType": "YulTypedName",
														"src": "9875:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9886:11:10",
														"nodeType": "YulTypedName",
														"src": "9886:11:10",
														"type": ""
													}
												],
												"src": "9803:168:10"
											},
											{
												"body": {
													"nativeSrc": "10067:283:10",
													"nodeType": "YulBlock",
													"src": "10067:283:10",
													"statements": [
														{
															"nativeSrc": "10077:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "10077:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10123:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "10123:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "10091:31:10",
																	"nodeType": "YulIdentifier",
																	"src": "10091:31:10"
																},
																"nativeSrc": "10091:38:10",
																"nodeType": "YulFunctionCall",
																"src": "10091:38:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10081:6:10",
																	"nodeType": "YulTypedName",
																	"src": "10081:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10138:77:10",
															"nodeType": "YulAssignment",
															"src": "10138:77:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10203:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10203:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10208:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10208:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "10145:57:10",
																	"nodeType": "YulIdentifier",
																	"src": "10145:57:10"
																},
																"nativeSrc": "10145:70:10",
																"nodeType": "YulFunctionCall",
																"src": "10145:70:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10138:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10138:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10263:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "10263:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10270:4:10",
																				"nodeType": "YulLiteral",
																				"src": "10270:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10259:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10259:3:10"
																		},
																		"nativeSrc": "10259:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10259:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "10277:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10277:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10282:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10282:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "10224:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "10224:34:10"
																},
																"nativeSrc": "10224:65:10",
																"nodeType": "YulFunctionCall",
																"src": "10224:65:10"
															},
															"nativeSrc": "10224:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "10224:65:10"
														},
														{
															"nativeSrc": "10298:46:10",
															"nodeType": "YulAssignment",
															"src": "10298:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10309:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10309:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10336:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10336:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "10314:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "10314:21:10"
																		},
																		"nativeSrc": "10314:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10314:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10305:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10305:3:10"
																},
																"nativeSrc": "10305:39:10",
																"nodeType": "YulFunctionCall",
																"src": "10305:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10298:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10298:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "9977:373:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10048:5:10",
														"nodeType": "YulTypedName",
														"src": "10048:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10055:3:10",
														"nodeType": "YulTypedName",
														"src": "10055:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10063:3:10",
														"nodeType": "YulTypedName",
														"src": "10063:3:10",
														"type": ""
													}
												],
												"src": "9977:373:10"
											},
											{
												"body": {
													"nativeSrc": "10494:269:10",
													"nodeType": "YulBlock",
													"src": "10494:269:10",
													"statements": [
														{
															"nativeSrc": "10504:26:10",
															"nodeType": "YulAssignment",
															"src": "10504:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10516:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10516:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10527:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10527:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10512:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10512:3:10"
																},
																"nativeSrc": "10512:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10512:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10504:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10504:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10578:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10578:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10591:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10591:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10602:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10602:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10587:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10587:3:10"
																		},
																		"nativeSrc": "10587:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10587:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "10540:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "10540:37:10"
																},
																"nativeSrc": "10540:65:10",
																"nodeType": "YulFunctionCall",
																"src": "10540:65:10"
															},
															"nativeSrc": "10540:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "10540:65:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10626:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10626:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10637:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10637:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10622:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10622:3:10"
																		},
																		"nativeSrc": "10622:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10622:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10646:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "10646:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10652:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10652:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10642:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10642:3:10"
																		},
																		"nativeSrc": "10642:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10642:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10615:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10615:6:10"
																},
																"nativeSrc": "10615:48:10",
																"nodeType": "YulFunctionCall",
																"src": "10615:48:10"
															},
															"nativeSrc": "10615:48:10",
															"nodeType": "YulExpressionStatement",
															"src": "10615:48:10"
														},
														{
															"nativeSrc": "10672:84:10",
															"nodeType": "YulAssignment",
															"src": "10672:84:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10742:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10742:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "10751:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10751:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "10680:61:10",
																	"nodeType": "YulIdentifier",
																	"src": "10680:61:10"
																},
																"nativeSrc": "10680:76:10",
																"nodeType": "YulFunctionCall",
																"src": "10680:76:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10672:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10672:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "10356:407:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10458:9:10",
														"nodeType": "YulTypedName",
														"src": "10458:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10470:6:10",
														"nodeType": "YulTypedName",
														"src": "10470:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10478:6:10",
														"nodeType": "YulTypedName",
														"src": "10478:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10489:4:10",
														"nodeType": "YulTypedName",
														"src": "10489:4:10",
														"type": ""
													}
												],
												"src": "10356:407:10"
											},
											{
												"body": {
													"nativeSrc": "10801:28:10",
													"nodeType": "YulBlock",
													"src": "10801:28:10",
													"statements": [
														{
															"nativeSrc": "10811:12:10",
															"nodeType": "YulAssignment",
															"src": "10811:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "10818:5:10",
																"nodeType": "YulIdentifier",
																"src": "10818:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "10811:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10811:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "10769:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10787:5:10",
														"nodeType": "YulTypedName",
														"src": "10787:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "10797:3:10",
														"nodeType": "YulTypedName",
														"src": "10797:3:10",
														"type": ""
													}
												],
												"src": "10769:60:10"
											},
											{
												"body": {
													"nativeSrc": "10895:82:10",
													"nodeType": "YulBlock",
													"src": "10895:82:10",
													"statements": [
														{
															"nativeSrc": "10905:66:10",
															"nodeType": "YulAssignment",
															"src": "10905:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10963:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "10963:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "10945:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "10945:17:10"
																				},
																				"nativeSrc": "10945:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10945:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "10936:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "10936:8:10"
																		},
																		"nativeSrc": "10936:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10936:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "10918:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "10918:17:10"
																},
																"nativeSrc": "10918:53:10",
																"nodeType": "YulFunctionCall",
																"src": "10918:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "10905:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "10905:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "10835:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10875:5:10",
														"nodeType": "YulTypedName",
														"src": "10875:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "10885:9:10",
														"nodeType": "YulTypedName",
														"src": "10885:9:10",
														"type": ""
													}
												],
												"src": "10835:142:10"
											},
											{
												"body": {
													"nativeSrc": "11043:66:10",
													"nodeType": "YulBlock",
													"src": "11043:66:10",
													"statements": [
														{
															"nativeSrc": "11053:50:10",
															"nodeType": "YulAssignment",
															"src": "11053:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11097:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "11097:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "11066:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "11066:30:10"
																},
																"nativeSrc": "11066:37:10",
																"nodeType": "YulFunctionCall",
																"src": "11066:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "11053:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "11053:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "10983:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11023:5:10",
														"nodeType": "YulTypedName",
														"src": "11023:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "11033:9:10",
														"nodeType": "YulTypedName",
														"src": "11033:9:10",
														"type": ""
													}
												],
												"src": "10983:126:10"
											},
											{
												"body": {
													"nativeSrc": "11204:66:10",
													"nodeType": "YulBlock",
													"src": "11204:66:10",
													"statements": [
														{
															"nativeSrc": "11214:50:10",
															"nodeType": "YulAssignment",
															"src": "11214:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11258:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "11258:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "11227:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "11227:30:10"
																},
																"nativeSrc": "11227:37:10",
																"nodeType": "YulFunctionCall",
																"src": "11227:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "11214:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "11214:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_AggregatorV3Interface_$113_to_t_address",
												"nativeSrc": "11115:155:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11184:5:10",
														"nodeType": "YulTypedName",
														"src": "11184:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "11194:9:10",
														"nodeType": "YulTypedName",
														"src": "11194:9:10",
														"type": ""
													}
												],
												"src": "11115:155:10"
											},
											{
												"body": {
													"nativeSrc": "11370:95:10",
													"nodeType": "YulBlock",
													"src": "11370:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11387:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11387:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11452:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "11452:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_AggregatorV3Interface_$113_to_t_address",
																			"nativeSrc": "11392:59:10",
																			"nodeType": "YulIdentifier",
																			"src": "11392:59:10"
																		},
																		"nativeSrc": "11392:66:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11392:66:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11380:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11380:6:10"
																},
																"nativeSrc": "11380:79:10",
																"nodeType": "YulFunctionCall",
																"src": "11380:79:10"
															},
															"nativeSrc": "11380:79:10",
															"nodeType": "YulExpressionStatement",
															"src": "11380:79:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_AggregatorV3Interface_$113_to_t_address_fromStack",
												"nativeSrc": "11276:189:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11358:5:10",
														"nodeType": "YulTypedName",
														"src": "11358:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11365:3:10",
														"nodeType": "YulTypedName",
														"src": "11365:3:10",
														"type": ""
													}
												],
												"src": "11276:189:10"
											},
											{
												"body": {
													"nativeSrc": "11598:153:10",
													"nodeType": "YulBlock",
													"src": "11598:153:10",
													"statements": [
														{
															"nativeSrc": "11608:26:10",
															"nodeType": "YulAssignment",
															"src": "11608:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11620:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11620:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11631:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11631:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11616:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11616:3:10"
																},
																"nativeSrc": "11616:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11616:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11608:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11608:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11717:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11717:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11730:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11730:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11741:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11741:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11726:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11726:3:10"
																		},
																		"nativeSrc": "11726:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11726:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_AggregatorV3Interface_$113_to_t_address_fromStack",
																	"nativeSrc": "11644:72:10",
																	"nodeType": "YulIdentifier",
																	"src": "11644:72:10"
																},
																"nativeSrc": "11644:100:10",
																"nodeType": "YulFunctionCall",
																"src": "11644:100:10"
															},
															"nativeSrc": "11644:100:10",
															"nodeType": "YulExpressionStatement",
															"src": "11644:100:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_AggregatorV3Interface_$113__to_t_address__fromStack_reversed",
												"nativeSrc": "11471:280:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11570:9:10",
														"nodeType": "YulTypedName",
														"src": "11570:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11582:6:10",
														"nodeType": "YulTypedName",
														"src": "11582:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11593:4:10",
														"nodeType": "YulTypedName",
														"src": "11593:4:10",
														"type": ""
													}
												],
												"src": "11471:280:10"
											},
											{
												"body": {
													"nativeSrc": "11840:391:10",
													"nodeType": "YulBlock",
													"src": "11840:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "11886:83:10",
																"nodeType": "YulBlock",
																"src": "11886:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11888:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "11888:77:10"
																			},
																			"nativeSrc": "11888:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11888:79:10"
																		},
																		"nativeSrc": "11888:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "11888:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11861:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "11861:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11870:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11870:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11857:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11857:3:10"
																		},
																		"nativeSrc": "11857:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11857:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11882:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11882:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11853:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11853:3:10"
																},
																"nativeSrc": "11853:32:10",
																"nodeType": "YulFunctionCall",
																"src": "11853:32:10"
															},
															"nativeSrc": "11850:119:10",
															"nodeType": "YulIf",
															"src": "11850:119:10"
														},
														{
															"nativeSrc": "11979:117:10",
															"nodeType": "YulBlock",
															"src": "11979:117:10",
															"statements": [
																{
																	"nativeSrc": "11994:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11994:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12008:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12008:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11998:6:10",
																			"nodeType": "YulTypedName",
																			"src": "11998:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12023:63:10",
																	"nodeType": "YulAssignment",
																	"src": "12023:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12058:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "12058:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12069:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "12069:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12054:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "12054:3:10"
																				},
																				"nativeSrc": "12054:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12054:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12078:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "12078:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12033:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "12033:20:10"
																		},
																		"nativeSrc": "12033:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12033:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12023:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "12023:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12106:118:10",
															"nodeType": "YulBlock",
															"src": "12106:118:10",
															"statements": [
																{
																	"nativeSrc": "12121:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12121:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12135:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12135:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12125:6:10",
																			"nodeType": "YulTypedName",
																			"src": "12125:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12151:63:10",
																	"nodeType": "YulAssignment",
																	"src": "12151:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12186:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "12186:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12197:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "12197:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12182:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "12182:3:10"
																				},
																				"nativeSrc": "12182:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12182:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12206:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "12206:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12161:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "12161:20:10"
																		},
																		"nativeSrc": "12161:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12161:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12151:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "12151:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "11757:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11802:9:10",
														"nodeType": "YulTypedName",
														"src": "11802:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11813:7:10",
														"nodeType": "YulTypedName",
														"src": "11813:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11825:6:10",
														"nodeType": "YulTypedName",
														"src": "11825:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11833:6:10",
														"nodeType": "YulTypedName",
														"src": "11833:6:10",
														"type": ""
													}
												],
												"src": "11757:474:10"
											},
											{
												"body": {
													"nativeSrc": "12265:152:10",
													"nodeType": "YulBlock",
													"src": "12265:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12282:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12282:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12285:77:10",
																		"nodeType": "YulLiteral",
																		"src": "12285:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12275:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12275:6:10"
																},
																"nativeSrc": "12275:88:10",
																"nodeType": "YulFunctionCall",
																"src": "12275:88:10"
															},
															"nativeSrc": "12275:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "12275:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12379:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12379:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12382:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12382:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12372:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12372:6:10"
																},
																"nativeSrc": "12372:15:10",
																"nodeType": "YulFunctionCall",
																"src": "12372:15:10"
															},
															"nativeSrc": "12372:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "12372:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12403:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12403:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12406:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12406:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12396:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12396:6:10"
																},
																"nativeSrc": "12396:15:10",
																"nodeType": "YulFunctionCall",
																"src": "12396:15:10"
															},
															"nativeSrc": "12396:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "12396:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "12237:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "12237:180:10"
											},
											{
												"body": {
													"nativeSrc": "12474:269:10",
													"nodeType": "YulBlock",
													"src": "12474:269:10",
													"statements": [
														{
															"nativeSrc": "12484:22:10",
															"nodeType": "YulAssignment",
															"src": "12484:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12498:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12498:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12504:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12504:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12494:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12494:3:10"
																},
																"nativeSrc": "12494:12:10",
																"nodeType": "YulFunctionCall",
																"src": "12494:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12484:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12484:6:10"
																}
															]
														},
														{
															"nativeSrc": "12515:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "12515:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12545:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12545:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12551:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12551:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12541:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12541:3:10"
																},
																"nativeSrc": "12541:12:10",
																"nodeType": "YulFunctionCall",
																"src": "12541:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "12519:18:10",
																	"nodeType": "YulTypedName",
																	"src": "12519:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12592:51:10",
																"nodeType": "YulBlock",
																"src": "12592:51:10",
																"statements": [
																	{
																		"nativeSrc": "12606:27:10",
																		"nodeType": "YulAssignment",
																		"src": "12606:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "12620:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "12620:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12628:4:10",
																					"nodeType": "YulLiteral",
																					"src": "12628:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "12616:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "12616:3:10"
																			},
																			"nativeSrc": "12616:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "12616:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "12606:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12606:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12572:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "12572:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12565:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12565:6:10"
																},
																"nativeSrc": "12565:26:10",
																"nodeType": "YulFunctionCall",
																"src": "12565:26:10"
															},
															"nativeSrc": "12562:81:10",
															"nodeType": "YulIf",
															"src": "12562:81:10"
														},
														{
															"body": {
																"nativeSrc": "12695:42:10",
																"nodeType": "YulBlock",
																"src": "12695:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "12709:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "12709:16:10"
																			},
																			"nativeSrc": "12709:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "12709:18:10"
																		},
																		"nativeSrc": "12709:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "12709:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12659:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "12659:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12682:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12682:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12690:2:10",
																				"nodeType": "YulLiteral",
																				"src": "12690:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "12679:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "12679:2:10"
																		},
																		"nativeSrc": "12679:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12679:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "12656:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "12656:2:10"
																},
																"nativeSrc": "12656:38:10",
																"nodeType": "YulFunctionCall",
																"src": "12656:38:10"
															},
															"nativeSrc": "12653:84:10",
															"nodeType": "YulIf",
															"src": "12653:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "12423:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12458:4:10",
														"nodeType": "YulTypedName",
														"src": "12458:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12467:6:10",
														"nodeType": "YulTypedName",
														"src": "12467:6:10",
														"type": ""
													}
												],
												"src": "12423:320:10"
											},
											{
												"body": {
													"nativeSrc": "12777:152:10",
													"nodeType": "YulBlock",
													"src": "12777:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12794:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12794:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12797:77:10",
																		"nodeType": "YulLiteral",
																		"src": "12797:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12787:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12787:6:10"
																},
																"nativeSrc": "12787:88:10",
																"nodeType": "YulFunctionCall",
																"src": "12787:88:10"
															},
															"nativeSrc": "12787:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "12787:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12891:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12891:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12894:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12894:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12884:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12884:6:10"
																},
																"nativeSrc": "12884:15:10",
																"nodeType": "YulFunctionCall",
																"src": "12884:15:10"
															},
															"nativeSrc": "12884:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "12884:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12915:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12915:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12918:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12918:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12908:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12908:6:10"
																},
																"nativeSrc": "12908:15:10",
																"nodeType": "YulFunctionCall",
																"src": "12908:15:10"
															},
															"nativeSrc": "12908:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "12908:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "12749:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "12749:180:10"
											},
											{
												"body": {
													"nativeSrc": "12963:152:10",
													"nodeType": "YulBlock",
													"src": "12963:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12980:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12980:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12983:77:10",
																		"nodeType": "YulLiteral",
																		"src": "12983:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12973:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12973:6:10"
																},
																"nativeSrc": "12973:88:10",
																"nodeType": "YulFunctionCall",
																"src": "12973:88:10"
															},
															"nativeSrc": "12973:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "12973:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13077:1:10",
																		"nodeType": "YulLiteral",
																		"src": "13077:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13080:4:10",
																		"nodeType": "YulLiteral",
																		"src": "13080:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13070:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13070:6:10"
																},
																"nativeSrc": "13070:15:10",
																"nodeType": "YulFunctionCall",
																"src": "13070:15:10"
															},
															"nativeSrc": "13070:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "13070:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13101:1:10",
																		"nodeType": "YulLiteral",
																		"src": "13101:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13104:4:10",
																		"nodeType": "YulLiteral",
																		"src": "13104:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13094:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13094:6:10"
																},
																"nativeSrc": "13094:15:10",
																"nodeType": "YulFunctionCall",
																"src": "13094:15:10"
															},
															"nativeSrc": "13094:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "13094:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "12935:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "12935:180:10"
											},
											{
												"body": {
													"nativeSrc": "13163:143:10",
													"nodeType": "YulBlock",
													"src": "13163:143:10",
													"statements": [
														{
															"nativeSrc": "13173:25:10",
															"nodeType": "YulAssignment",
															"src": "13173:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13196:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13196:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13178:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "13178:17:10"
																},
																"nativeSrc": "13178:20:10",
																"nodeType": "YulFunctionCall",
																"src": "13178:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13173:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "13173:1:10"
																}
															]
														},
														{
															"nativeSrc": "13207:25:10",
															"nodeType": "YulAssignment",
															"src": "13207:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13230:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13230:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13212:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "13212:17:10"
																},
																"nativeSrc": "13212:20:10",
																"nodeType": "YulFunctionCall",
																"src": "13212:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13207:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "13207:1:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13254:22:10",
																"nodeType": "YulBlock",
																"src": "13254:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "13256:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "13256:16:10"
																			},
																			"nativeSrc": "13256:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "13256:18:10"
																		},
																		"nativeSrc": "13256:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "13256:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13251:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13251:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13244:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13244:6:10"
																},
																"nativeSrc": "13244:9:10",
																"nodeType": "YulFunctionCall",
																"src": "13244:9:10"
															},
															"nativeSrc": "13241:35:10",
															"nodeType": "YulIf",
															"src": "13241:35:10"
														},
														{
															"nativeSrc": "13286:14:10",
															"nodeType": "YulAssignment",
															"src": "13286:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13295:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13295:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13298:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13298:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13291:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13291:3:10"
																},
																"nativeSrc": "13291:9:10",
																"nodeType": "YulFunctionCall",
																"src": "13291:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "13286:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "13286:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "13121:185:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13152:1:10",
														"nodeType": "YulTypedName",
														"src": "13152:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13155:1:10",
														"nodeType": "YulTypedName",
														"src": "13155:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "13161:1:10",
														"nodeType": "YulTypedName",
														"src": "13161:1:10",
														"type": ""
													}
												],
												"src": "13121:185:10"
											},
											{
												"body": {
													"nativeSrc": "13365:51:10",
													"nodeType": "YulBlock",
													"src": "13365:51:10",
													"statements": [
														{
															"nativeSrc": "13375:35:10",
															"nodeType": "YulAssignment",
															"src": "13375:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "13404:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "13386:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "13386:17:10"
																},
																"nativeSrc": "13386:24:10",
																"nodeType": "YulFunctionCall",
																"src": "13386:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "13375:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "13375:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "13312:104:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13347:5:10",
														"nodeType": "YulTypedName",
														"src": "13347:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "13357:7:10",
														"nodeType": "YulTypedName",
														"src": "13357:7:10",
														"type": ""
													}
												],
												"src": "13312:104:10"
											},
											{
												"body": {
													"nativeSrc": "13473:87:10",
													"nodeType": "YulBlock",
													"src": "13473:87:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "13538:16:10",
																"nodeType": "YulBlock",
																"src": "13538:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13547:1:10",
																					"nodeType": "YulLiteral",
																					"src": "13547:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13550:1:10",
																					"nodeType": "YulLiteral",
																					"src": "13550:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13540:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13540:6:10"
																			},
																			"nativeSrc": "13540:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "13540:12:10"
																		},
																		"nativeSrc": "13540:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "13540:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13496:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "13496:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13529:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "13529:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nativeSrc": "13503:25:10",
																					"nodeType": "YulIdentifier",
																					"src": "13503:25:10"
																				},
																				"nativeSrc": "13503:32:10",
																				"nodeType": "YulFunctionCall",
																				"src": "13503:32:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "13493:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "13493:2:10"
																		},
																		"nativeSrc": "13493:43:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13493:43:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13486:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13486:6:10"
																},
																"nativeSrc": "13486:51:10",
																"nodeType": "YulFunctionCall",
																"src": "13486:51:10"
															},
															"nativeSrc": "13483:71:10",
															"nodeType": "YulIf",
															"src": "13483:71:10"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nativeSrc": "13422:138:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13466:5:10",
														"nodeType": "YulTypedName",
														"src": "13466:5:10",
														"type": ""
													}
												],
												"src": "13422:138:10"
											},
											{
												"body": {
													"nativeSrc": "13626:95:10",
													"nodeType": "YulBlock",
													"src": "13626:95:10",
													"statements": [
														{
															"nativeSrc": "13636:29:10",
															"nodeType": "YulAssignment",
															"src": "13636:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13658:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13658:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "13645:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "13645:12:10"
																},
																"nativeSrc": "13645:20:10",
																"nodeType": "YulFunctionCall",
																"src": "13645:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13636:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "13636:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13709:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "13709:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nativeSrc": "13674:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "13674:34:10"
																},
																"nativeSrc": "13674:41:10",
																"nodeType": "YulFunctionCall",
																"src": "13674:41:10"
															},
															"nativeSrc": "13674:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "13674:41:10"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nativeSrc": "13566:155:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13604:6:10",
														"nodeType": "YulTypedName",
														"src": "13604:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13612:3:10",
														"nodeType": "YulTypedName",
														"src": "13612:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13620:5:10",
														"nodeType": "YulTypedName",
														"src": "13620:5:10",
														"type": ""
													}
												],
												"src": "13566:155:10"
											},
											{
												"body": {
													"nativeSrc": "13801:271:10",
													"nodeType": "YulBlock",
													"src": "13801:271:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "13847:83:10",
																"nodeType": "YulBlock",
																"src": "13847:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13849:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "13849:77:10"
																			},
																			"nativeSrc": "13849:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "13849:79:10"
																		},
																		"nativeSrc": "13849:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "13849:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13822:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "13822:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13831:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13831:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13818:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13818:3:10"
																		},
																		"nativeSrc": "13818:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13818:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13843:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13843:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13814:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13814:3:10"
																},
																"nativeSrc": "13814:32:10",
																"nodeType": "YulFunctionCall",
																"src": "13814:32:10"
															},
															"nativeSrc": "13811:119:10",
															"nodeType": "YulIf",
															"src": "13811:119:10"
														},
														{
															"nativeSrc": "13940:125:10",
															"nodeType": "YulBlock",
															"src": "13940:125:10",
															"statements": [
																{
																	"nativeSrc": "13955:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13955:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13969:1:10",
																		"nodeType": "YulLiteral",
																		"src": "13969:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13959:6:10",
																			"nodeType": "YulTypedName",
																			"src": "13959:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13984:71:10",
																	"nodeType": "YulAssignment",
																	"src": "13984:71:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14027:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "14027:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14038:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "14038:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14023:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "14023:3:10"
																				},
																				"nativeSrc": "14023:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "14023:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14047:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "14047:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nativeSrc": "13994:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "13994:28:10"
																		},
																		"nativeSrc": "13994:61:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13994:61:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13984:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "13984:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable",
												"nativeSrc": "13727:345:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13771:9:10",
														"nodeType": "YulTypedName",
														"src": "13771:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13782:7:10",
														"nodeType": "YulTypedName",
														"src": "13782:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13794:6:10",
														"nodeType": "YulTypedName",
														"src": "13794:6:10",
														"type": ""
													}
												],
												"src": "13727:345:10"
											},
											{
												"body": {
													"nativeSrc": "14184:65:10",
													"nodeType": "YulBlock",
													"src": "14184:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14206:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14206:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14214:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14214:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14202:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14202:3:10"
																		},
																		"nativeSrc": "14202:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14202:14:10"
																	},
																	{
																		"hexValue": "55736572206e6f74206c6971756964617461626c65",
																		"kind": "string",
																		"nativeSrc": "14218:23:10",
																		"nodeType": "YulLiteral",
																		"src": "14218:23:10",
																		"type": "",
																		"value": "User not liquidatable"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14195:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14195:6:10"
																},
																"nativeSrc": "14195:47:10",
																"nodeType": "YulFunctionCall",
																"src": "14195:47:10"
															},
															"nativeSrc": "14195:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "14195:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_d1048d9dc1318c819f2a5bff283d5a7be63fad68260777f8e26c6a69616e566c",
												"nativeSrc": "14078:171:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14176:6:10",
														"nodeType": "YulTypedName",
														"src": "14176:6:10",
														"type": ""
													}
												],
												"src": "14078:171:10"
											},
											{
												"body": {
													"nativeSrc": "14401:220:10",
													"nodeType": "YulBlock",
													"src": "14401:220:10",
													"statements": [
														{
															"nativeSrc": "14411:74:10",
															"nodeType": "YulAssignment",
															"src": "14411:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14477:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14477:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14482:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14482:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14418:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "14418:58:10"
																},
																"nativeSrc": "14418:67:10",
																"nodeType": "YulFunctionCall",
																"src": "14418:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14411:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14411:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14583:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14583:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d1048d9dc1318c819f2a5bff283d5a7be63fad68260777f8e26c6a69616e566c",
																	"nativeSrc": "14494:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "14494:88:10"
																},
																"nativeSrc": "14494:93:10",
																"nodeType": "YulFunctionCall",
																"src": "14494:93:10"
															},
															"nativeSrc": "14494:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "14494:93:10"
														},
														{
															"nativeSrc": "14596:19:10",
															"nodeType": "YulAssignment",
															"src": "14596:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14607:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14607:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14612:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14612:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14603:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14603:3:10"
																},
																"nativeSrc": "14603:12:10",
																"nodeType": "YulFunctionCall",
																"src": "14603:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14596:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14596:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d1048d9dc1318c819f2a5bff283d5a7be63fad68260777f8e26c6a69616e566c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14255:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14389:3:10",
														"nodeType": "YulTypedName",
														"src": "14389:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14397:3:10",
														"nodeType": "YulTypedName",
														"src": "14397:3:10",
														"type": ""
													}
												],
												"src": "14255:366:10"
											},
											{
												"body": {
													"nativeSrc": "14798:248:10",
													"nodeType": "YulBlock",
													"src": "14798:248:10",
													"statements": [
														{
															"nativeSrc": "14808:26:10",
															"nodeType": "YulAssignment",
															"src": "14808:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14820:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14820:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14831:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14831:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14816:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14816:3:10"
																},
																"nativeSrc": "14816:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14816:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14808:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14808:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14855:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14855:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14866:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14866:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14851:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14851:3:10"
																		},
																		"nativeSrc": "14851:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14851:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14874:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "14874:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14880:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14880:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14870:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14870:3:10"
																		},
																		"nativeSrc": "14870:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14870:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14844:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14844:6:10"
																},
																"nativeSrc": "14844:47:10",
																"nodeType": "YulFunctionCall",
																"src": "14844:47:10"
															},
															"nativeSrc": "14844:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "14844:47:10"
														},
														{
															"nativeSrc": "14900:139:10",
															"nodeType": "YulAssignment",
															"src": "14900:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15034:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "15034:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d1048d9dc1318c819f2a5bff283d5a7be63fad68260777f8e26c6a69616e566c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14908:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "14908:124:10"
																},
																"nativeSrc": "14908:131:10",
																"nodeType": "YulFunctionCall",
																"src": "14908:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14900:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14900:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d1048d9dc1318c819f2a5bff283d5a7be63fad68260777f8e26c6a69616e566c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14627:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14778:9:10",
														"nodeType": "YulTypedName",
														"src": "14778:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14793:4:10",
														"nodeType": "YulTypedName",
														"src": "14793:4:10",
														"type": ""
													}
												],
												"src": "14627:419:10"
											},
											{
												"body": {
													"nativeSrc": "15158:60:10",
													"nodeType": "YulBlock",
													"src": "15158:60:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15180:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "15180:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15188:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15188:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15176:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15176:3:10"
																		},
																		"nativeSrc": "15176:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15176:14:10"
																	},
																	{
																		"hexValue": "4d757374206465706f73697420455448",
																		"kind": "string",
																		"nativeSrc": "15192:18:10",
																		"nodeType": "YulLiteral",
																		"src": "15192:18:10",
																		"type": "",
																		"value": "Must deposit ETH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15169:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15169:6:10"
																},
																"nativeSrc": "15169:42:10",
																"nodeType": "YulFunctionCall",
																"src": "15169:42:10"
															},
															"nativeSrc": "15169:42:10",
															"nodeType": "YulExpressionStatement",
															"src": "15169:42:10"
														}
													]
												},
												"name": "store_literal_in_memory_50f00e964d5ac3dac66b67fc2e4625a9ccdc3847ded815dc2ac958369f46a7c1",
												"nativeSrc": "15052:166:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15150:6:10",
														"nodeType": "YulTypedName",
														"src": "15150:6:10",
														"type": ""
													}
												],
												"src": "15052:166:10"
											},
											{
												"body": {
													"nativeSrc": "15370:220:10",
													"nodeType": "YulBlock",
													"src": "15370:220:10",
													"statements": [
														{
															"nativeSrc": "15380:74:10",
															"nodeType": "YulAssignment",
															"src": "15380:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15446:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15446:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15451:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15451:2:10",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15387:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "15387:58:10"
																},
																"nativeSrc": "15387:67:10",
																"nodeType": "YulFunctionCall",
																"src": "15387:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15380:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15380:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15552:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15552:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_50f00e964d5ac3dac66b67fc2e4625a9ccdc3847ded815dc2ac958369f46a7c1",
																	"nativeSrc": "15463:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "15463:88:10"
																},
																"nativeSrc": "15463:93:10",
																"nodeType": "YulFunctionCall",
																"src": "15463:93:10"
															},
															"nativeSrc": "15463:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "15463:93:10"
														},
														{
															"nativeSrc": "15565:19:10",
															"nodeType": "YulAssignment",
															"src": "15565:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15576:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15576:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15581:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15581:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15572:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15572:3:10"
																},
																"nativeSrc": "15572:12:10",
																"nodeType": "YulFunctionCall",
																"src": "15572:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15565:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15565:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_50f00e964d5ac3dac66b67fc2e4625a9ccdc3847ded815dc2ac958369f46a7c1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15224:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15358:3:10",
														"nodeType": "YulTypedName",
														"src": "15358:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15366:3:10",
														"nodeType": "YulTypedName",
														"src": "15366:3:10",
														"type": ""
													}
												],
												"src": "15224:366:10"
											},
											{
												"body": {
													"nativeSrc": "15767:248:10",
													"nodeType": "YulBlock",
													"src": "15767:248:10",
													"statements": [
														{
															"nativeSrc": "15777:26:10",
															"nodeType": "YulAssignment",
															"src": "15777:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15789:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15789:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15800:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15800:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15785:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15785:3:10"
																},
																"nativeSrc": "15785:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15785:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15777:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15777:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15824:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15824:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15835:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15835:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15820:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15820:3:10"
																		},
																		"nativeSrc": "15820:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15820:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15843:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "15843:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15849:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15849:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15839:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15839:3:10"
																		},
																		"nativeSrc": "15839:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15839:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15813:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15813:6:10"
																},
																"nativeSrc": "15813:47:10",
																"nodeType": "YulFunctionCall",
																"src": "15813:47:10"
															},
															"nativeSrc": "15813:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "15813:47:10"
														},
														{
															"nativeSrc": "15869:139:10",
															"nodeType": "YulAssignment",
															"src": "15869:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16003:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "16003:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_50f00e964d5ac3dac66b67fc2e4625a9ccdc3847ded815dc2ac958369f46a7c1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15877:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "15877:124:10"
																},
																"nativeSrc": "15877:131:10",
																"nodeType": "YulFunctionCall",
																"src": "15877:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15869:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15869:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_50f00e964d5ac3dac66b67fc2e4625a9ccdc3847ded815dc2ac958369f46a7c1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15596:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15747:9:10",
														"nodeType": "YulTypedName",
														"src": "15747:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15762:4:10",
														"nodeType": "YulTypedName",
														"src": "15762:4:10",
														"type": ""
													}
												],
												"src": "15596:419:10"
											},
											{
												"body": {
													"nativeSrc": "16065:147:10",
													"nodeType": "YulBlock",
													"src": "16065:147:10",
													"statements": [
														{
															"nativeSrc": "16075:25:10",
															"nodeType": "YulAssignment",
															"src": "16075:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16098:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "16098:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16080:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "16080:17:10"
																},
																"nativeSrc": "16080:20:10",
																"nodeType": "YulFunctionCall",
																"src": "16080:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16075:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "16075:1:10"
																}
															]
														},
														{
															"nativeSrc": "16109:25:10",
															"nodeType": "YulAssignment",
															"src": "16109:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16132:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "16132:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16114:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "16114:17:10"
																},
																"nativeSrc": "16114:20:10",
																"nodeType": "YulFunctionCall",
																"src": "16114:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16109:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "16109:1:10"
																}
															]
														},
														{
															"nativeSrc": "16143:16:10",
															"nodeType": "YulAssignment",
															"src": "16143:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16154:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "16154:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16157:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "16157:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16150:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16150:3:10"
																},
																"nativeSrc": "16150:9:10",
																"nodeType": "YulFunctionCall",
																"src": "16150:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "16143:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16143:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16183:22:10",
																"nodeType": "YulBlock",
																"src": "16183:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16185:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "16185:16:10"
																			},
																			"nativeSrc": "16185:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "16185:18:10"
																		},
																		"nativeSrc": "16185:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "16185:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16175:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "16175:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "16178:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16178:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16172:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "16172:2:10"
																},
																"nativeSrc": "16172:10:10",
																"nodeType": "YulFunctionCall",
																"src": "16172:10:10"
															},
															"nativeSrc": "16169:36:10",
															"nodeType": "YulIf",
															"src": "16169:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "16021:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16052:1:10",
														"nodeType": "YulTypedName",
														"src": "16052:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16055:1:10",
														"nodeType": "YulTypedName",
														"src": "16055:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "16061:3:10",
														"nodeType": "YulTypedName",
														"src": "16061:3:10",
														"type": ""
													}
												],
												"src": "16021:191:10"
											},
											{
												"body": {
													"nativeSrc": "16246:152:10",
													"nodeType": "YulBlock",
													"src": "16246:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16263:1:10",
																		"nodeType": "YulLiteral",
																		"src": "16263:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16266:77:10",
																		"nodeType": "YulLiteral",
																		"src": "16266:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16256:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16256:6:10"
																},
																"nativeSrc": "16256:88:10",
																"nodeType": "YulFunctionCall",
																"src": "16256:88:10"
															},
															"nativeSrc": "16256:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "16256:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16360:1:10",
																		"nodeType": "YulLiteral",
																		"src": "16360:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16363:4:10",
																		"nodeType": "YulLiteral",
																		"src": "16363:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16353:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16353:6:10"
																},
																"nativeSrc": "16353:15:10",
																"nodeType": "YulFunctionCall",
																"src": "16353:15:10"
															},
															"nativeSrc": "16353:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "16353:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16384:1:10",
																		"nodeType": "YulLiteral",
																		"src": "16384:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16387:4:10",
																		"nodeType": "YulLiteral",
																		"src": "16387:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16377:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16377:6:10"
																},
																"nativeSrc": "16377:15:10",
																"nodeType": "YulFunctionCall",
																"src": "16377:15:10"
															},
															"nativeSrc": "16377:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "16377:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "16218:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "16218:180:10"
											},
											{
												"body": {
													"nativeSrc": "16510:62:10",
													"nodeType": "YulBlock",
													"src": "16510:62:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16532:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "16532:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16540:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16540:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16528:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16528:3:10"
																		},
																		"nativeSrc": "16528:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16528:14:10"
																	},
																	{
																		"hexValue": "496e73756666696369656e74205441565354",
																		"kind": "string",
																		"nativeSrc": "16544:20:10",
																		"nodeType": "YulLiteral",
																		"src": "16544:20:10",
																		"type": "",
																		"value": "Insufficient TAVST"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16521:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16521:6:10"
																},
																"nativeSrc": "16521:44:10",
																"nodeType": "YulFunctionCall",
																"src": "16521:44:10"
															},
															"nativeSrc": "16521:44:10",
															"nodeType": "YulExpressionStatement",
															"src": "16521:44:10"
														}
													]
												},
												"name": "store_literal_in_memory_6c777964fa4658a71f8d61a969529a42363944b5db8f79613b59875ba240aae8",
												"nativeSrc": "16404:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16502:6:10",
														"nodeType": "YulTypedName",
														"src": "16502:6:10",
														"type": ""
													}
												],
												"src": "16404:168:10"
											},
											{
												"body": {
													"nativeSrc": "16724:220:10",
													"nodeType": "YulBlock",
													"src": "16724:220:10",
													"statements": [
														{
															"nativeSrc": "16734:74:10",
															"nodeType": "YulAssignment",
															"src": "16734:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16800:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16800:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16805:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16805:2:10",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16741:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "16741:58:10"
																},
																"nativeSrc": "16741:67:10",
																"nodeType": "YulFunctionCall",
																"src": "16741:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16734:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16734:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16906:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16906:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6c777964fa4658a71f8d61a969529a42363944b5db8f79613b59875ba240aae8",
																	"nativeSrc": "16817:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "16817:88:10"
																},
																"nativeSrc": "16817:93:10",
																"nodeType": "YulFunctionCall",
																"src": "16817:93:10"
															},
															"nativeSrc": "16817:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "16817:93:10"
														},
														{
															"nativeSrc": "16919:19:10",
															"nodeType": "YulAssignment",
															"src": "16919:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16930:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16930:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16935:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16935:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16926:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16926:3:10"
																},
																"nativeSrc": "16926:12:10",
																"nodeType": "YulFunctionCall",
																"src": "16926:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16919:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16919:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6c777964fa4658a71f8d61a969529a42363944b5db8f79613b59875ba240aae8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16578:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16712:3:10",
														"nodeType": "YulTypedName",
														"src": "16712:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16720:3:10",
														"nodeType": "YulTypedName",
														"src": "16720:3:10",
														"type": ""
													}
												],
												"src": "16578:366:10"
											},
											{
												"body": {
													"nativeSrc": "17121:248:10",
													"nodeType": "YulBlock",
													"src": "17121:248:10",
													"statements": [
														{
															"nativeSrc": "17131:26:10",
															"nodeType": "YulAssignment",
															"src": "17131:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17143:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "17143:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17154:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17154:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17139:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17139:3:10"
																},
																"nativeSrc": "17139:18:10",
																"nodeType": "YulFunctionCall",
																"src": "17139:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17131:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17131:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17178:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17178:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17189:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17189:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17174:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17174:3:10"
																		},
																		"nativeSrc": "17174:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17174:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17197:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "17197:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17203:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17203:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17193:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17193:3:10"
																		},
																		"nativeSrc": "17193:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17193:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17167:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17167:6:10"
																},
																"nativeSrc": "17167:47:10",
																"nodeType": "YulFunctionCall",
																"src": "17167:47:10"
															},
															"nativeSrc": "17167:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "17167:47:10"
														},
														{
															"nativeSrc": "17223:139:10",
															"nodeType": "YulAssignment",
															"src": "17223:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17357:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "17357:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6c777964fa4658a71f8d61a969529a42363944b5db8f79613b59875ba240aae8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17231:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "17231:124:10"
																},
																"nativeSrc": "17231:131:10",
																"nodeType": "YulFunctionCall",
																"src": "17231:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17223:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17223:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6c777964fa4658a71f8d61a969529a42363944b5db8f79613b59875ba240aae8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16950:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17101:9:10",
														"nodeType": "YulTypedName",
														"src": "17101:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17116:4:10",
														"nodeType": "YulTypedName",
														"src": "17116:4:10",
														"type": ""
													}
												],
												"src": "16950:419:10"
											},
											{
												"body": {
													"nativeSrc": "17481:65:10",
													"nodeType": "YulBlock",
													"src": "17481:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17503:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "17503:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17511:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17511:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17499:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17499:3:10"
																		},
																		"nativeSrc": "17499:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17499:14:10"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820636f6c6c61746572616c",
																		"kind": "string",
																		"nativeSrc": "17515:23:10",
																		"nodeType": "YulLiteral",
																		"src": "17515:23:10",
																		"type": "",
																		"value": "Not enough collateral"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17492:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17492:6:10"
																},
																"nativeSrc": "17492:47:10",
																"nodeType": "YulFunctionCall",
																"src": "17492:47:10"
															},
															"nativeSrc": "17492:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "17492:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad",
												"nativeSrc": "17375:171:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17473:6:10",
														"nodeType": "YulTypedName",
														"src": "17473:6:10",
														"type": ""
													}
												],
												"src": "17375:171:10"
											},
											{
												"body": {
													"nativeSrc": "17698:220:10",
													"nodeType": "YulBlock",
													"src": "17698:220:10",
													"statements": [
														{
															"nativeSrc": "17708:74:10",
															"nodeType": "YulAssignment",
															"src": "17708:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17774:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17774:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17779:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17779:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17715:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "17715:58:10"
																},
																"nativeSrc": "17715:67:10",
																"nodeType": "YulFunctionCall",
																"src": "17715:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17708:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17708:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17880:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17880:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad",
																	"nativeSrc": "17791:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "17791:88:10"
																},
																"nativeSrc": "17791:93:10",
																"nodeType": "YulFunctionCall",
																"src": "17791:93:10"
															},
															"nativeSrc": "17791:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "17791:93:10"
														},
														{
															"nativeSrc": "17893:19:10",
															"nodeType": "YulAssignment",
															"src": "17893:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17904:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17904:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17909:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17909:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17900:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17900:3:10"
																},
																"nativeSrc": "17900:12:10",
																"nodeType": "YulFunctionCall",
																"src": "17900:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17893:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17893:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17552:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17686:3:10",
														"nodeType": "YulTypedName",
														"src": "17686:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17694:3:10",
														"nodeType": "YulTypedName",
														"src": "17694:3:10",
														"type": ""
													}
												],
												"src": "17552:366:10"
											},
											{
												"body": {
													"nativeSrc": "18095:248:10",
													"nodeType": "YulBlock",
													"src": "18095:248:10",
													"statements": [
														{
															"nativeSrc": "18105:26:10",
															"nodeType": "YulAssignment",
															"src": "18105:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18117:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "18117:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18128:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18128:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18113:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18113:3:10"
																},
																"nativeSrc": "18113:18:10",
																"nodeType": "YulFunctionCall",
																"src": "18113:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18105:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18105:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18152:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18152:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18163:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18163:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18148:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18148:3:10"
																		},
																		"nativeSrc": "18148:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18148:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18171:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "18171:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18177:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18177:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18167:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18167:3:10"
																		},
																		"nativeSrc": "18167:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18167:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18141:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18141:6:10"
																},
																"nativeSrc": "18141:47:10",
																"nodeType": "YulFunctionCall",
																"src": "18141:47:10"
															},
															"nativeSrc": "18141:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "18141:47:10"
														},
														{
															"nativeSrc": "18197:139:10",
															"nodeType": "YulAssignment",
															"src": "18197:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18331:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "18331:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18205:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "18205:124:10"
																},
																"nativeSrc": "18205:131:10",
																"nodeType": "YulFunctionCall",
																"src": "18205:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18197:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18197:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17924:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18075:9:10",
														"nodeType": "YulTypedName",
														"src": "18075:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18090:4:10",
														"nodeType": "YulTypedName",
														"src": "18090:4:10",
														"type": ""
													}
												],
												"src": "17924:419:10"
											},
											{
												"body": {
													"nativeSrc": "18394:149:10",
													"nodeType": "YulBlock",
													"src": "18394:149:10",
													"statements": [
														{
															"nativeSrc": "18404:25:10",
															"nodeType": "YulAssignment",
															"src": "18404:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18427:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "18427:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18409:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "18409:17:10"
																},
																"nativeSrc": "18409:20:10",
																"nodeType": "YulFunctionCall",
																"src": "18409:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "18404:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "18404:1:10"
																}
															]
														},
														{
															"nativeSrc": "18438:25:10",
															"nodeType": "YulAssignment",
															"src": "18438:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18461:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "18461:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18443:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "18443:17:10"
																},
																"nativeSrc": "18443:20:10",
																"nodeType": "YulFunctionCall",
																"src": "18443:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18438:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "18438:1:10"
																}
															]
														},
														{
															"nativeSrc": "18472:17:10",
															"nodeType": "YulAssignment",
															"src": "18472:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18484:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "18484:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18487:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "18487:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "18480:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18480:3:10"
																},
																"nativeSrc": "18480:9:10",
																"nodeType": "YulFunctionCall",
																"src": "18480:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "18472:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18472:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18514:22:10",
																"nodeType": "YulBlock",
																"src": "18514:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18516:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "18516:16:10"
																			},
																			"nativeSrc": "18516:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "18516:18:10"
																		},
																		"nativeSrc": "18516:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "18516:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "18505:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "18505:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "18511:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "18511:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18502:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "18502:2:10"
																},
																"nativeSrc": "18502:11:10",
																"nodeType": "YulFunctionCall",
																"src": "18502:11:10"
															},
															"nativeSrc": "18499:37:10",
															"nodeType": "YulIf",
															"src": "18499:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "18349:194:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18380:1:10",
														"nodeType": "YulTypedName",
														"src": "18380:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18383:1:10",
														"nodeType": "YulTypedName",
														"src": "18383:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "18389:4:10",
														"nodeType": "YulTypedName",
														"src": "18389:4:10",
														"type": ""
													}
												],
												"src": "18349:194:10"
											},
											{
												"body": {
													"nativeSrc": "18593:61:10",
													"nodeType": "YulBlock",
													"src": "18593:61:10",
													"statements": [
														{
															"nativeSrc": "18603:45:10",
															"nodeType": "YulAssignment",
															"src": "18603:45:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18618:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "18618:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18625:22:10",
																		"nodeType": "YulLiteral",
																		"src": "18625:22:10",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "18614:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18614:3:10"
																},
																"nativeSrc": "18614:34:10",
																"nodeType": "YulFunctionCall",
																"src": "18614:34:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "18603:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "18603:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nativeSrc": "18549:105:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18575:5:10",
														"nodeType": "YulTypedName",
														"src": "18575:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "18585:7:10",
														"nodeType": "YulTypedName",
														"src": "18585:7:10",
														"type": ""
													}
												],
												"src": "18549:105:10"
											},
											{
												"body": {
													"nativeSrc": "18702:78:10",
													"nodeType": "YulBlock",
													"src": "18702:78:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "18758:16:10",
																"nodeType": "YulBlock",
																"src": "18758:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "18767:1:10",
																					"nodeType": "YulLiteral",
																					"src": "18767:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18770:1:10",
																					"nodeType": "YulLiteral",
																					"src": "18770:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "18760:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "18760:6:10"
																			},
																			"nativeSrc": "18760:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "18760:12:10"
																		},
																		"nativeSrc": "18760:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "18760:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18725:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "18725:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "18749:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "18749:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nativeSrc": "18732:16:10",
																					"nodeType": "YulIdentifier",
																					"src": "18732:16:10"
																				},
																				"nativeSrc": "18732:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "18732:23:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "18722:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "18722:2:10"
																		},
																		"nativeSrc": "18722:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18722:34:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18715:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18715:6:10"
																},
																"nativeSrc": "18715:42:10",
																"nodeType": "YulFunctionCall",
																"src": "18715:42:10"
															},
															"nativeSrc": "18712:62:10",
															"nodeType": "YulIf",
															"src": "18712:62:10"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nativeSrc": "18660:120:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18695:5:10",
														"nodeType": "YulTypedName",
														"src": "18695:5:10",
														"type": ""
													}
												],
												"src": "18660:120:10"
											},
											{
												"body": {
													"nativeSrc": "18848:79:10",
													"nodeType": "YulBlock",
													"src": "18848:79:10",
													"statements": [
														{
															"nativeSrc": "18858:22:10",
															"nodeType": "YulAssignment",
															"src": "18858:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "18873:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "18873:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18867:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "18867:5:10"
																},
																"nativeSrc": "18867:13:10",
																"nodeType": "YulFunctionCall",
																"src": "18867:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "18858:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "18858:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18915:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "18915:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nativeSrc": "18889:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "18889:25:10"
																},
																"nativeSrc": "18889:32:10",
																"nodeType": "YulFunctionCall",
																"src": "18889:32:10"
															},
															"nativeSrc": "18889:32:10",
															"nodeType": "YulExpressionStatement",
															"src": "18889:32:10"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nativeSrc": "18786:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "18826:6:10",
														"nodeType": "YulTypedName",
														"src": "18826:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "18834:3:10",
														"nodeType": "YulTypedName",
														"src": "18834:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "18842:5:10",
														"nodeType": "YulTypedName",
														"src": "18842:5:10",
														"type": ""
													}
												],
												"src": "18786:141:10"
											},
											{
												"body": {
													"nativeSrc": "18977:32:10",
													"nodeType": "YulBlock",
													"src": "18977:32:10",
													"statements": [
														{
															"nativeSrc": "18987:16:10",
															"nodeType": "YulAssignment",
															"src": "18987:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "18998:5:10",
																"nodeType": "YulIdentifier",
																"src": "18998:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "18987:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "18987:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "18933:76:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18959:5:10",
														"nodeType": "YulTypedName",
														"src": "18959:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "18969:7:10",
														"nodeType": "YulTypedName",
														"src": "18969:7:10",
														"type": ""
													}
												],
												"src": "18933:76:10"
											},
											{
												"body": {
													"nativeSrc": "19057:78:10",
													"nodeType": "YulBlock",
													"src": "19057:78:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "19113:16:10",
																"nodeType": "YulBlock",
																"src": "19113:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "19122:1:10",
																					"nodeType": "YulLiteral",
																					"src": "19122:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "19125:1:10",
																					"nodeType": "YulLiteral",
																					"src": "19125:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "19115:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "19115:6:10"
																			},
																			"nativeSrc": "19115:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "19115:12:10"
																		},
																		"nativeSrc": "19115:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "19115:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19080:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "19080:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "19104:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "19104:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nativeSrc": "19087:16:10",
																					"nodeType": "YulIdentifier",
																					"src": "19087:16:10"
																				},
																				"nativeSrc": "19087:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "19087:23:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "19077:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "19077:2:10"
																		},
																		"nativeSrc": "19077:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19077:34:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "19070:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19070:6:10"
																},
																"nativeSrc": "19070:42:10",
																"nodeType": "YulFunctionCall",
																"src": "19070:42:10"
															},
															"nativeSrc": "19067:62:10",
															"nodeType": "YulIf",
															"src": "19067:62:10"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nativeSrc": "19015:120:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19050:5:10",
														"nodeType": "YulTypedName",
														"src": "19050:5:10",
														"type": ""
													}
												],
												"src": "19015:120:10"
											},
											{
												"body": {
													"nativeSrc": "19203:79:10",
													"nodeType": "YulBlock",
													"src": "19203:79:10",
													"statements": [
														{
															"nativeSrc": "19213:22:10",
															"nodeType": "YulAssignment",
															"src": "19213:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "19228:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "19228:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "19222:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "19222:5:10"
																},
																"nativeSrc": "19222:13:10",
																"nodeType": "YulFunctionCall",
																"src": "19222:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "19213:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "19213:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19270:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "19270:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nativeSrc": "19244:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "19244:25:10"
																},
																"nativeSrc": "19244:32:10",
																"nodeType": "YulFunctionCall",
																"src": "19244:32:10"
															},
															"nativeSrc": "19244:32:10",
															"nodeType": "YulExpressionStatement",
															"src": "19244:32:10"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nativeSrc": "19141:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "19181:6:10",
														"nodeType": "YulTypedName",
														"src": "19181:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "19189:3:10",
														"nodeType": "YulTypedName",
														"src": "19189:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "19197:5:10",
														"nodeType": "YulTypedName",
														"src": "19197:5:10",
														"type": ""
													}
												],
												"src": "19141:141:10"
											},
											{
												"body": {
													"nativeSrc": "19351:80:10",
													"nodeType": "YulBlock",
													"src": "19351:80:10",
													"statements": [
														{
															"nativeSrc": "19361:22:10",
															"nodeType": "YulAssignment",
															"src": "19361:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "19376:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "19376:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "19370:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "19370:5:10"
																},
																"nativeSrc": "19370:13:10",
																"nodeType": "YulFunctionCall",
																"src": "19370:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "19361:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "19361:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19419:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "19419:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "19392:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "19392:26:10"
																},
																"nativeSrc": "19392:33:10",
																"nodeType": "YulFunctionCall",
																"src": "19392:33:10"
															},
															"nativeSrc": "19392:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "19392:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "19288:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "19329:6:10",
														"nodeType": "YulTypedName",
														"src": "19329:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "19337:3:10",
														"nodeType": "YulTypedName",
														"src": "19337:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "19345:5:10",
														"nodeType": "YulTypedName",
														"src": "19345:5:10",
														"type": ""
													}
												],
												"src": "19288:143:10"
											},
											{
												"body": {
													"nativeSrc": "19579:829:10",
													"nodeType": "YulBlock",
													"src": "19579:829:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "19626:83:10",
																"nodeType": "YulBlock",
																"src": "19626:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "19628:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "19628:77:10"
																			},
																			"nativeSrc": "19628:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "19628:79:10"
																		},
																		"nativeSrc": "19628:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "19628:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19600:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "19600:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19609:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19609:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19596:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19596:3:10"
																		},
																		"nativeSrc": "19596:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19596:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19621:3:10",
																		"nodeType": "YulLiteral",
																		"src": "19621:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "19592:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19592:3:10"
																},
																"nativeSrc": "19592:33:10",
																"nodeType": "YulFunctionCall",
																"src": "19592:33:10"
															},
															"nativeSrc": "19589:120:10",
															"nodeType": "YulIf",
															"src": "19589:120:10"
														},
														{
															"nativeSrc": "19719:127:10",
															"nodeType": "YulBlock",
															"src": "19719:127:10",
															"statements": [
																{
																	"nativeSrc": "19734:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19734:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19748:1:10",
																		"nodeType": "YulLiteral",
																		"src": "19748:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "19738:6:10",
																			"nodeType": "YulTypedName",
																			"src": "19738:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "19763:73:10",
																	"nodeType": "YulAssignment",
																	"src": "19763:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19808:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "19808:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "19819:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "19819:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19804:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "19804:3:10"
																				},
																				"nativeSrc": "19804:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "19804:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19828:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "19828:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "19773:30:10",
																			"nodeType": "YulIdentifier",
																			"src": "19773:30:10"
																		},
																		"nativeSrc": "19773:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19773:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "19763:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "19763:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "19856:128:10",
															"nodeType": "YulBlock",
															"src": "19856:128:10",
															"statements": [
																{
																	"nativeSrc": "19871:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19871:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19885:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19885:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "19875:6:10",
																			"nodeType": "YulTypedName",
																			"src": "19875:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "19901:73:10",
																	"nodeType": "YulAssignment",
																	"src": "19901:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19946:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "19946:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "19957:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "19957:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19942:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "19942:3:10"
																				},
																				"nativeSrc": "19942:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "19942:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19966:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "19966:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nativeSrc": "19911:30:10",
																			"nodeType": "YulIdentifier",
																			"src": "19911:30:10"
																		},
																		"nativeSrc": "19911:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19911:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "19901:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "19901:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "19994:129:10",
															"nodeType": "YulBlock",
															"src": "19994:129:10",
															"statements": [
																{
																	"nativeSrc": "20009:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20009:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20023:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20023:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "20013:6:10",
																			"nodeType": "YulTypedName",
																			"src": "20013:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "20039:74:10",
																	"nodeType": "YulAssignment",
																	"src": "20039:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20085:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "20085:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "20096:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "20096:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20081:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "20081:3:10"
																				},
																				"nativeSrc": "20081:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "20081:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20105:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "20105:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "20049:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "20049:31:10"
																		},
																		"nativeSrc": "20049:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20049:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "20039:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "20039:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "20133:129:10",
															"nodeType": "YulBlock",
															"src": "20133:129:10",
															"statements": [
																{
																	"nativeSrc": "20148:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20148:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20162:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20162:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "20152:6:10",
																			"nodeType": "YulTypedName",
																			"src": "20152:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "20178:74:10",
																	"nodeType": "YulAssignment",
																	"src": "20178:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20224:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "20224:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "20235:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "20235:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20220:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "20220:3:10"
																				},
																				"nativeSrc": "20220:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "20220:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20244:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "20244:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "20188:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "20188:31:10"
																		},
																		"nativeSrc": "20188:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20188:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "20178:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "20178:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "20272:129:10",
															"nodeType": "YulBlock",
															"src": "20272:129:10",
															"statements": [
																{
																	"nativeSrc": "20287:17:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20287:17:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20301:3:10",
																		"nodeType": "YulLiteral",
																		"src": "20301:3:10",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "20291:6:10",
																			"nodeType": "YulTypedName",
																			"src": "20291:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "20318:73:10",
																	"nodeType": "YulAssignment",
																	"src": "20318:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20363:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "20363:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "20374:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "20374:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20359:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "20359:3:10"
																				},
																				"nativeSrc": "20359:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "20359:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20383:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "20383:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "20328:30:10",
																			"nodeType": "YulIdentifier",
																			"src": "20328:30:10"
																		},
																		"nativeSrc": "20328:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20328:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "20318:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "20318:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nativeSrc": "19437:971:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19517:9:10",
														"nodeType": "YulTypedName",
														"src": "19517:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "19528:7:10",
														"nodeType": "YulTypedName",
														"src": "19528:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "19540:6:10",
														"nodeType": "YulTypedName",
														"src": "19540:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19548:6:10",
														"nodeType": "YulTypedName",
														"src": "19548:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19556:6:10",
														"nodeType": "YulTypedName",
														"src": "19556:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "19564:6:10",
														"nodeType": "YulTypedName",
														"src": "19564:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "19572:6:10",
														"nodeType": "YulTypedName",
														"src": "19572:6:10",
														"type": ""
													}
												],
												"src": "19437:971:10"
											},
											{
												"body": {
													"nativeSrc": "20520:57:10",
													"nodeType": "YulBlock",
													"src": "20520:57:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20542:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "20542:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20550:1:10",
																				"nodeType": "YulLiteral",
																				"src": "20550:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20538:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20538:3:10"
																		},
																		"nativeSrc": "20538:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20538:14:10"
																	},
																	{
																		"hexValue": "496e76616c6964207072696365",
																		"kind": "string",
																		"nativeSrc": "20554:15:10",
																		"nodeType": "YulLiteral",
																		"src": "20554:15:10",
																		"type": "",
																		"value": "Invalid price"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20531:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20531:6:10"
																},
																"nativeSrc": "20531:39:10",
																"nodeType": "YulFunctionCall",
																"src": "20531:39:10"
															},
															"nativeSrc": "20531:39:10",
															"nodeType": "YulExpressionStatement",
															"src": "20531:39:10"
														}
													]
												},
												"name": "store_literal_in_memory_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7",
												"nativeSrc": "20414:163:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20512:6:10",
														"nodeType": "YulTypedName",
														"src": "20512:6:10",
														"type": ""
													}
												],
												"src": "20414:163:10"
											},
											{
												"body": {
													"nativeSrc": "20729:220:10",
													"nodeType": "YulBlock",
													"src": "20729:220:10",
													"statements": [
														{
															"nativeSrc": "20739:74:10",
															"nodeType": "YulAssignment",
															"src": "20739:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20805:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20805:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20810:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20810:2:10",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20746:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "20746:58:10"
																},
																"nativeSrc": "20746:67:10",
																"nodeType": "YulFunctionCall",
																"src": "20746:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20739:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20739:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20911:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20911:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7",
																	"nativeSrc": "20822:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "20822:88:10"
																},
																"nativeSrc": "20822:93:10",
																"nodeType": "YulFunctionCall",
																"src": "20822:93:10"
															},
															"nativeSrc": "20822:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "20822:93:10"
														},
														{
															"nativeSrc": "20924:19:10",
															"nodeType": "YulAssignment",
															"src": "20924:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20935:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20935:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20940:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20940:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20931:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20931:3:10"
																},
																"nativeSrc": "20931:12:10",
																"nodeType": "YulFunctionCall",
																"src": "20931:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20924:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20924:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20583:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20717:3:10",
														"nodeType": "YulTypedName",
														"src": "20717:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20725:3:10",
														"nodeType": "YulTypedName",
														"src": "20725:3:10",
														"type": ""
													}
												],
												"src": "20583:366:10"
											},
											{
												"body": {
													"nativeSrc": "21126:248:10",
													"nodeType": "YulBlock",
													"src": "21126:248:10",
													"statements": [
														{
															"nativeSrc": "21136:26:10",
															"nodeType": "YulAssignment",
															"src": "21136:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21148:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "21148:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21159:2:10",
																		"nodeType": "YulLiteral",
																		"src": "21159:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21144:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21144:3:10"
																},
																"nativeSrc": "21144:18:10",
																"nodeType": "YulFunctionCall",
																"src": "21144:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21136:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "21136:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21183:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21183:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21194:1:10",
																				"nodeType": "YulLiteral",
																				"src": "21194:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21179:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21179:3:10"
																		},
																		"nativeSrc": "21179:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21179:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21202:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "21202:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21208:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21208:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21198:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21198:3:10"
																		},
																		"nativeSrc": "21198:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21198:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21172:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "21172:6:10"
																},
																"nativeSrc": "21172:47:10",
																"nodeType": "YulFunctionCall",
																"src": "21172:47:10"
															},
															"nativeSrc": "21172:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "21172:47:10"
														},
														{
															"nativeSrc": "21228:139:10",
															"nodeType": "YulAssignment",
															"src": "21228:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21362:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "21362:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21236:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "21236:124:10"
																},
																"nativeSrc": "21236:131:10",
																"nodeType": "YulFunctionCall",
																"src": "21236:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21228:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "21228:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20955:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21106:9:10",
														"nodeType": "YulTypedName",
														"src": "21106:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21121:4:10",
														"nodeType": "YulTypedName",
														"src": "21121:4:10",
														"type": ""
													}
												],
												"src": "20955:419:10"
											},
											{
												"body": {
													"nativeSrc": "21431:51:10",
													"nodeType": "YulBlock",
													"src": "21431:51:10",
													"statements": [
														{
															"nativeSrc": "21441:34:10",
															"nodeType": "YulAssignment",
															"src": "21441:34:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21466:1:10",
																		"nodeType": "YulLiteral",
																		"src": "21466:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "21469:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "21469:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "21462:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21462:3:10"
																},
																"nativeSrc": "21462:13:10",
																"nodeType": "YulFunctionCall",
																"src": "21462:13:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "21441:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "21441:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "21380:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21412:5:10",
														"nodeType": "YulTypedName",
														"src": "21412:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "21422:8:10",
														"nodeType": "YulTypedName",
														"src": "21422:8:10",
														"type": ""
													}
												],
												"src": "21380:102:10"
											},
											{
												"body": {
													"nativeSrc": "21561:775:10",
													"nodeType": "YulBlock",
													"src": "21561:775:10",
													"statements": [
														{
															"nativeSrc": "21571:15:10",
															"nodeType": "YulAssignment",
															"src": "21571:15:10",
															"value": {
																"name": "_power",
																"nativeSrc": "21580:6:10",
																"nodeType": "YulIdentifier",
																"src": "21580:6:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "21571:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "21571:5:10"
																}
															]
														},
														{
															"nativeSrc": "21595:14:10",
															"nodeType": "YulAssignment",
															"src": "21595:14:10",
															"value": {
																"name": "_base",
																"nativeSrc": "21604:5:10",
																"nodeType": "YulIdentifier",
																"src": "21604:5:10"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "21595:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "21595:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21653:677:10",
																"nodeType": "YulBlock",
																"src": "21653:677:10",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "21741:22:10",
																			"nodeType": "YulBlock",
																			"src": "21741:22:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "21743:16:10",
																							"nodeType": "YulIdentifier",
																							"src": "21743:16:10"
																						},
																						"nativeSrc": "21743:18:10",
																						"nodeType": "YulFunctionCall",
																						"src": "21743:18:10"
																					},
																					"nativeSrc": "21743:18:10",
																					"nodeType": "YulExpressionStatement",
																					"src": "21743:18:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "21719:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "21719:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "21729:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "21729:3:10"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "21734:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "21734:4:10"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "21725:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "21725:3:10"
																					},
																					"nativeSrc": "21725:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "21725:14:10"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "21716:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "21716:2:10"
																			},
																			"nativeSrc": "21716:24:10",
																			"nodeType": "YulFunctionCall",
																			"src": "21716:24:10"
																		},
																		"nativeSrc": "21713:50:10",
																		"nodeType": "YulIf",
																		"src": "21713:50:10"
																	},
																	{
																		"body": {
																			"nativeSrc": "21808:419:10",
																			"nodeType": "YulBlock",
																			"src": "21808:419:10",
																			"statements": [
																				{
																					"nativeSrc": "22188:25:10",
																					"nodeType": "YulAssignment",
																					"src": "22188:25:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "22201:5:10",
																								"nodeType": "YulIdentifier",
																								"src": "22201:5:10"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "22208:4:10",
																								"nodeType": "YulIdentifier",
																								"src": "22208:4:10"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "22197:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "22197:3:10"
																						},
																						"nativeSrc": "22197:16:10",
																						"nodeType": "YulFunctionCall",
																						"src": "22197:16:10"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "22188:5:10",
																							"nodeType": "YulIdentifier",
																							"src": "22188:5:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "21783:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "21783:8:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "21793:1:10",
																					"nodeType": "YulLiteral",
																					"src": "21793:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "21779:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "21779:3:10"
																			},
																			"nativeSrc": "21779:16:10",
																			"nodeType": "YulFunctionCall",
																			"src": "21779:16:10"
																		},
																		"nativeSrc": "21776:451:10",
																		"nodeType": "YulIf",
																		"src": "21776:451:10"
																	},
																	{
																		"nativeSrc": "22240:23:10",
																		"nodeType": "YulAssignment",
																		"src": "22240:23:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "22252:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "22252:4:10"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "22258:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "22258:4:10"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "22248:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "22248:3:10"
																			},
																			"nativeSrc": "22248:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "22248:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "22240:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "22240:4:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "22276:44:10",
																		"nodeType": "YulAssignment",
																		"src": "22276:44:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "22311:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "22311:8:10"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "22288:22:10",
																				"nodeType": "YulIdentifier",
																				"src": "22288:22:10"
																			},
																			"nativeSrc": "22288:32:10",
																			"nodeType": "YulFunctionCall",
																			"src": "22288:32:10"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "22276:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "22276:8:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "21629:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "21629:8:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21639:1:10",
																		"nodeType": "YulLiteral",
																		"src": "21639:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21626:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "21626:2:10"
																},
																"nativeSrc": "21626:15:10",
																"nodeType": "YulFunctionCall",
																"src": "21626:15:10"
															},
															"nativeSrc": "21618:712:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "21642:2:10",
																"nodeType": "YulBlock",
																"src": "21642:2:10",
																"statements": []
															},
															"pre": {
																"nativeSrc": "21622:3:10",
																"nodeType": "YulBlock",
																"src": "21622:3:10",
																"statements": []
															},
															"src": "21618:712:10"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "21488:848:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "21516:6:10",
														"nodeType": "YulTypedName",
														"src": "21516:6:10",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "21524:5:10",
														"nodeType": "YulTypedName",
														"src": "21524:5:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "21531:8:10",
														"nodeType": "YulTypedName",
														"src": "21531:8:10",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "21541:3:10",
														"nodeType": "YulTypedName",
														"src": "21541:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "21549:5:10",
														"nodeType": "YulTypedName",
														"src": "21549:5:10",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "21556:4:10",
														"nodeType": "YulTypedName",
														"src": "21556:4:10",
														"type": ""
													}
												],
												"src": "21488:848:10"
											},
											{
												"body": {
													"nativeSrc": "22402:1013:10",
													"nodeType": "YulBlock",
													"src": "22402:1013:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "22597:20:10",
																"nodeType": "YulBlock",
																"src": "22597:20:10",
																"statements": [
																	{
																		"nativeSrc": "22599:10:10",
																		"nodeType": "YulAssignment",
																		"src": "22599:10:10",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "22608:1:10",
																			"nodeType": "YulLiteral",
																			"src": "22608:1:10",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "22599:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "22599:5:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "22610:5:10",
																		"nodeType": "YulLeave",
																		"src": "22610:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "22587:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "22587:8:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "22580:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "22580:6:10"
																},
																"nativeSrc": "22580:16:10",
																"nodeType": "YulFunctionCall",
																"src": "22580:16:10"
															},
															"nativeSrc": "22577:40:10",
															"nodeType": "YulIf",
															"src": "22577:40:10"
														},
														{
															"body": {
																"nativeSrc": "22642:20:10",
																"nodeType": "YulBlock",
																"src": "22642:20:10",
																"statements": [
																	{
																		"nativeSrc": "22644:10:10",
																		"nodeType": "YulAssignment",
																		"src": "22644:10:10",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "22653:1:10",
																			"nodeType": "YulLiteral",
																			"src": "22653:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "22644:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "22644:5:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "22655:5:10",
																		"nodeType": "YulLeave",
																		"src": "22655:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "22636:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "22636:4:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "22629:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "22629:6:10"
																},
																"nativeSrc": "22629:12:10",
																"nodeType": "YulFunctionCall",
																"src": "22629:12:10"
															},
															"nativeSrc": "22626:36:10",
															"nodeType": "YulIf",
															"src": "22626:36:10"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "22772:20:10",
																		"nodeType": "YulBlock",
																		"src": "22772:20:10",
																		"statements": [
																			{
																				"nativeSrc": "22774:10:10",
																				"nodeType": "YulAssignment",
																				"src": "22774:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "22783:1:10",
																					"nodeType": "YulLiteral",
																					"src": "22783:1:10",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "22774:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "22774:5:10"
																					}
																				]
																			},
																			{
																				"nativeSrc": "22785:5:10",
																				"nodeType": "YulLeave",
																				"src": "22785:5:10"
																			}
																		]
																	},
																	"nativeSrc": "22765:27:10",
																	"nodeType": "YulCase",
																	"src": "22765:27:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "22770:1:10",
																		"nodeType": "YulLiteral",
																		"src": "22770:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "22816:176:10",
																		"nodeType": "YulBlock",
																		"src": "22816:176:10",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "22851:22:10",
																					"nodeType": "YulBlock",
																					"src": "22851:22:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "22853:16:10",
																									"nodeType": "YulIdentifier",
																									"src": "22853:16:10"
																								},
																								"nativeSrc": "22853:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "22853:18:10"
																							},
																							"nativeSrc": "22853:18:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "22853:18:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "22836:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "22836:8:10"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "22846:3:10",
																							"nodeType": "YulLiteral",
																							"src": "22846:3:10",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "22833:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "22833:2:10"
																					},
																					"nativeSrc": "22833:17:10",
																					"nodeType": "YulFunctionCall",
																					"src": "22833:17:10"
																				},
																				"nativeSrc": "22830:43:10",
																				"nodeType": "YulIf",
																				"src": "22830:43:10"
																			},
																			{
																				"nativeSrc": "22886:25:10",
																				"nodeType": "YulAssignment",
																				"src": "22886:25:10",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "22899:1:10",
																							"nodeType": "YulLiteral",
																							"src": "22899:1:10",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "22902:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "22902:8:10"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "22895:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "22895:3:10"
																					},
																					"nativeSrc": "22895:16:10",
																					"nodeType": "YulFunctionCall",
																					"src": "22895:16:10"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "22886:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "22886:5:10"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "22942:22:10",
																					"nodeType": "YulBlock",
																					"src": "22942:22:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "22944:16:10",
																									"nodeType": "YulIdentifier",
																									"src": "22944:16:10"
																								},
																								"nativeSrc": "22944:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "22944:18:10"
																							},
																							"nativeSrc": "22944:18:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "22944:18:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "22930:5:10",
																							"nodeType": "YulIdentifier",
																							"src": "22930:5:10"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "22937:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "22937:3:10"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "22927:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "22927:2:10"
																					},
																					"nativeSrc": "22927:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "22927:14:10"
																				},
																				"nativeSrc": "22924:40:10",
																				"nodeType": "YulIf",
																				"src": "22924:40:10"
																			},
																			{
																				"nativeSrc": "22977:5:10",
																				"nodeType": "YulLeave",
																				"src": "22977:5:10"
																			}
																		]
																	},
																	"nativeSrc": "22801:191:10",
																	"nodeType": "YulCase",
																	"src": "22801:191:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "22806:1:10",
																		"nodeType": "YulLiteral",
																		"src": "22806:1:10",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "22722:4:10",
																"nodeType": "YulIdentifier",
																"src": "22722:4:10"
															},
															"nativeSrc": "22715:277:10",
															"nodeType": "YulSwitch",
															"src": "22715:277:10"
														},
														{
															"body": {
																"nativeSrc": "23124:123:10",
																"nodeType": "YulBlock",
																"src": "23124:123:10",
																"statements": [
																	{
																		"nativeSrc": "23138:28:10",
																		"nodeType": "YulAssignment",
																		"src": "23138:28:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "23151:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "23151:4:10"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "23157:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "23157:8:10"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "23147:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "23147:3:10"
																			},
																			"nativeSrc": "23147:19:10",
																			"nodeType": "YulFunctionCall",
																			"src": "23147:19:10"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "23138:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "23138:5:10"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "23197:22:10",
																			"nodeType": "YulBlock",
																			"src": "23197:22:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "23199:16:10",
																							"nodeType": "YulIdentifier",
																							"src": "23199:16:10"
																						},
																						"nativeSrc": "23199:18:10",
																						"nodeType": "YulFunctionCall",
																						"src": "23199:18:10"
																					},
																					"nativeSrc": "23199:18:10",
																					"nodeType": "YulExpressionStatement",
																					"src": "23199:18:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "23185:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "23185:5:10"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "23192:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "23192:3:10"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "23182:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "23182:2:10"
																			},
																			"nativeSrc": "23182:14:10",
																			"nodeType": "YulFunctionCall",
																			"src": "23182:14:10"
																		},
																		"nativeSrc": "23179:40:10",
																		"nodeType": "YulIf",
																		"src": "23179:40:10"
																	},
																	{
																		"nativeSrc": "23232:5:10",
																		"nodeType": "YulLeave",
																		"src": "23232:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "23027:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "23027:4:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "23033:2:10",
																						"nodeType": "YulLiteral",
																						"src": "23033:2:10",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "23024:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "23024:2:10"
																				},
																				"nativeSrc": "23024:12:10",
																				"nodeType": "YulFunctionCall",
																				"src": "23024:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "23041:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "23041:8:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "23051:2:10",
																						"nodeType": "YulLiteral",
																						"src": "23051:2:10",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "23038:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "23038:2:10"
																				},
																				"nativeSrc": "23038:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "23038:16:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "23020:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23020:3:10"
																		},
																		"nativeSrc": "23020:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23020:35:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "23076:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "23076:4:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "23082:3:10",
																						"nodeType": "YulLiteral",
																						"src": "23082:3:10",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "23073:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "23073:2:10"
																				},
																				"nativeSrc": "23073:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "23073:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "23091:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "23091:8:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "23101:2:10",
																						"nodeType": "YulLiteral",
																						"src": "23101:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "23088:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "23088:2:10"
																				},
																				"nativeSrc": "23088:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "23088:16:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "23069:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23069:3:10"
																		},
																		"nativeSrc": "23069:36:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23069:36:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "23004:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "23004:2:10"
																},
																"nativeSrc": "23004:111:10",
																"nodeType": "YulFunctionCall",
																"src": "23004:111:10"
															},
															"nativeSrc": "23001:246:10",
															"nodeType": "YulIf",
															"src": "23001:246:10"
														},
														{
															"nativeSrc": "23257:57:10",
															"nodeType": "YulAssignment",
															"src": "23257:57:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23291:1:10",
																		"nodeType": "YulLiteral",
																		"src": "23291:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "23294:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "23294:4:10"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "23300:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "23300:8:10"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "23310:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "23310:3:10"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "23272:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "23272:18:10"
																},
																"nativeSrc": "23272:42:10",
																"nodeType": "YulFunctionCall",
																"src": "23272:42:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "23257:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "23257:5:10"
																},
																{
																	"name": "base",
																	"nativeSrc": "23264:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "23264:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "23353:22:10",
																"nodeType": "YulBlock",
																"src": "23353:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "23355:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "23355:16:10"
																			},
																			"nativeSrc": "23355:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "23355:18:10"
																		},
																		"nativeSrc": "23355:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "23355:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "23330:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "23330:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "23341:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "23341:3:10"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "23346:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "23346:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "23337:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23337:3:10"
																		},
																		"nativeSrc": "23337:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23337:14:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "23327:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "23327:2:10"
																},
																"nativeSrc": "23327:25:10",
																"nodeType": "YulFunctionCall",
																"src": "23327:25:10"
															},
															"nativeSrc": "23324:51:10",
															"nodeType": "YulIf",
															"src": "23324:51:10"
														},
														{
															"nativeSrc": "23384:25:10",
															"nodeType": "YulAssignment",
															"src": "23384:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "23397:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "23397:5:10"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "23404:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "23404:4:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "23393:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23393:3:10"
																},
																"nativeSrc": "23393:16:10",
																"nodeType": "YulFunctionCall",
																"src": "23393:16:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "23384:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "23384:5:10"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "22342:1073:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "22372:4:10",
														"nodeType": "YulTypedName",
														"src": "22372:4:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "22378:8:10",
														"nodeType": "YulTypedName",
														"src": "22378:8:10",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "22388:3:10",
														"nodeType": "YulTypedName",
														"src": "22388:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "22396:5:10",
														"nodeType": "YulTypedName",
														"src": "22396:5:10",
														"type": ""
													}
												],
												"src": "22342:1073:10"
											},
											{
												"body": {
													"nativeSrc": "23487:219:10",
													"nodeType": "YulBlock",
													"src": "23487:219:10",
													"statements": [
														{
															"nativeSrc": "23497:31:10",
															"nodeType": "YulAssignment",
															"src": "23497:31:10",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "23523:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "23523:4:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23505:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "23505:17:10"
																},
																"nativeSrc": "23505:23:10",
																"nodeType": "YulFunctionCall",
																"src": "23505:23:10"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "23497:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "23497:4:10"
																}
															]
														},
														{
															"nativeSrc": "23537:39:10",
															"nodeType": "YulAssignment",
															"src": "23537:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "23567:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "23567:8:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23549:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "23549:17:10"
																},
																"nativeSrc": "23549:27:10",
																"nodeType": "YulFunctionCall",
																"src": "23549:27:10"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "23537:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "23537:8:10"
																}
															]
														},
														{
															"nativeSrc": "23586:113:10",
															"nodeType": "YulAssignment",
															"src": "23586:113:10",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "23616:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "23616:4:10"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "23622:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "23622:8:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23632:66:10",
																		"nodeType": "YulLiteral",
																		"src": "23632:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "23595:20:10",
																	"nodeType": "YulIdentifier",
																	"src": "23595:20:10"
																},
																"nativeSrc": "23595:104:10",
																"nodeType": "YulFunctionCall",
																"src": "23595:104:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "23586:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "23586:5:10"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nativeSrc": "23421:285:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "23462:4:10",
														"nodeType": "YulTypedName",
														"src": "23462:4:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "23468:8:10",
														"nodeType": "YulTypedName",
														"src": "23468:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "23481:5:10",
														"nodeType": "YulTypedName",
														"src": "23481:5:10",
														"type": ""
													}
												],
												"src": "23421:285:10"
											},
											{
												"body": {
													"nativeSrc": "23760:362:10",
													"nodeType": "YulBlock",
													"src": "23760:362:10",
													"statements": [
														{
															"nativeSrc": "23770:25:10",
															"nodeType": "YulAssignment",
															"src": "23770:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23793:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "23793:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23775:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "23775:17:10"
																},
																"nativeSrc": "23775:20:10",
																"nodeType": "YulFunctionCall",
																"src": "23775:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "23770:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "23770:1:10"
																}
															]
														},
														{
															"nativeSrc": "23804:25:10",
															"nodeType": "YulAssignment",
															"src": "23804:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "23827:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "23827:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23809:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "23809:17:10"
																},
																"nativeSrc": "23809:20:10",
																"nodeType": "YulFunctionCall",
																"src": "23809:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "23804:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "23804:1:10"
																}
															]
														},
														{
															"nativeSrc": "23838:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "23838:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23861:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "23861:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "23864:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "23864:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "23857:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23857:3:10"
																},
																"nativeSrc": "23857:9:10",
																"nodeType": "YulFunctionCall",
																"src": "23857:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "23842:11:10",
																	"nodeType": "YulTypedName",
																	"src": "23842:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "23875:41:10",
															"nodeType": "YulAssignment",
															"src": "23875:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "23904:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "23904:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23886:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "23886:17:10"
																},
																"nativeSrc": "23886:30:10",
																"nodeType": "YulFunctionCall",
																"src": "23886:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "23875:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "23875:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "24093:22:10",
																"nodeType": "YulBlock",
																"src": "24093:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "24095:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "24095:16:10"
																			},
																			"nativeSrc": "24095:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "24095:18:10"
																		},
																		"nativeSrc": "24095:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "24095:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "24026:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "24026:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "24019:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "24019:6:10"
																				},
																				"nativeSrc": "24019:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "24019:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "24049:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "24049:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "24056:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "24056:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "24065:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "24065:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "24052:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "24052:3:10"
																						},
																						"nativeSrc": "24052:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "24052:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "24046:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "24046:2:10"
																				},
																				"nativeSrc": "24046:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "24046:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "23999:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "23999:2:10"
																		},
																		"nativeSrc": "23999:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23999:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "23979:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "23979:6:10"
																},
																"nativeSrc": "23979:113:10",
																"nodeType": "YulFunctionCall",
																"src": "23979:113:10"
															},
															"nativeSrc": "23976:139:10",
															"nodeType": "YulIf",
															"src": "23976:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "23712:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "23743:1:10",
														"nodeType": "YulTypedName",
														"src": "23743:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "23746:1:10",
														"nodeType": "YulTypedName",
														"src": "23746:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "23752:7:10",
														"nodeType": "YulTypedName",
														"src": "23752:7:10",
														"type": ""
													}
												],
												"src": "23712:410:10"
											},
											{
												"body": {
													"nativeSrc": "24234:73:10",
													"nodeType": "YulBlock",
													"src": "24234:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "24256:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "24256:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24264:1:10",
																				"nodeType": "YulLiteral",
																				"src": "24264:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24252:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "24252:3:10"
																		},
																		"nativeSrc": "24252:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24252:14:10"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "24268:31:10",
																		"nodeType": "YulLiteral",
																		"src": "24268:31:10",
																		"type": "",
																		"value": "Amount must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24245:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "24245:6:10"
																},
																"nativeSrc": "24245:55:10",
																"nodeType": "YulFunctionCall",
																"src": "24245:55:10"
															},
															"nativeSrc": "24245:55:10",
															"nodeType": "YulExpressionStatement",
															"src": "24245:55:10"
														}
													]
												},
												"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
												"nativeSrc": "24128:179:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "24226:6:10",
														"nodeType": "YulTypedName",
														"src": "24226:6:10",
														"type": ""
													}
												],
												"src": "24128:179:10"
											},
											{
												"body": {
													"nativeSrc": "24459:220:10",
													"nodeType": "YulBlock",
													"src": "24459:220:10",
													"statements": [
														{
															"nativeSrc": "24469:74:10",
															"nodeType": "YulAssignment",
															"src": "24469:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24535:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "24535:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24540:2:10",
																		"nodeType": "YulLiteral",
																		"src": "24540:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24476:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "24476:58:10"
																},
																"nativeSrc": "24476:67:10",
																"nodeType": "YulFunctionCall",
																"src": "24476:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24469:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24469:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24641:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "24641:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																	"nativeSrc": "24552:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "24552:88:10"
																},
																"nativeSrc": "24552:93:10",
																"nodeType": "YulFunctionCall",
																"src": "24552:93:10"
															},
															"nativeSrc": "24552:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "24552:93:10"
														},
														{
															"nativeSrc": "24654:19:10",
															"nodeType": "YulAssignment",
															"src": "24654:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24665:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "24665:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24670:2:10",
																		"nodeType": "YulLiteral",
																		"src": "24670:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24661:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24661:3:10"
																},
																"nativeSrc": "24661:12:10",
																"nodeType": "YulFunctionCall",
																"src": "24661:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24654:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24654:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "24313:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24447:3:10",
														"nodeType": "YulTypedName",
														"src": "24447:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24455:3:10",
														"nodeType": "YulTypedName",
														"src": "24455:3:10",
														"type": ""
													}
												],
												"src": "24313:366:10"
											},
											{
												"body": {
													"nativeSrc": "24856:248:10",
													"nodeType": "YulBlock",
													"src": "24856:248:10",
													"statements": [
														{
															"nativeSrc": "24866:26:10",
															"nodeType": "YulAssignment",
															"src": "24866:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24878:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "24878:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24889:2:10",
																		"nodeType": "YulLiteral",
																		"src": "24889:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24874:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24874:3:10"
																},
																"nativeSrc": "24874:18:10",
																"nodeType": "YulFunctionCall",
																"src": "24874:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24866:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "24866:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24913:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "24913:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24924:1:10",
																				"nodeType": "YulLiteral",
																				"src": "24924:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24909:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "24909:3:10"
																		},
																		"nativeSrc": "24909:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24909:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24932:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "24932:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24938:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "24938:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24928:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "24928:3:10"
																		},
																		"nativeSrc": "24928:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24928:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24902:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "24902:6:10"
																},
																"nativeSrc": "24902:47:10",
																"nodeType": "YulFunctionCall",
																"src": "24902:47:10"
															},
															"nativeSrc": "24902:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "24902:47:10"
														},
														{
															"nativeSrc": "24958:139:10",
															"nodeType": "YulAssignment",
															"src": "24958:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "25092:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "25092:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24966:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "24966:124:10"
																},
																"nativeSrc": "24966:131:10",
																"nodeType": "YulFunctionCall",
																"src": "24966:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24958:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "24958:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "24685:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24836:9:10",
														"nodeType": "YulTypedName",
														"src": "24836:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24851:4:10",
														"nodeType": "YulTypedName",
														"src": "24851:4:10",
														"type": ""
													}
												],
												"src": "24685:419:10"
											},
											{
												"body": {
													"nativeSrc": "25264:288:10",
													"nodeType": "YulBlock",
													"src": "25264:288:10",
													"statements": [
														{
															"nativeSrc": "25274:26:10",
															"nodeType": "YulAssignment",
															"src": "25274:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25286:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "25286:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25297:2:10",
																		"nodeType": "YulLiteral",
																		"src": "25297:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25282:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "25282:3:10"
																},
																"nativeSrc": "25282:18:10",
																"nodeType": "YulFunctionCall",
																"src": "25282:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25274:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "25274:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "25354:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "25354:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25367:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "25367:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25378:1:10",
																				"nodeType": "YulLiteral",
																				"src": "25378:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25363:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "25363:3:10"
																		},
																		"nativeSrc": "25363:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25363:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "25310:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "25310:43:10"
																},
																"nativeSrc": "25310:71:10",
																"nodeType": "YulFunctionCall",
																"src": "25310:71:10"
															},
															"nativeSrc": "25310:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "25310:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "25435:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "25435:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25448:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "25448:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25459:2:10",
																				"nodeType": "YulLiteral",
																				"src": "25459:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25444:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "25444:3:10"
																		},
																		"nativeSrc": "25444:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25444:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "25391:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "25391:43:10"
																},
																"nativeSrc": "25391:72:10",
																"nodeType": "YulFunctionCall",
																"src": "25391:72:10"
															},
															"nativeSrc": "25391:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "25391:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "25517:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "25517:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25530:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "25530:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25541:2:10",
																				"nodeType": "YulLiteral",
																				"src": "25541:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25526:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "25526:3:10"
																		},
																		"nativeSrc": "25526:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25526:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "25473:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "25473:43:10"
																},
																"nativeSrc": "25473:72:10",
																"nodeType": "YulFunctionCall",
																"src": "25473:72:10"
															},
															"nativeSrc": "25473:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "25473:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "25110:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25220:9:10",
														"nodeType": "YulTypedName",
														"src": "25220:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "25232:6:10",
														"nodeType": "YulTypedName",
														"src": "25232:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "25240:6:10",
														"nodeType": "YulTypedName",
														"src": "25240:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "25248:6:10",
														"nodeType": "YulTypedName",
														"src": "25248:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25259:4:10",
														"nodeType": "YulTypedName",
														"src": "25259:4:10",
														"type": ""
													}
												],
												"src": "25110:442:10"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_AggregatorV3Interface_$113_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_AggregatorV3Interface_$113_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_AggregatorV3Interface_$113_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_AggregatorV3Interface_$113__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_AggregatorV3Interface_$113_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_d1048d9dc1318c819f2a5bff283d5a7be63fad68260777f8e26c6a69616e566c(memPtr) {\n\n        mstore(add(memPtr, 0), \"User not liquidatable\")\n\n    }\n\n    function abi_encode_t_stringliteral_d1048d9dc1318c819f2a5bff283d5a7be63fad68260777f8e26c6a69616e566c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_d1048d9dc1318c819f2a5bff283d5a7be63fad68260777f8e26c6a69616e566c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d1048d9dc1318c819f2a5bff283d5a7be63fad68260777f8e26c6a69616e566c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d1048d9dc1318c819f2a5bff283d5a7be63fad68260777f8e26c6a69616e566c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_50f00e964d5ac3dac66b67fc2e4625a9ccdc3847ded815dc2ac958369f46a7c1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must deposit ETH\")\n\n    }\n\n    function abi_encode_t_stringliteral_50f00e964d5ac3dac66b67fc2e4625a9ccdc3847ded815dc2ac958369f46a7c1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_50f00e964d5ac3dac66b67fc2e4625a9ccdc3847ded815dc2ac958369f46a7c1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_50f00e964d5ac3dac66b67fc2e4625a9ccdc3847ded815dc2ac958369f46a7c1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_50f00e964d5ac3dac66b67fc2e4625a9ccdc3847ded815dc2ac958369f46a7c1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_6c777964fa4658a71f8d61a969529a42363944b5db8f79613b59875ba240aae8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient TAVST\")\n\n    }\n\n    function abi_encode_t_stringliteral_6c777964fa4658a71f8d61a969529a42363944b5db8f79613b59875ba240aae8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_6c777964fa4658a71f8d61a969529a42363944b5db8f79613b59875ba240aae8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6c777964fa4658a71f8d61a969529a42363944b5db8f79613b59875ba240aae8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6c777964fa4658a71f8d61a969529a42363944b5db8f79613b59875ba240aae8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough collateral\")\n\n    }\n\n    function abi_encode_t_stringliteral_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid price\")\n\n    }\n\n    function abi_encode_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610183575f3560e01c806370a08231116100d0578063a9059cbb11610089578063d9e69a0511610063578063d9e69a05146105bc578063dd62ed3e146105e6578063e36b72c614610622578063e5c338ee1461064c5761018a565b8063a9059cbb14610508578063b5fbc7a014610544578063b855fa5b146105805761018a565b806370a08231146103fc578063741bef1a1461043857806375b1475d146104625780637c695cc11461048c5780638e15f473146104b457806395d89b41146104de5761018a565b8063313ce5671161013d57806355f575101161011757806355f575101461034e578063663837db1461038b5780636c09395e146103955780636e04ff0d146103bf5761018a565b8063313ce567146102c0578063365b98b2146102ea5780634585e33b146103265761018a565b8062ce8e3e1461018e57806306fdde03146101b8578063095ea7b3146101e257806315a3ba431461021e57806318160ddd1461025a57806323b872dd146102845761018a565b3661018a57005b5f80fd5b348015610199575f80fd5b506101a2610688565b6040516101af9190611d11565b60405180910390f35b3480156101c3575f80fd5b506101cc610713565b6040516101d99190611dbb565b60405180910390f35b3480156101ed575f80fd5b5061020860048036038101906102039190611e40565b6107a3565b6040516102159190611e98565b60405180910390f35b348015610229575f80fd5b50610244600480360381019061023f9190611eb1565b6107c5565b6040516102519190611eeb565b60405180910390f35b348015610265575f80fd5b5061026e61087e565b60405161027b9190611eeb565b60405180910390f35b34801561028f575f80fd5b506102aa60048036038101906102a59190611f04565b610887565b6040516102b79190611e98565b60405180910390f35b3480156102cb575f80fd5b506102d46108b5565b6040516102e19190611f6f565b60405180910390f35b3480156102f5575f80fd5b50610310600480360381019061030b9190611f88565b6108bd565b60405161031d9190611fc2565b60405180910390f35b348015610331575f80fd5b5061034c6004803603810190610347919061203c565b6108f8565b005b348015610359575f80fd5b50610374600480360381019061036f9190611eb1565b610b47565b604051610382929190612087565b60405180910390f35b610393610b67565b005b3480156103a0575f80fd5b506103a9610e08565b6040516103b69190611fc2565b60405180910390f35b3480156103ca575f80fd5b506103e560048036038101906103e0919061203c565b610e2d565b6040516103f3929190612100565b60405180910390f35b348015610407575f80fd5b50610422600480360381019061041d9190611eb1565b610eeb565b60405161042f9190611eeb565b60405180910390f35b348015610443575f80fd5b5061044c610f30565b6040516104599190612189565b60405180910390f35b34801561046d575f80fd5b50610476610f55565b6040516104839190611eeb565b60405180910390f35b348015610497575f80fd5b506104b260048036038101906104ad9190611f88565b610f5a565b005b3480156104bf575f80fd5b506104c8611180565b6040516104d59190611eeb565b60405180910390f35b3480156104e9575f80fd5b506104f261125f565b6040516104ff9190611dbb565b60405180910390f35b348015610513575f80fd5b5061052e60048036038101906105299190611e40565b6112ef565b60405161053b9190611e98565b60405180910390f35b34801561054f575f80fd5b5061056a60048036038101906105659190611f88565b611311565b6040516105779190611eeb565b60405180910390f35b34801561058b575f80fd5b506105a660048036038101906105a19190611f88565b611396565b6040516105b39190611eeb565b60405180910390f35b3480156105c7575f80fd5b506105d061144d565b6040516105dd9190611eeb565b60405180910390f35b3480156105f1575f80fd5b5061060c600480360381019061060791906121a2565b611452565b6040516106199190611eeb565b60405180910390f35b34801561062d575f80fd5b506106366114d4565b6040516106439190611eeb565b60405180910390f35b348015610657575f80fd5b50610672600480360381019061066d9190611eb1565b6114d9565b60405161067f9190611eeb565b60405180910390f35b6060600880548060200260200160405190810160405280929190818152602001828054801561070957602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106c0575b5050505050905090565b6060600380546107229061220d565b80601f016020809104026020016040519081016040528092919081815260200182805461074e9061220d565b80156107995780601f1061077057610100808354040283529160200191610799565b820191905f5260205f20905b81548152906001019060200180831161077c57829003601f168201915b5050505050905090565b5f806107ad6115a8565b90506107ba8185856115af565b600191505092915050565b5f8060075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060400160405290815f820154815260200160018201548152505090505f816020015103610858577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff915050610879565b5f610862846114d9565b90508160200151816108749190612297565b925050505b919050565b5f600254905090565b5f806108916115a8565b905061089e8582856115c1565b6108a9858585611654565b60019150509392505050565b5f6002905090565b600881815481106108cc575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f82828101906109089190612302565b90506096610915826107c5565b10610955576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094c90612377565b60405180910390fd5b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060400160405290815f820154815260200160018201548152505090506109c1828260200151611744565b5f60075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015490505f60075f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01819055505f60075f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001018190555060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610af1573d5f803e3d5ffd5b508273ffffffffffffffffffffffffffffffffffffffff167fa5ee7a2b0254fce91deed604506790ed7fa072d0b14cba4859c3bc8955b9caac82604051610b389190611eeb565b60405180910390a25050505050565b6007602052805f5260405f205f91509050805f0154908060010154905082565b5f3411610ba9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba0906123df565b60405180910390fd5b5f610bb334611311565b9050610bbf33826117c3565b5f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015403610d0a5760095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610d0957600833908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505b5b3460075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f828254610d5891906123fd565b925050819055508060075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f828254610dae91906123fd565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a153483604051610dfd929190612087565b60405180910390a250565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60605f5b600880549050811015610ece575f60088281548110610e5457610e53612430565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506096610e89826107c5565b1015610ec0576001935080604051602001610ea49190611fc2565b6040516020818303038152906040529250600193505050610ee4565b508080600101915050610e32565b505f60405180602001604052805f815250915091505b9250929050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600881565b80610f6433610eeb565b1015610fa5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9c906124a7565b60405180910390fd5b5f610faf82611396565b90508060075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01541015611033576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102a9061250f565b60405180910390fd5b8060075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f828254611081919061252d565b925050819055508160075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f8282546110d7919061252d565b925050819055506110e83383611744565b3373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f1935050505015801561112b573d5f803e3d5ffd5b503373ffffffffffffffffffffffffffffffffffffffff167f49995e5dd6158cf69ad3e9777c46755a1a826a446c6416992167462dad033b2a8383604051611174929190612087565b60405180910390a25050565b5f8060055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156111ec573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061121091906125e6565b5050509150505f8113611258576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124f906126a7565b60405180910390fd5b8091505090565b60606004805461126e9061220d565b80601f016020809104026020016040519081016040528092919081815260200182805461129a9061220d565b80156112e55780601f106112bc576101008083540402835291602001916112e5565b820191905f5260205f20905b8154815290600101906020018083116112c857829003601f168201915b5050505050905090565b5f806112f96115a8565b9050611306818585611654565b600191505092915050565b5f8061131b611180565b90505f6113266108b5565b60ff16600a61133591906127f4565b90505f670de0b6b3a76400006305f5e100838588611353919061283e565b61135d919061283e565b6113679190612297565b6113719190612297565b90506096606482611382919061283e565b61138c9190612297565b9350505050919050565b5f8082116113d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d0906128c9565b60405180910390fd5b5f6113e2611180565b90505f6064670de0b6b3a7640000856113fb919061283e565b6114059190612297565b90505f6064609683611417919061283e565b6114219190612297565b90505f836305f5e10083611435919061283e565b61143f9190612297565b905080945050505050919050565b609681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b606481565b5f806114e3611180565b90505f60075f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060400160405290815f820154815260200160018201548152505090505f61154c6108b5565b60ff16600a61155b91906127f4565b90505f670de0b6b3a76400006305f5e1008386865f015161157c919061283e565b611586919061283e565b6115909190612297565b61159a9190612297565b905080945050505050919050565b5f33905090565b6115bc8383836001611842565b505050565b5f6115cc8484611452565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561164e578181101561163f578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401611636939291906128e7565b60405180910390fd5b61164d84848484035f611842565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036116c4575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016116bb9190611fc2565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611734575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161172b9190611fc2565b60405180910390fd5b61173f838383611a11565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036117b4575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016117ab9190611fc2565b60405180910390fd5b6117bf825f83611a11565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611833575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161182a9190611fc2565b60405180910390fd5b61183e5f8383611a11565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036118b2575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016118a99190611fc2565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611922575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016119199190611fc2565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611a0b578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611a029190611eeb565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a61578060025f828254611a5591906123fd565b92505081905550611b2f565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611aea578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611ae1939291906128e7565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b76578060025f8282540392505081905550611bc0565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611c1d9190611eeb565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611c7c82611c53565b9050919050565b611c8c81611c72565b82525050565b5f611c9d8383611c83565b60208301905092915050565b5f602082019050919050565b5f611cbf82611c2a565b611cc98185611c34565b9350611cd483611c44565b805f5b83811015611d04578151611ceb8882611c92565b9750611cf683611ca9565b925050600181019050611cd7565b5085935050505092915050565b5f6020820190508181035f830152611d298184611cb5565b905092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611d68578082015181840152602081019050611d4d565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611d8d82611d31565b611d978185611d3b565b9350611da7818560208601611d4b565b611db081611d73565b840191505092915050565b5f6020820190508181035f830152611dd38184611d83565b905092915050565b5f80fd5b5f80fd5b611dec81611c72565b8114611df6575f80fd5b50565b5f81359050611e0781611de3565b92915050565b5f819050919050565b611e1f81611e0d565b8114611e29575f80fd5b50565b5f81359050611e3a81611e16565b92915050565b5f8060408385031215611e5657611e55611ddb565b5b5f611e6385828601611df9565b9250506020611e7485828601611e2c565b9150509250929050565b5f8115159050919050565b611e9281611e7e565b82525050565b5f602082019050611eab5f830184611e89565b92915050565b5f60208284031215611ec657611ec5611ddb565b5b5f611ed384828501611df9565b91505092915050565b611ee581611e0d565b82525050565b5f602082019050611efe5f830184611edc565b92915050565b5f805f60608486031215611f1b57611f1a611ddb565b5b5f611f2886828701611df9565b9350506020611f3986828701611df9565b9250506040611f4a86828701611e2c565b9150509250925092565b5f60ff82169050919050565b611f6981611f54565b82525050565b5f602082019050611f825f830184611f60565b92915050565b5f60208284031215611f9d57611f9c611ddb565b5b5f611faa84828501611e2c565b91505092915050565b611fbc81611c72565b82525050565b5f602082019050611fd55f830184611fb3565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f840112611ffc57611ffb611fdb565b5b8235905067ffffffffffffffff81111561201957612018611fdf565b5b60208301915083600182028301111561203557612034611fe3565b5b9250929050565b5f806020838503121561205257612051611ddb565b5b5f83013567ffffffffffffffff81111561206f5761206e611ddf565b5b61207b85828601611fe7565b92509250509250929050565b5f60408201905061209a5f830185611edc565b6120a76020830184611edc565b9392505050565b5f81519050919050565b5f82825260208201905092915050565b5f6120d2826120ae565b6120dc81856120b8565b93506120ec818560208601611d4b565b6120f581611d73565b840191505092915050565b5f6040820190506121135f830185611e89565b818103602083015261212581846120c8565b90509392505050565b5f819050919050565b5f61215161214c61214784611c53565b61212e565b611c53565b9050919050565b5f61216282612137565b9050919050565b5f61217382612158565b9050919050565b61218381612169565b82525050565b5f60208201905061219c5f83018461217a565b92915050565b5f80604083850312156121b8576121b7611ddb565b5b5f6121c585828601611df9565b92505060206121d685828601611df9565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061222457607f821691505b602082108103612237576122366121e0565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6122a182611e0d565b91506122ac83611e0d565b9250826122bc576122bb61223d565b5b828204905092915050565b5f6122d182611c53565b9050919050565b6122e1816122c7565b81146122eb575f80fd5b50565b5f813590506122fc816122d8565b92915050565b5f6020828403121561231757612316611ddb565b5b5f612324848285016122ee565b91505092915050565b7f55736572206e6f74206c6971756964617461626c6500000000000000000000005f82015250565b5f612361601583611d3b565b915061236c8261232d565b602082019050919050565b5f6020820190508181035f83015261238e81612355565b9050919050565b7f4d757374206465706f73697420455448000000000000000000000000000000005f82015250565b5f6123c9601083611d3b565b91506123d482612395565b602082019050919050565b5f6020820190508181035f8301526123f6816123bd565b9050919050565b5f61240782611e0d565b915061241283611e0d565b925082820190508082111561242a5761242961226a565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f496e73756666696369656e7420544156535400000000000000000000000000005f82015250565b5f612491601283611d3b565b915061249c8261245d565b602082019050919050565b5f6020820190508181035f8301526124be81612485565b9050919050565b7f4e6f7420656e6f75676820636f6c6c61746572616c00000000000000000000005f82015250565b5f6124f9601583611d3b565b9150612504826124c5565b602082019050919050565b5f6020820190508181035f830152612526816124ed565b9050919050565b5f61253782611e0d565b915061254283611e0d565b925082820390508181111561255a5761255961226a565b5b92915050565b5f69ffffffffffffffffffff82169050919050565b61257e81612560565b8114612588575f80fd5b50565b5f8151905061259981612575565b92915050565b5f819050919050565b6125b18161259f565b81146125bb575f80fd5b50565b5f815190506125cc816125a8565b92915050565b5f815190506125e081611e16565b92915050565b5f805f805f60a086880312156125ff576125fe611ddb565b5b5f61260c8882890161258b565b955050602061261d888289016125be565b945050604061262e888289016125d2565b935050606061263f888289016125d2565b92505060806126508882890161258b565b9150509295509295909350565b7f496e76616c6964207072696365000000000000000000000000000000000000005f82015250565b5f612691600d83611d3b565b915061269c8261265d565b602082019050919050565b5f6020820190508181035f8301526126be81612685565b9050919050565b5f8160011c9050919050565b5f808291508390505b600185111561271a578086048111156126f6576126f561226a565b5b60018516156127055780820291505b8081029050612713856126c5565b94506126da565b94509492505050565b5f8261273257600190506127ed565b8161273f575f90506127ed565b8160018114612755576002811461275f5761278e565b60019150506127ed565b60ff8411156127715761277061226a565b5b8360020a9150848211156127885761278761226a565b5b506127ed565b5060208310610133831016604e8410600b84101617156127c35782820a9050838111156127be576127bd61226a565b5b6127ed565b6127d084848460016126d1565b925090508184048111156127e7576127e661226a565b5b81810290505b9392505050565b5f6127fe82611e0d565b915061280983611e0d565b92506128367fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612723565b905092915050565b5f61284882611e0d565b915061285383611e0d565b925082820261286181611e0d565b915082820484148315176128785761287761226a565b5b5092915050565b7f416d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f6128b3601d83611d3b565b91506128be8261287f565b602082019050919050565b5f6020820190508181035f8301526128e0816128a7565b9050919050565b5f6060820190506128fa5f830186611fb3565b6129076020830185611edc565b6129146040830184611edc565b94935050505056fea264697066735822122061fffbf708ef46195a5ed7bae219ff1b3bff2ac8edcabaca14119d6aa0017b4564736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x183 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xD9E69A05 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xD9E69A05 EQ PUSH2 0x5BC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5E6 JUMPI DUP1 PUSH4 0xE36B72C6 EQ PUSH2 0x622 JUMPI DUP1 PUSH4 0xE5C338EE EQ PUSH2 0x64C JUMPI PUSH2 0x18A JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x508 JUMPI DUP1 PUSH4 0xB5FBC7A0 EQ PUSH2 0x544 JUMPI DUP1 PUSH4 0xB855FA5B EQ PUSH2 0x580 JUMPI PUSH2 0x18A JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3FC JUMPI DUP1 PUSH4 0x741BEF1A EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0x75B1475D EQ PUSH2 0x462 JUMPI DUP1 PUSH4 0x7C695CC1 EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x4B4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4DE JUMPI PUSH2 0x18A JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x13D JUMPI DUP1 PUSH4 0x55F57510 GT PUSH2 0x117 JUMPI DUP1 PUSH4 0x55F57510 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x663837DB EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x6C09395E EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x3BF JUMPI PUSH2 0x18A JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x365B98B2 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x326 JUMPI PUSH2 0x18A JUMP JUMPDEST DUP1 PUSH3 0xCE8E3E EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x15A3BA43 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x284 JUMPI PUSH2 0x18A JUMP JUMPDEST CALLDATASIZE PUSH2 0x18A JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x199 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH2 0x688 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x1D11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CC PUSH2 0x713 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x1E40 JUMP JUMPDEST PUSH2 0x7A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x1E98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x229 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1EB1 JUMP JUMPDEST PUSH2 0x7C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x265 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26E PUSH2 0x87E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x1F04 JUMP JUMPDEST PUSH2 0x887 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x1E98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH2 0x8B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x1F6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x1F88 JUMP JUMPDEST PUSH2 0x8BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x331 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x203C JUMP JUMPDEST PUSH2 0x8F8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x359 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x1EB1 JUMP JUMPDEST PUSH2 0xB47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x382 SWAP3 SWAP2 SWAP1 PUSH2 0x2087 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x393 PUSH2 0xB67 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A9 PUSH2 0xE08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E0 SWAP2 SWAP1 PUSH2 0x203C JUMP JUMPDEST PUSH2 0xE2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F3 SWAP3 SWAP2 SWAP1 PUSH2 0x2100 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x407 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x422 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41D SWAP2 SWAP1 PUSH2 0x1EB1 JUMP JUMPDEST PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42F SWAP2 SWAP1 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x443 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x44C PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x2189 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x476 PUSH2 0xF55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x483 SWAP2 SWAP1 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x497 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AD SWAP2 SWAP1 PUSH2 0x1F88 JUMP JUMPDEST PUSH2 0xF5A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C8 PUSH2 0x1180 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D5 SWAP2 SWAP1 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F2 PUSH2 0x125F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FF SWAP2 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x513 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x52E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x1E40 JUMP JUMPDEST PUSH2 0x12EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53B SWAP2 SWAP1 PUSH2 0x1E98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x56A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x565 SWAP2 SWAP1 PUSH2 0x1F88 JUMP JUMPDEST PUSH2 0x1311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x577 SWAP2 SWAP1 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A1 SWAP2 SWAP1 PUSH2 0x1F88 JUMP JUMPDEST PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B3 SWAP2 SWAP1 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D0 PUSH2 0x144D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DD SWAP2 SWAP1 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x60C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x607 SWAP2 SWAP1 PUSH2 0x21A2 JUMP JUMPDEST PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x619 SWAP2 SWAP1 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x636 PUSH2 0x14D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x643 SWAP2 SWAP1 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x657 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x672 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66D SWAP2 SWAP1 PUSH2 0x1EB1 JUMP JUMPDEST PUSH2 0x14D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67F SWAP2 SWAP1 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x709 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x6C0 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x722 SWAP1 PUSH2 0x220D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x74E SWAP1 PUSH2 0x220D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x799 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x770 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x799 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x77C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x7AD PUSH2 0x15A8 JUMP JUMPDEST SWAP1 POP PUSH2 0x7BA DUP2 DUP6 DUP6 PUSH2 0x15AF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH0 DUP2 PUSH1 0x20 ADD MLOAD SUB PUSH2 0x858 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 POP POP PUSH2 0x879 JUMP JUMPDEST PUSH0 PUSH2 0x862 DUP5 PUSH2 0x14D9 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x20 ADD MLOAD DUP2 PUSH2 0x874 SWAP2 SWAP1 PUSH2 0x2297 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x891 PUSH2 0x15A8 JUMP JUMPDEST SWAP1 POP PUSH2 0x89E DUP6 DUP3 DUP6 PUSH2 0x15C1 JUMP JUMPDEST PUSH2 0x8A9 DUP6 DUP6 DUP6 PUSH2 0x1654 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x8CC JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP3 DUP3 DUP2 ADD SWAP1 PUSH2 0x908 SWAP2 SWAP1 PUSH2 0x2302 JUMP JUMPDEST SWAP1 POP PUSH1 0x96 PUSH2 0x915 DUP3 PUSH2 0x7C5 JUMP JUMPDEST LT PUSH2 0x955 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94C SWAP1 PUSH2 0x2377 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH2 0x9C1 DUP3 DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0x1744 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD SWAP1 POP PUSH0 PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xAF1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA5EE7A2B0254FCE91DEED604506790ED7FA072D0B14CBA4859C3BC8955B9CAAC DUP3 PUSH1 0x40 MLOAD PUSH2 0xB38 SWAP2 SWAP1 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0xBA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA0 SWAP1 PUSH2 0x23DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xBB3 CALLVALUE PUSH2 0x1311 JUMP JUMPDEST SWAP1 POP PUSH2 0xBBF CALLER DUP3 PUSH2 0x17C3 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD SUB PUSH2 0xD0A JUMPI PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xD09 JUMPI PUSH1 0x8 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST CALLVALUE PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD58 SWAP2 SWAP1 PUSH2 0x23FD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDAE SWAP2 SWAP1 PUSH2 0x23FD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 CALLVALUE DUP4 PUSH1 0x40 MLOAD PUSH2 0xDFD SWAP3 SWAP2 SWAP1 PUSH2 0x2087 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH0 JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xECE JUMPI PUSH0 PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xE54 JUMPI PUSH2 0xE53 PUSH2 0x2430 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x96 PUSH2 0xE89 DUP3 PUSH2 0x7C5 JUMP JUMPDEST LT ISZERO PUSH2 0xEC0 JUMPI PUSH1 0x1 SWAP4 POP DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEA4 SWAP2 SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP PUSH1 0x1 SWAP4 POP POP POP PUSH2 0xEE4 JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xE32 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 DUP2 JUMP JUMPDEST DUP1 PUSH2 0xF64 CALLER PUSH2 0xEEB JUMP JUMPDEST LT ISZERO PUSH2 0xFA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9C SWAP1 PUSH2 0x24A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xFAF DUP3 PUSH2 0x1396 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD LT ISZERO PUSH2 0x1033 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102A SWAP1 PUSH2 0x250F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1081 SWAP2 SWAP1 PUSH2 0x252D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x10D7 SWAP2 SWAP1 PUSH2 0x252D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x10E8 CALLER DUP4 PUSH2 0x1744 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x112B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x49995E5DD6158CF69AD3E9777C46755A1A826A446C6416992167462DAD033B2A DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1174 SWAP3 SWAP2 SWAP1 PUSH2 0x2087 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11EC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1210 SWAP2 SWAP1 PUSH2 0x25E6 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 DUP2 SGT PUSH2 0x1258 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124F SWAP1 PUSH2 0x26A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x126E SWAP1 PUSH2 0x220D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x129A SWAP1 PUSH2 0x220D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x12E5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x12BC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x12E5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x12C8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x12F9 PUSH2 0x15A8 JUMP JUMPDEST SWAP1 POP PUSH2 0x1306 DUP2 DUP6 DUP6 PUSH2 0x1654 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x131B PUSH2 0x1180 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1326 PUSH2 0x8B5 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA PUSH2 0x1335 SWAP2 SWAP1 PUSH2 0x27F4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH4 0x5F5E100 DUP4 DUP6 DUP9 PUSH2 0x1353 SWAP2 SWAP1 PUSH2 0x283E JUMP JUMPDEST PUSH2 0x135D SWAP2 SWAP1 PUSH2 0x283E JUMP JUMPDEST PUSH2 0x1367 SWAP2 SWAP1 PUSH2 0x2297 JUMP JUMPDEST PUSH2 0x1371 SWAP2 SWAP1 PUSH2 0x2297 JUMP JUMPDEST SWAP1 POP PUSH1 0x96 PUSH1 0x64 DUP3 PUSH2 0x1382 SWAP2 SWAP1 PUSH2 0x283E JUMP JUMPDEST PUSH2 0x138C SWAP2 SWAP1 PUSH2 0x2297 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 GT PUSH2 0x13D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D0 SWAP1 PUSH2 0x28C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x13E2 PUSH2 0x1180 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x13FB SWAP2 SWAP1 PUSH2 0x283E JUMP JUMPDEST PUSH2 0x1405 SWAP2 SWAP1 PUSH2 0x2297 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0x96 DUP4 PUSH2 0x1417 SWAP2 SWAP1 PUSH2 0x283E JUMP JUMPDEST PUSH2 0x1421 SWAP2 SWAP1 PUSH2 0x2297 JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH4 0x5F5E100 DUP4 PUSH2 0x1435 SWAP2 SWAP1 PUSH2 0x283E JUMP JUMPDEST PUSH2 0x143F SWAP2 SWAP1 PUSH2 0x2297 JUMP JUMPDEST SWAP1 POP DUP1 SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x96 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x14E3 PUSH2 0x1180 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH0 PUSH2 0x154C PUSH2 0x8B5 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA PUSH2 0x155B SWAP2 SWAP1 PUSH2 0x27F4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH4 0x5F5E100 DUP4 DUP7 DUP7 PUSH0 ADD MLOAD PUSH2 0x157C SWAP2 SWAP1 PUSH2 0x283E JUMP JUMPDEST PUSH2 0x1586 SWAP2 SWAP1 PUSH2 0x283E JUMP JUMPDEST PUSH2 0x1590 SWAP2 SWAP1 PUSH2 0x2297 JUMP JUMPDEST PUSH2 0x159A SWAP2 SWAP1 PUSH2 0x2297 JUMP JUMPDEST SWAP1 POP DUP1 SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x15BC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1842 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15CC DUP5 DUP5 PUSH2 0x1452 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x164E JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x163F JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1636 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x164D DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1842 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16C4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16BB SWAP2 SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1734 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x172B SWAP2 SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x173F DUP4 DUP4 DUP4 PUSH2 0x1A11 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17B4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17AB SWAP2 SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17BF DUP3 PUSH0 DUP4 PUSH2 0x1A11 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1833 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x182A SWAP2 SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x183E PUSH0 DUP4 DUP4 PUSH2 0x1A11 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18B2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A9 SWAP2 SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1922 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1919 SWAP2 SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1A0B JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1A02 SWAP2 SWAP1 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A61 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1A55 SWAP2 SWAP1 PUSH2 0x23FD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1B2F JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1AEA JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AE1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B76 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1BC0 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1C1D SWAP2 SWAP1 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C7C DUP3 PUSH2 0x1C53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C8C DUP2 PUSH2 0x1C72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C9D DUP4 DUP4 PUSH2 0x1C83 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CBF DUP3 PUSH2 0x1C2A JUMP JUMPDEST PUSH2 0x1CC9 DUP2 DUP6 PUSH2 0x1C34 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CD4 DUP4 PUSH2 0x1C44 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D04 JUMPI DUP2 MLOAD PUSH2 0x1CEB DUP9 DUP3 PUSH2 0x1C92 JUMP JUMPDEST SWAP8 POP PUSH2 0x1CF6 DUP4 PUSH2 0x1CA9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1CD7 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D29 DUP2 DUP5 PUSH2 0x1CB5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D68 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D4D JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D8D DUP3 PUSH2 0x1D31 JUMP JUMPDEST PUSH2 0x1D97 DUP2 DUP6 PUSH2 0x1D3B JUMP JUMPDEST SWAP4 POP PUSH2 0x1DA7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D4B JUMP JUMPDEST PUSH2 0x1DB0 DUP2 PUSH2 0x1D73 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DD3 DUP2 DUP5 PUSH2 0x1D83 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1DEC DUP2 PUSH2 0x1C72 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DF6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E07 DUP2 PUSH2 0x1DE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E1F DUP2 PUSH2 0x1E0D JUMP JUMPDEST DUP2 EQ PUSH2 0x1E29 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E3A DUP2 PUSH2 0x1E16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E56 JUMPI PUSH2 0x1E55 PUSH2 0x1DDB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E63 DUP6 DUP3 DUP7 ADD PUSH2 0x1DF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E74 DUP6 DUP3 DUP7 ADD PUSH2 0x1E2C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E92 DUP2 PUSH2 0x1E7E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EAB PUSH0 DUP4 ADD DUP5 PUSH2 0x1E89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EC6 JUMPI PUSH2 0x1EC5 PUSH2 0x1DDB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1ED3 DUP5 DUP3 DUP6 ADD PUSH2 0x1DF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EE5 DUP2 PUSH2 0x1E0D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EFE PUSH0 DUP4 ADD DUP5 PUSH2 0x1EDC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F1B JUMPI PUSH2 0x1F1A PUSH2 0x1DDB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F28 DUP7 DUP3 DUP8 ADD PUSH2 0x1DF9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F39 DUP7 DUP3 DUP8 ADD PUSH2 0x1DF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F4A DUP7 DUP3 DUP8 ADD PUSH2 0x1E2C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F69 DUP2 PUSH2 0x1F54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F82 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F9D JUMPI PUSH2 0x1F9C PUSH2 0x1DDB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FAA DUP5 DUP3 DUP6 ADD PUSH2 0x1E2C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FBC DUP2 PUSH2 0x1C72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FD5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1FB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1FFC JUMPI PUSH2 0x1FFB PUSH2 0x1FDB JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2019 JUMPI PUSH2 0x2018 PUSH2 0x1FDF JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2035 JUMPI PUSH2 0x2034 PUSH2 0x1FE3 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2052 JUMPI PUSH2 0x2051 PUSH2 0x1DDB JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x206F JUMPI PUSH2 0x206E PUSH2 0x1DDF JUMP JUMPDEST JUMPDEST PUSH2 0x207B DUP6 DUP3 DUP7 ADD PUSH2 0x1FE7 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x209A PUSH0 DUP4 ADD DUP6 PUSH2 0x1EDC JUMP JUMPDEST PUSH2 0x20A7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1EDC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20D2 DUP3 PUSH2 0x20AE JUMP JUMPDEST PUSH2 0x20DC DUP2 DUP6 PUSH2 0x20B8 JUMP JUMPDEST SWAP4 POP PUSH2 0x20EC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D4B JUMP JUMPDEST PUSH2 0x20F5 DUP2 PUSH2 0x1D73 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2113 PUSH0 DUP4 ADD DUP6 PUSH2 0x1E89 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2125 DUP2 DUP5 PUSH2 0x20C8 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2151 PUSH2 0x214C PUSH2 0x2147 DUP5 PUSH2 0x1C53 JUMP JUMPDEST PUSH2 0x212E JUMP JUMPDEST PUSH2 0x1C53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2162 DUP3 PUSH2 0x2137 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2173 DUP3 PUSH2 0x2158 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2183 DUP2 PUSH2 0x2169 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x219C PUSH0 DUP4 ADD DUP5 PUSH2 0x217A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21B8 JUMPI PUSH2 0x21B7 PUSH2 0x1DDB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21C5 DUP6 DUP3 DUP7 ADD PUSH2 0x1DF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21D6 DUP6 DUP3 DUP7 ADD PUSH2 0x1DF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2224 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2237 JUMPI PUSH2 0x2236 PUSH2 0x21E0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x22A1 DUP3 PUSH2 0x1E0D JUMP JUMPDEST SWAP2 POP PUSH2 0x22AC DUP4 PUSH2 0x1E0D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x22BC JUMPI PUSH2 0x22BB PUSH2 0x223D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22D1 DUP3 PUSH2 0x1C53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22E1 DUP2 PUSH2 0x22C7 JUMP JUMPDEST DUP2 EQ PUSH2 0x22EB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22FC DUP2 PUSH2 0x22D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2317 JUMPI PUSH2 0x2316 PUSH2 0x1DDB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2324 DUP5 DUP3 DUP6 ADD PUSH2 0x22EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x55736572206E6F74206C6971756964617461626C650000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2361 PUSH1 0x15 DUP4 PUSH2 0x1D3B JUMP JUMPDEST SWAP2 POP PUSH2 0x236C DUP3 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x238E DUP2 PUSH2 0x2355 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D757374206465706F7369742045544800000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23C9 PUSH1 0x10 DUP4 PUSH2 0x1D3B JUMP JUMPDEST SWAP2 POP PUSH2 0x23D4 DUP3 PUSH2 0x2395 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23F6 DUP2 PUSH2 0x23BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2407 DUP3 PUSH2 0x1E0D JUMP JUMPDEST SWAP2 POP PUSH2 0x2412 DUP4 PUSH2 0x1E0D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x242A JUMPI PUSH2 0x2429 PUSH2 0x226A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x496E73756666696369656E742054415653540000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2491 PUSH1 0x12 DUP4 PUSH2 0x1D3B JUMP JUMPDEST SWAP2 POP PUSH2 0x249C DUP3 PUSH2 0x245D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24BE DUP2 PUSH2 0x2485 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820636F6C6C61746572616C0000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24F9 PUSH1 0x15 DUP4 PUSH2 0x1D3B JUMP JUMPDEST SWAP2 POP PUSH2 0x2504 DUP3 PUSH2 0x24C5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2526 DUP2 PUSH2 0x24ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2537 DUP3 PUSH2 0x1E0D JUMP JUMPDEST SWAP2 POP PUSH2 0x2542 DUP4 PUSH2 0x1E0D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x255A JUMPI PUSH2 0x2559 PUSH2 0x226A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x257E DUP2 PUSH2 0x2560 JUMP JUMPDEST DUP2 EQ PUSH2 0x2588 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2599 DUP2 PUSH2 0x2575 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25B1 DUP2 PUSH2 0x259F JUMP JUMPDEST DUP2 EQ PUSH2 0x25BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x25CC DUP2 PUSH2 0x25A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x25E0 DUP2 PUSH2 0x1E16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x25FF JUMPI PUSH2 0x25FE PUSH2 0x1DDB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x260C DUP9 DUP3 DUP10 ADD PUSH2 0x258B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x261D DUP9 DUP3 DUP10 ADD PUSH2 0x25BE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x262E DUP9 DUP3 DUP10 ADD PUSH2 0x25D2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x263F DUP9 DUP3 DUP10 ADD PUSH2 0x25D2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2650 DUP9 DUP3 DUP10 ADD PUSH2 0x258B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x496E76616C696420707269636500000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2691 PUSH1 0xD DUP4 PUSH2 0x1D3B JUMP JUMPDEST SWAP2 POP PUSH2 0x269C DUP3 PUSH2 0x265D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26BE DUP2 PUSH2 0x2685 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x271A JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x26F6 JUMPI PUSH2 0x26F5 PUSH2 0x226A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x2705 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x2713 DUP6 PUSH2 0x26C5 JUMP JUMPDEST SWAP5 POP PUSH2 0x26DA JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2732 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x27ED JUMP JUMPDEST DUP2 PUSH2 0x273F JUMPI PUSH0 SWAP1 POP PUSH2 0x27ED JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2755 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x275F JUMPI PUSH2 0x278E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x27ED JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2771 JUMPI PUSH2 0x2770 PUSH2 0x226A JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x2788 JUMPI PUSH2 0x2787 PUSH2 0x226A JUMP JUMPDEST JUMPDEST POP PUSH2 0x27ED JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x27C3 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x27BE JUMPI PUSH2 0x27BD PUSH2 0x226A JUMP JUMPDEST JUMPDEST PUSH2 0x27ED JUMP JUMPDEST PUSH2 0x27D0 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x26D1 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x27E7 JUMPI PUSH2 0x27E6 PUSH2 0x226A JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27FE DUP3 PUSH2 0x1E0D JUMP JUMPDEST SWAP2 POP PUSH2 0x2809 DUP4 PUSH2 0x1E0D JUMP JUMPDEST SWAP3 POP PUSH2 0x2836 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x2723 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2848 DUP3 PUSH2 0x1E0D JUMP JUMPDEST SWAP2 POP PUSH2 0x2853 DUP4 PUSH2 0x1E0D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2861 DUP2 PUSH2 0x1E0D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2878 JUMPI PUSH2 0x2877 PUSH2 0x226A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28B3 PUSH1 0x1D DUP4 PUSH2 0x1D3B JUMP JUMPDEST SWAP2 POP PUSH2 0x28BE DUP3 PUSH2 0x287F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28E0 DUP2 PUSH2 0x28A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x28FA PUSH0 DUP4 ADD DUP7 PUSH2 0x1FB3 JUMP JUMPDEST PUSH2 0x2907 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1EDC JUMP JUMPDEST PUSH2 0x2914 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1EDC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xFFFB 0xF7 ADDMOD 0xEF CHAINID NOT GAS MCOPY 0xD7 0xBA 0xE2 NOT SELFDESTRUCT SHL EXTCODESIZE SELFDESTRUCT 0x2A 0xC8 0xED 0xCA 0xBA 0xCA EQ GT SWAP14 PUSH11 0xA0017B4564736F6C634300 ADDMOD XOR STOP CALLER ",
							"sourceMap": "313:7650:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7718:92;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3902:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5615:456:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2803:97:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4680:244;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2086:84:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;970:22;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6888:762;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;918:45;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2756:698;;;:::i;:::-;;677:33;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6156:670;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2933:116:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;382:38:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;503:51;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4233:660;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4929:222;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3244:178;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2178:534:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3462:712;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;429:46;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3455:140:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;590:45:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5205:353;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7718:92;7761:16;7797:5;7790:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7718:92;:::o;1760:89:5:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3902:186::-;3975:4;3991:13;4007:12;:10;:12::i;:::-;3991:28;;4029:31;4038:5;4045:7;4054:5;4029:8;:31::i;:::-;4077:4;4070:11;;;3902:186;;;;:::o;5615:456:9:-;5678:7;5698:19;5720:9;:15;5730:4;5720:15;;;;;;;;;;;;;;;5698:37;;;;;;;;;;;;;;;;;;;;;;;;;;;5772:1;5750:3;:18;;;:23;5746:53;;5782:17;5775:24;;;;;5746:53;5812:21;5836:26;5857:4;5836:20;:26::i;:::-;5812:50;;6045:3;:18;;;6029:13;:34;;;;:::i;:::-;6022:41;;;;5615:456;;;;:::o;2803:97:5:-;2855:7;2881:12;;2874:19;;2803:97;:::o;4680:244::-;4767:4;4783:15;4801:12;:10;:12::i;:::-;4783:30;;4823:37;4839:4;4845:7;4854:5;4823:15;:37::i;:::-;4870:26;4880:4;4886:2;4890:5;4870:9;:26::i;:::-;4913:4;4906:11;;;4680:244;;;;;:::o;2086:84:9:-;2136:5;2161:1;2154:8;;2086:84;:::o;970:22::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6888:762::-;6968:12;6994:11;;6983:34;;;;;;;:::i;:::-;6968:49;;472:3;7036:24;7055:4;7036:18;:24::i;:::-;:43;7028:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;7159:28;7190:9;:15;7200:4;7190:15;;;;;;;;;;;;;;;7159:46;;;;;;;;;;;;;;;;;;;;;;;;;;;7242:40;7248:4;7254:12;:27;;;7242:5;:40::i;:::-;7333:21;7357:9;:15;7367:4;7357:15;;;;;;;;;;;;;;;:29;;;7333:53;;7486:1;7454:9;:15;7464:4;7454:15;;;;;;;;;;;;;;;:29;;:33;;;;7531:1;7498:9;:15;7508:4;7498:15;;;;;;;;;;;;;;;:30;;:34;;;;7551:18;;;;;;;;;;;7543:36;;:51;7580:13;7543:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7622:4;7611:31;;;7628:13;7611:31;;;;;;:::i;:::-;;;;;;;;6957:693;;;6888:762;;:::o;918:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2756:698::-;2830:1;2818:9;:13;2810:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;2873:18;2894:29;2913:9;2894:18;:29::i;:::-;2873:50;;2935:29;2941:10;2953;2935:5;:29::i;:::-;3020:1;2981:9;:21;2991:10;2981:21;;;;;;;;;;;;;;;:35;;;:40;2977:204;;3041:10;:22;3052:10;3041:22;;;;;;;;;;;;;;;;;;;;;;;;;3037:133;;3084:5;3095:10;3084:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3150:4;3125:10;:22;3136:10;3125:22;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3037:133;2977:204;3232:9;3193;:21;3203:10;3193:21;;;;;;;;;;;;;;;:35;;;:48;;;;;;;:::i;:::-;;;;;;;;3326:10;3286:9;:21;3296:10;3286:21;;;;;;;;;;;;;;;:36;;;:50;;;;;;;:::i;:::-;;;;;;;;3391:10;3383:42;;;3403:9;3414:10;3383:42;;;;;;;:::i;:::-;;;;;;;;2799:655;2756:698::o;677:33::-;;;;;;;;;;;;;:::o;6156:670::-;6226:17;6245:24;6287:9;6282:434;6306:5;:12;;;;6302:1;:16;6282:434;;;6340:12;6355:5;6361:1;6355:8;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6340:23;;472:3;6382:24;6401:4;6382:18;:24::i;:::-;:43;6378:327;;;6515:4;6500:19;;6588:4;6577:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;6563:30;;6670:4;6662:26;;;;;;6378:327;6325:391;6320:3;;;;;;;6282:434;;;;6801:5;6808:9;;;;;;;;;;;;6793:25;;;;6156:670;;;;;;:::o;2933:116:5:-;2998:7;3024:9;:18;3034:7;3024:18;;;;;;;;;;;;;;;;3017:25;;2933:116;;;:::o;382:38:9:-;;;;;;;;;;;;;:::o;503:51::-;553:1;503:51;:::o;4233:660::-;4331:10;4306:21;4316:10;4306:9;:21::i;:::-;:35;;4298:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;4377:19;4399:31;4419:10;4399:19;:31::i;:::-;4377:53;;4572:11;4533:9;:21;4543:10;4533:21;;;;;;;;;;;;;;;:35;;;:50;;4525:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;4661:11;4622:9;:21;4632:10;4622:21;;;;;;;;;;;;;;;:35;;;:50;;;;;;;:::i;:::-;;;;;;;;4723:10;4683:9;:21;4693:10;4683:21;;;;;;;;;;;;;;;:36;;;:50;;;;;;;:::i;:::-;;;;;;;;4744:29;4750:10;4762;4744:5;:29::i;:::-;4794:10;4786:28;;:41;4815:11;4786:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4848:10;4843:41;;;4860:10;4872:11;4843:41;;;;;;;:::i;:::-;;;;;;;;4287:606;4233:660;:::o;4929:222::-;4976:7;4999:9;5015;;;;;;;;;;;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4996:46;;;;;;5069:1;5061:5;:9;5053:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;5114:5;5099:21;;;4929:222;:::o;1962:93:5:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;3244:178::-;3313:4;3329:13;3345:12;:10;:12::i;:::-;3329:28;;3367:27;3377:5;3384:2;3388:5;3367:9;:27::i;:::-;3411:4;3404:11;;;3244:178;;;;:::o;2178:534:9:-;2246:7;2347:16;2366;:14;:16::i;:::-;2347:35;;2428:16;2461:10;:8;:10::i;:::-;2453:19;;2447:2;:25;;;;:::i;:::-;2428:44;;2483:21;2549:4;2543:3;2531:8;2520;2508:9;:20;;;;:::i;:::-;:31;;;;:::i;:::-;2507:39;;;;:::i;:::-;:46;;;;:::i;:::-;2483:70;;472:3;2626;2610:13;:19;;;;:::i;:::-;:38;;;;:::i;:::-;2603:45;;;;;2178:534;;;:::o;3462:712::-;3532:7;3573:1;3560:10;:14;3552:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;3619:16;3638;:14;:16::i;:::-;3619:35;;3742:15;632:3;3774:4;3761:10;:17;;;;:::i;:::-;3760:37;;;;:::i;:::-;3742:55;;3924:21;3979:3;472;3949:7;:26;;;;:::i;:::-;3948:34;;;;:::i;:::-;3924:58;;4083:19;4129:8;4122:3;4106:13;:19;;;;:::i;:::-;4105:32;;;;:::i;:::-;4083:54;;4155:11;4148:18;;;;;;3462:712;;;:::o;429:46::-;472:3;429:46;:::o;3455:140:5:-;3535:7;3561:11;:18;3573:5;3561:18;;;;;;;;;;;;;;;:27;3580:7;3561:27;;;;;;;;;;;;;;;;3554:34;;3455:140;;;;:::o;590:45:9:-;632:3;590:45;:::o;5205:353::-;5270:7;5290:16;5309;:14;:16::i;:::-;5290:35;;5336:19;5358:9;:15;5368:4;5358:15;;;;;;;;;;;;;;;5336:37;;;;;;;;;;;;;;;;;;;;;;;;;;;5386:16;5419:10;:8;:10::i;:::-;5411:19;;5405:2;:25;;;;:::i;:::-;5386:44;;5441:21;5515:4;5509:3;5497:8;5486;5466:3;:17;;;:28;;;;:::i;:::-;:39;;;;:::i;:::-;5465:47;;;;:::i;:::-;:54;;;;:::i;:::-;5441:78;;5537:13;5530:20;;;;;;5205:353;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;8630:128:5:-;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;:::-;8630:128;;;:::o;10319:476::-;10418:24;10445:25;10455:5;10462:7;10445:9;:25::i;:::-;10418:52;;10503:17;10484:16;:36;10480:309;;;10559:5;10540:16;:24;10536:130;;;10618:7;10627:16;10645:5;10591:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10536:130;10707:57;10716:5;10723:7;10751:5;10732:16;:24;10758:5;10707:8;:57::i;:::-;10480:309;10408:387;10319:476;;;:::o;5297:300::-;5396:1;5380:18;;:4;:18;;;5376:86;;5448:1;5421:30;;;;;;;;;;;:::i;:::-;;;;;;;;5376:86;5489:1;5475:16;;:2;:16;;;5471:86;;5543:1;5514:32;;;;;;;;;;;:::i;:::-;;;;;;;;5471:86;5566:24;5574:4;5580:2;5584:5;5566:7;:24::i;:::-;5297:300;;;:::o;7888:206::-;7977:1;7958:21;;:7;:21;;;7954:89;;8029:1;8002:30;;;;;;;;;;;:::i;:::-;;;;;;;;7954:89;8052:35;8060:7;8077:1;8081:5;8052:7;:35::i;:::-;7888:206;;:::o;7362:208::-;7451:1;7432:21;;:7;:21;;;7428:91;;7505:1;7476:32;;;;;;;;;;;:::i;:::-;;;;;;;;7428:91;7528:35;7544:1;7548:7;7557:5;7528:7;:35::i;:::-;7362:208;;:::o;9605:432::-;9734:1;9717:19;;:5;:19;;;9713:89;;9788:1;9759:32;;;;;;;;;;;:::i;:::-;;;;;;;;9713:89;9834:1;9815:21;;:7;:21;;;9811:90;;9887:1;9859:31;;;;;;;;;;;:::i;:::-;;;;;;;;9811:90;9940:5;9910:11;:18;9922:5;9910:18;;;;;;;;;;;;;;;:27;9929:7;9910:27;;;;;;;;;;;;;;;:35;;;;9959:9;9955:76;;;10005:7;9989:31;;9998:5;9989:31;;;10014:5;9989:31;;;;;;:::i;:::-;;;;;;;;9955:76;9605:432;;;;:::o;5912:1107::-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;7:114:10:-;74:6;108:5;102:12;92:22;;7:114;;;:::o;127:184::-;226:11;260:6;255:3;248:19;300:4;295:3;291:14;276:29;;127:184;;;;:::o;317:132::-;384:4;407:3;399:11;;437:4;432:3;428:14;420:22;;317:132;;;:::o;455:126::-;492:7;532:42;525:5;521:54;510:65;;455:126;;;:::o;587:96::-;624:7;653:24;671:5;653:24;:::i;:::-;642:35;;587:96;;;:::o;689:108::-;766:24;784:5;766:24;:::i;:::-;761:3;754:37;689:108;;:::o;803:179::-;872:10;893:46;935:3;927:6;893:46;:::i;:::-;971:4;966:3;962:14;948:28;;803:179;;;;:::o;988:113::-;1058:4;1090;1085:3;1081:14;1073:22;;988:113;;;:::o;1137:732::-;1256:3;1285:54;1333:5;1285:54;:::i;:::-;1355:86;1434:6;1429:3;1355:86;:::i;:::-;1348:93;;1465:56;1515:5;1465:56;:::i;:::-;1544:7;1575:1;1560:284;1585:6;1582:1;1579:13;1560:284;;;1661:6;1655:13;1688:63;1747:3;1732:13;1688:63;:::i;:::-;1681:70;;1774:60;1827:6;1774:60;:::i;:::-;1764:70;;1620:224;1607:1;1604;1600:9;1595:14;;1560:284;;;1564:14;1860:3;1853:10;;1261:608;;;1137:732;;;;:::o;1875:373::-;2018:4;2056:2;2045:9;2041:18;2033:26;;2105:9;2099:4;2095:20;2091:1;2080:9;2076:17;2069:47;2133:108;2236:4;2227:6;2133:108;:::i;:::-;2125:116;;1875:373;;;;:::o;2254:99::-;2306:6;2340:5;2334:12;2324:22;;2254:99;;;:::o;2359:169::-;2443:11;2477:6;2472:3;2465:19;2517:4;2512:3;2508:14;2493:29;;2359:169;;;;:::o;2534:246::-;2615:1;2625:113;2639:6;2636:1;2633:13;2625:113;;;2724:1;2719:3;2715:11;2709:18;2705:1;2700:3;2696:11;2689:39;2661:2;2658:1;2654:10;2649:15;;2625:113;;;2772:1;2763:6;2758:3;2754:16;2747:27;2596:184;2534:246;;;:::o;2786:102::-;2827:6;2878:2;2874:7;2869:2;2862:5;2858:14;2854:28;2844:38;;2786:102;;;:::o;2894:377::-;2982:3;3010:39;3043:5;3010:39;:::i;:::-;3065:71;3129:6;3124:3;3065:71;:::i;:::-;3058:78;;3145:65;3203:6;3198:3;3191:4;3184:5;3180:16;3145:65;:::i;:::-;3235:29;3257:6;3235:29;:::i;:::-;3230:3;3226:39;3219:46;;2986:285;2894:377;;;;:::o;3277:313::-;3390:4;3428:2;3417:9;3413:18;3405:26;;3477:9;3471:4;3467:20;3463:1;3452:9;3448:17;3441:47;3505:78;3578:4;3569:6;3505:78;:::i;:::-;3497:86;;3277:313;;;;:::o;3677:117::-;3786:1;3783;3776:12;3800:117;3909:1;3906;3899:12;3923:122;3996:24;4014:5;3996:24;:::i;:::-;3989:5;3986:35;3976:63;;4035:1;4032;4025:12;3976:63;3923:122;:::o;4051:139::-;4097:5;4135:6;4122:20;4113:29;;4151:33;4178:5;4151:33;:::i;:::-;4051:139;;;;:::o;4196:77::-;4233:7;4262:5;4251:16;;4196:77;;;:::o;4279:122::-;4352:24;4370:5;4352:24;:::i;:::-;4345:5;4342:35;4332:63;;4391:1;4388;4381:12;4332:63;4279:122;:::o;4407:139::-;4453:5;4491:6;4478:20;4469:29;;4507:33;4534:5;4507:33;:::i;:::-;4407:139;;;;:::o;4552:474::-;4620:6;4628;4677:2;4665:9;4656:7;4652:23;4648:32;4645:119;;;4683:79;;:::i;:::-;4645:119;4803:1;4828:53;4873:7;4864:6;4853:9;4849:22;4828:53;:::i;:::-;4818:63;;4774:117;4930:2;4956:53;5001:7;4992:6;4981:9;4977:22;4956:53;:::i;:::-;4946:63;;4901:118;4552:474;;;;;:::o;5032:90::-;5066:7;5109:5;5102:13;5095:21;5084:32;;5032:90;;;:::o;5128:109::-;5209:21;5224:5;5209:21;:::i;:::-;5204:3;5197:34;5128:109;;:::o;5243:210::-;5330:4;5368:2;5357:9;5353:18;5345:26;;5381:65;5443:1;5432:9;5428:17;5419:6;5381:65;:::i;:::-;5243:210;;;;:::o;5459:329::-;5518:6;5567:2;5555:9;5546:7;5542:23;5538:32;5535:119;;;5573:79;;:::i;:::-;5535:119;5693:1;5718:53;5763:7;5754:6;5743:9;5739:22;5718:53;:::i;:::-;5708:63;;5664:117;5459:329;;;;:::o;5794:118::-;5881:24;5899:5;5881:24;:::i;:::-;5876:3;5869:37;5794:118;;:::o;5918:222::-;6011:4;6049:2;6038:9;6034:18;6026:26;;6062:71;6130:1;6119:9;6115:17;6106:6;6062:71;:::i;:::-;5918:222;;;;:::o;6146:619::-;6223:6;6231;6239;6288:2;6276:9;6267:7;6263:23;6259:32;6256:119;;;6294:79;;:::i;:::-;6256:119;6414:1;6439:53;6484:7;6475:6;6464:9;6460:22;6439:53;:::i;:::-;6429:63;;6385:117;6541:2;6567:53;6612:7;6603:6;6592:9;6588:22;6567:53;:::i;:::-;6557:63;;6512:118;6669:2;6695:53;6740:7;6731:6;6720:9;6716:22;6695:53;:::i;:::-;6685:63;;6640:118;6146:619;;;;;:::o;6771:86::-;6806:7;6846:4;6839:5;6835:16;6824:27;;6771:86;;;:::o;6863:112::-;6946:22;6962:5;6946:22;:::i;:::-;6941:3;6934:35;6863:112;;:::o;6981:214::-;7070:4;7108:2;7097:9;7093:18;7085:26;;7121:67;7185:1;7174:9;7170:17;7161:6;7121:67;:::i;:::-;6981:214;;;;:::o;7201:329::-;7260:6;7309:2;7297:9;7288:7;7284:23;7280:32;7277:119;;;7315:79;;:::i;:::-;7277:119;7435:1;7460:53;7505:7;7496:6;7485:9;7481:22;7460:53;:::i;:::-;7450:63;;7406:117;7201:329;;;;:::o;7536:118::-;7623:24;7641:5;7623:24;:::i;:::-;7618:3;7611:37;7536:118;;:::o;7660:222::-;7753:4;7791:2;7780:9;7776:18;7768:26;;7804:71;7872:1;7861:9;7857:17;7848:6;7804:71;:::i;:::-;7660:222;;;;:::o;7888:117::-;7997:1;7994;7987:12;8011:117;8120:1;8117;8110:12;8134:117;8243:1;8240;8233:12;8270:552;8327:8;8337:6;8387:3;8380:4;8372:6;8368:17;8364:27;8354:122;;8395:79;;:::i;:::-;8354:122;8508:6;8495:20;8485:30;;8538:18;8530:6;8527:30;8524:117;;;8560:79;;:::i;:::-;8524:117;8674:4;8666:6;8662:17;8650:29;;8728:3;8720:4;8712:6;8708:17;8698:8;8694:32;8691:41;8688:128;;;8735:79;;:::i;:::-;8688:128;8270:552;;;;;:::o;8828:527::-;8898:6;8906;8955:2;8943:9;8934:7;8930:23;8926:32;8923:119;;;8961:79;;:::i;:::-;8923:119;9109:1;9098:9;9094:17;9081:31;9139:18;9131:6;9128:30;9125:117;;;9161:79;;:::i;:::-;9125:117;9274:64;9330:7;9321:6;9310:9;9306:22;9274:64;:::i;:::-;9256:82;;;;9052:296;8828:527;;;;;:::o;9361:332::-;9482:4;9520:2;9509:9;9505:18;9497:26;;9533:71;9601:1;9590:9;9586:17;9577:6;9533:71;:::i;:::-;9614:72;9682:2;9671:9;9667:18;9658:6;9614:72;:::i;:::-;9361:332;;;;;:::o;9699:98::-;9750:6;9784:5;9778:12;9768:22;;9699:98;;;:::o;9803:168::-;9886:11;9920:6;9915:3;9908:19;9960:4;9955:3;9951:14;9936:29;;9803:168;;;;:::o;9977:373::-;10063:3;10091:38;10123:5;10091:38;:::i;:::-;10145:70;10208:6;10203:3;10145:70;:::i;:::-;10138:77;;10224:65;10282:6;10277:3;10270:4;10263:5;10259:16;10224:65;:::i;:::-;10314:29;10336:6;10314:29;:::i;:::-;10309:3;10305:39;10298:46;;10067:283;9977:373;;;;:::o;10356:407::-;10489:4;10527:2;10516:9;10512:18;10504:26;;10540:65;10602:1;10591:9;10587:17;10578:6;10540:65;:::i;:::-;10652:9;10646:4;10642:20;10637:2;10626:9;10622:18;10615:48;10680:76;10751:4;10742:6;10680:76;:::i;:::-;10672:84;;10356:407;;;;;:::o;10769:60::-;10797:3;10818:5;10811:12;;10769:60;;;:::o;10835:142::-;10885:9;10918:53;10936:34;10945:24;10963:5;10945:24;:::i;:::-;10936:34;:::i;:::-;10918:53;:::i;:::-;10905:66;;10835:142;;;:::o;10983:126::-;11033:9;11066:37;11097:5;11066:37;:::i;:::-;11053:50;;10983:126;;;:::o;11115:155::-;11194:9;11227:37;11258:5;11227:37;:::i;:::-;11214:50;;11115:155;;;:::o;11276:189::-;11392:66;11452:5;11392:66;:::i;:::-;11387:3;11380:79;11276:189;;:::o;11471:280::-;11593:4;11631:2;11620:9;11616:18;11608:26;;11644:100;11741:1;11730:9;11726:17;11717:6;11644:100;:::i;:::-;11471:280;;;;:::o;11757:474::-;11825:6;11833;11882:2;11870:9;11861:7;11857:23;11853:32;11850:119;;;11888:79;;:::i;:::-;11850:119;12008:1;12033:53;12078:7;12069:6;12058:9;12054:22;12033:53;:::i;:::-;12023:63;;11979:117;12135:2;12161:53;12206:7;12197:6;12186:9;12182:22;12161:53;:::i;:::-;12151:63;;12106:118;11757:474;;;;;:::o;12237:180::-;12285:77;12282:1;12275:88;12382:4;12379:1;12372:15;12406:4;12403:1;12396:15;12423:320;12467:6;12504:1;12498:4;12494:12;12484:22;;12551:1;12545:4;12541:12;12572:18;12562:81;;12628:4;12620:6;12616:17;12606:27;;12562:81;12690:2;12682:6;12679:14;12659:18;12656:38;12653:84;;12709:18;;:::i;:::-;12653:84;12474:269;12423:320;;;:::o;12749:180::-;12797:77;12794:1;12787:88;12894:4;12891:1;12884:15;12918:4;12915:1;12908:15;12935:180;12983:77;12980:1;12973:88;13080:4;13077:1;13070:15;13104:4;13101:1;13094:15;13121:185;13161:1;13178:20;13196:1;13178:20;:::i;:::-;13173:25;;13212:20;13230:1;13212:20;:::i;:::-;13207:25;;13251:1;13241:35;;13256:18;;:::i;:::-;13241:35;13298:1;13295;13291:9;13286:14;;13121:185;;;;:::o;13312:104::-;13357:7;13386:24;13404:5;13386:24;:::i;:::-;13375:35;;13312:104;;;:::o;13422:138::-;13503:32;13529:5;13503:32;:::i;:::-;13496:5;13493:43;13483:71;;13550:1;13547;13540:12;13483:71;13422:138;:::o;13566:155::-;13620:5;13658:6;13645:20;13636:29;;13674:41;13709:5;13674:41;:::i;:::-;13566:155;;;;:::o;13727:345::-;13794:6;13843:2;13831:9;13822:7;13818:23;13814:32;13811:119;;;13849:79;;:::i;:::-;13811:119;13969:1;13994:61;14047:7;14038:6;14027:9;14023:22;13994:61;:::i;:::-;13984:71;;13940:125;13727:345;;;;:::o;14078:171::-;14218:23;14214:1;14206:6;14202:14;14195:47;14078:171;:::o;14255:366::-;14397:3;14418:67;14482:2;14477:3;14418:67;:::i;:::-;14411:74;;14494:93;14583:3;14494:93;:::i;:::-;14612:2;14607:3;14603:12;14596:19;;14255:366;;;:::o;14627:419::-;14793:4;14831:2;14820:9;14816:18;14808:26;;14880:9;14874:4;14870:20;14866:1;14855:9;14851:17;14844:47;14908:131;15034:4;14908:131;:::i;:::-;14900:139;;14627:419;;;:::o;15052:166::-;15192:18;15188:1;15180:6;15176:14;15169:42;15052:166;:::o;15224:366::-;15366:3;15387:67;15451:2;15446:3;15387:67;:::i;:::-;15380:74;;15463:93;15552:3;15463:93;:::i;:::-;15581:2;15576:3;15572:12;15565:19;;15224:366;;;:::o;15596:419::-;15762:4;15800:2;15789:9;15785:18;15777:26;;15849:9;15843:4;15839:20;15835:1;15824:9;15820:17;15813:47;15877:131;16003:4;15877:131;:::i;:::-;15869:139;;15596:419;;;:::o;16021:191::-;16061:3;16080:20;16098:1;16080:20;:::i;:::-;16075:25;;16114:20;16132:1;16114:20;:::i;:::-;16109:25;;16157:1;16154;16150:9;16143:16;;16178:3;16175:1;16172:10;16169:36;;;16185:18;;:::i;:::-;16169:36;16021:191;;;;:::o;16218:180::-;16266:77;16263:1;16256:88;16363:4;16360:1;16353:15;16387:4;16384:1;16377:15;16404:168;16544:20;16540:1;16532:6;16528:14;16521:44;16404:168;:::o;16578:366::-;16720:3;16741:67;16805:2;16800:3;16741:67;:::i;:::-;16734:74;;16817:93;16906:3;16817:93;:::i;:::-;16935:2;16930:3;16926:12;16919:19;;16578:366;;;:::o;16950:419::-;17116:4;17154:2;17143:9;17139:18;17131:26;;17203:9;17197:4;17193:20;17189:1;17178:9;17174:17;17167:47;17231:131;17357:4;17231:131;:::i;:::-;17223:139;;16950:419;;;:::o;17375:171::-;17515:23;17511:1;17503:6;17499:14;17492:47;17375:171;:::o;17552:366::-;17694:3;17715:67;17779:2;17774:3;17715:67;:::i;:::-;17708:74;;17791:93;17880:3;17791:93;:::i;:::-;17909:2;17904:3;17900:12;17893:19;;17552:366;;;:::o;17924:419::-;18090:4;18128:2;18117:9;18113:18;18105:26;;18177:9;18171:4;18167:20;18163:1;18152:9;18148:17;18141:47;18205:131;18331:4;18205:131;:::i;:::-;18197:139;;17924:419;;;:::o;18349:194::-;18389:4;18409:20;18427:1;18409:20;:::i;:::-;18404:25;;18443:20;18461:1;18443:20;:::i;:::-;18438:25;;18487:1;18484;18480:9;18472:17;;18511:1;18505:4;18502:11;18499:37;;;18516:18;;:::i;:::-;18499:37;18349:194;;;;:::o;18549:105::-;18585:7;18625:22;18618:5;18614:34;18603:45;;18549:105;;;:::o;18660:120::-;18732:23;18749:5;18732:23;:::i;:::-;18725:5;18722:34;18712:62;;18770:1;18767;18760:12;18712:62;18660:120;:::o;18786:141::-;18842:5;18873:6;18867:13;18858:22;;18889:32;18915:5;18889:32;:::i;:::-;18786:141;;;;:::o;18933:76::-;18969:7;18998:5;18987:16;;18933:76;;;:::o;19015:120::-;19087:23;19104:5;19087:23;:::i;:::-;19080:5;19077:34;19067:62;;19125:1;19122;19115:12;19067:62;19015:120;:::o;19141:141::-;19197:5;19228:6;19222:13;19213:22;;19244:32;19270:5;19244:32;:::i;:::-;19141:141;;;;:::o;19288:143::-;19345:5;19376:6;19370:13;19361:22;;19392:33;19419:5;19392:33;:::i;:::-;19288:143;;;;:::o;19437:971::-;19540:6;19548;19556;19564;19572;19621:3;19609:9;19600:7;19596:23;19592:33;19589:120;;;19628:79;;:::i;:::-;19589:120;19748:1;19773:63;19828:7;19819:6;19808:9;19804:22;19773:63;:::i;:::-;19763:73;;19719:127;19885:2;19911:63;19966:7;19957:6;19946:9;19942:22;19911:63;:::i;:::-;19901:73;;19856:128;20023:2;20049:64;20105:7;20096:6;20085:9;20081:22;20049:64;:::i;:::-;20039:74;;19994:129;20162:2;20188:64;20244:7;20235:6;20224:9;20220:22;20188:64;:::i;:::-;20178:74;;20133:129;20301:3;20328:63;20383:7;20374:6;20363:9;20359:22;20328:63;:::i;:::-;20318:73;;20272:129;19437:971;;;;;;;;:::o;20414:163::-;20554:15;20550:1;20542:6;20538:14;20531:39;20414:163;:::o;20583:366::-;20725:3;20746:67;20810:2;20805:3;20746:67;:::i;:::-;20739:74;;20822:93;20911:3;20822:93;:::i;:::-;20940:2;20935:3;20931:12;20924:19;;20583:366;;;:::o;20955:419::-;21121:4;21159:2;21148:9;21144:18;21136:26;;21208:9;21202:4;21198:20;21194:1;21183:9;21179:17;21172:47;21236:131;21362:4;21236:131;:::i;:::-;21228:139;;20955:419;;;:::o;21380:102::-;21422:8;21469:5;21466:1;21462:13;21441:34;;21380:102;;;:::o;21488:848::-;21549:5;21556:4;21580:6;21571:15;;21604:5;21595:14;;21618:712;21639:1;21629:8;21626:15;21618:712;;;21734:4;21729:3;21725:14;21719:4;21716:24;21713:50;;;21743:18;;:::i;:::-;21713:50;21793:1;21783:8;21779:16;21776:451;;;22208:4;22201:5;22197:16;22188:25;;21776:451;22258:4;22252;22248:15;22240:23;;22288:32;22311:8;22288:32;:::i;:::-;22276:44;;21618:712;;;21488:848;;;;;;;:::o;22342:1073::-;22396:5;22587:8;22577:40;;22608:1;22599:10;;22610:5;;22577:40;22636:4;22626:36;;22653:1;22644:10;;22655:5;;22626:36;22722:4;22770:1;22765:27;;;;22806:1;22801:191;;;;22715:277;;22765:27;22783:1;22774:10;;22785:5;;;22801:191;22846:3;22836:8;22833:17;22830:43;;;22853:18;;:::i;:::-;22830:43;22902:8;22899:1;22895:16;22886:25;;22937:3;22930:5;22927:14;22924:40;;;22944:18;;:::i;:::-;22924:40;22977:5;;;22715:277;;23101:2;23091:8;23088:16;23082:3;23076:4;23073:13;23069:36;23051:2;23041:8;23038:16;23033:2;23027:4;23024:12;23020:35;23004:111;23001:246;;;23157:8;23151:4;23147:19;23138:28;;23192:3;23185:5;23182:14;23179:40;;;23199:18;;:::i;:::-;23179:40;23232:5;;23001:246;23272:42;23310:3;23300:8;23294:4;23291:1;23272:42;:::i;:::-;23257:57;;;;23346:4;23341:3;23337:14;23330:5;23327:25;23324:51;;;23355:18;;:::i;:::-;23324:51;23404:4;23397:5;23393:16;23384:25;;22342:1073;;;;;;:::o;23421:285::-;23481:5;23505:23;23523:4;23505:23;:::i;:::-;23497:31;;23549:27;23567:8;23549:27;:::i;:::-;23537:39;;23595:104;23632:66;23622:8;23616:4;23595:104;:::i;:::-;23586:113;;23421:285;;;;:::o;23712:410::-;23752:7;23775:20;23793:1;23775:20;:::i;:::-;23770:25;;23809:20;23827:1;23809:20;:::i;:::-;23804:25;;23864:1;23861;23857:9;23886:30;23904:11;23886:30;:::i;:::-;23875:41;;24065:1;24056:7;24052:15;24049:1;24046:22;24026:1;24019:9;23999:83;23976:139;;24095:18;;:::i;:::-;23976:139;23760:362;23712:410;;;;:::o;24128:179::-;24268:31;24264:1;24256:6;24252:14;24245:55;24128:179;:::o;24313:366::-;24455:3;24476:67;24540:2;24535:3;24476:67;:::i;:::-;24469:74;;24552:93;24641:3;24552:93;:::i;:::-;24670:2;24665:3;24661:12;24654:19;;24313:366;;;:::o;24685:419::-;24851:4;24889:2;24878:9;24874:18;24866:26;;24938:9;24932:4;24928:20;24924:1;24913:9;24909:17;24902:47;24966:131;25092:4;24966:131;:::i;:::-;24958:139;;24685:419;;;:::o;25110:442::-;25259:4;25297:2;25286:9;25282:18;25274:26;;25310:71;25378:1;25367:9;25363:17;25354:6;25310:71;:::i;:::-;25391:72;25459:2;25448:9;25444:18;25435:6;25391:72;:::i;:::-;25473;25541:2;25530:9;25526:18;25517:6;25473:72;:::i;:::-;25110:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2115600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"COLLATERAL_RATIO()": "369",
								"DATAFEED_PRICE_DECIMALS()": "392",
								"DECIMALS_FACTOR()": "413",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2852",
								"burnAndWithdraw(uint256)": "infinite",
								"checkUpkeep(bytes)": "infinite",
								"decimals()": "384",
								"depositAndMint()": "infinite",
								"estimateMintAmount(uint256)": "infinite",
								"estimateWithdrawETH(uint256)": "infinite",
								"getCollateralRatio(address)": "infinite",
								"getLatestPrice()": "infinite",
								"getUserCollateralUSD(address)": "infinite",
								"getUsers()": "infinite",
								"liquidationAddress()": "2597",
								"name()": "infinite",
								"performUpkeep(bytes)": "infinite",
								"positions(address)": "infinite",
								"priceFeed()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2544",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"users(uint256)": "5012"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 313,
									"end": 7963,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 313,
									"end": 7963,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 313,
									"end": 7963,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1501,
									"end": 2078,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 1501,
									"end": 2078,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1501,
									"end": 2078,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1501,
									"end": 2078,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1501,
									"end": 2078,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1501,
									"end": 2078,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1501,
									"end": 2078,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1501,
									"end": 2078,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1501,
									"end": 2078,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1501,
									"end": 2078,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1501,
									"end": 2078,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "5441565320537461626C65000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "5441565354000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1744,
									"end": 1769,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1772,
									"end": 1814,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "694AA1769357215DE4FAC081BF1F309ADC325306"
								},
								{
									"begin": 1744,
									"end": 1814,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1744,
									"end": 1814,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1859,
									"end": 1876,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1834,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1825,
									"end": 1834,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1825,
									"end": 1877,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1825,
									"end": 1877,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1877,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1877,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1877,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1877,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1825,
									"end": 1877,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1877,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1877,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1877,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1877,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1877,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1825,
									"end": 1877,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1877,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1877,
									"modifierDepth": 1,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1877,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1877,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1877,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1979,
									"end": 2006,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2009,
									"end": 2019,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1979,
									"end": 2019,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1979,
									"end": 2019,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2051,
									"end": 2070,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2030,
									"end": 2048,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 2030,
									"end": 2048,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2030,
									"end": 2070,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 2030,
									"end": 2070,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 2030,
									"end": 2070,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2030,
									"end": 2070,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2030,
									"end": 2070,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2030,
									"end": 2070,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2030,
									"end": 2070,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2030,
									"end": 2070,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 2030,
									"end": 2070,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2030,
									"end": 2070,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2030,
									"end": 2070,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2030,
									"end": 2070,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2030,
									"end": 2070,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2030,
									"end": 2070,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2030,
									"end": 2070,
									"modifierDepth": 1,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2030,
									"end": 2070,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2030,
									"end": 2070,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2030,
									"end": 2070,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1545,
									"end": 2078,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1545,
									"end": 2078,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 313,
									"end": 7963,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 313,
									"end": 7963,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 313,
									"end": 7963,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 313,
									"end": 7963,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 313,
									"end": 7963,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 313,
									"end": 7963,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 313,
									"end": 7963,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 313,
									"end": 7963,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 7963,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 313,
									"end": 7963,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 7963,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122061fffbf708ef46195a5ed7bae219ff1b3bff2ac8edcabaca14119d6aa0017b4564736f6c63430008180033",
									".code": [
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "D9E69A05"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "D9E69A05"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "E36B72C6"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "E5C338EE"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "B5FBC7A0"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "B855FA5B"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "741BEF1A"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "75B1475D"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "7C695CC1"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "8E15F473"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "55F57510"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "55F57510"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "663837DB"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "6C09395E"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "6E04FF0D"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "365B98B2"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "4585E33B"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "CE8E3E"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "15A3BA43"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 7963,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7718,
											"end": 7810,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 7718,
											"end": 7810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7718,
											"end": 7810,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 7718,
											"end": 7810,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7718,
											"end": 7810,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7718,
											"end": 7810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 7718,
											"end": 7810,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7718,
											"end": 7810,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7718,
											"end": 7810,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7718,
											"end": 7810,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7718,
											"end": 7810,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 7718,
											"end": 7810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7718,
											"end": 7810,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7718,
											"end": 7810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 7718,
											"end": 7810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 7718,
											"end": 7810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7718,
											"end": 7810,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 7718,
											"end": 7810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7718,
											"end": 7810,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7718,
											"end": 7810,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7718,
											"end": 7810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 7718,
											"end": 7810,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7718,
											"end": 7810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7718,
											"end": 7810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7718,
											"end": 7810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7718,
											"end": 7810,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 7718,
											"end": 7810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7718,
											"end": 7810,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7718,
											"end": 7810,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7718,
											"end": 7810,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7718,
											"end": 7810,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7718,
											"end": 7810,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7718,
											"end": 7810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7718,
											"end": 7810,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 5615,
											"end": 6071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 5615,
											"end": 6071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 5615,
											"end": 6071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2170,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 2086,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2170,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2170,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2170,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 2086,
											"end": 2170,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2170,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2170,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2170,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2170,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 2086,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2170,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 2086,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 2086,
											"end": 2170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2170,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 2086,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2170,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2086,
											"end": 2170,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 2086,
											"end": 2170,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2170,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 2086,
											"end": 2170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2170,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 2086,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2170,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2086,
											"end": 2170,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2170,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2170,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2170,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2170,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2170,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 970,
											"end": 992,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 970,
											"end": 992,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 970,
											"end": 992,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 970,
											"end": 992,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 970,
											"end": 992,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 970,
											"end": 992,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 970,
											"end": 992,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 970,
											"end": 992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 970,
											"end": 992,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 970,
											"end": 992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 970,
											"end": 992,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 970,
											"end": 992,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 970,
											"end": 992,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 970,
											"end": 992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 970,
											"end": 992,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 970,
											"end": 992,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 7650,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 6888,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 7650,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 7650,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 7650,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 7650,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 6888,
											"end": 7650,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 7650,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6888,
											"end": 7650,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 7650,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 7650,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 6888,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 7650,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 7650,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 6888,
											"end": 7650,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6888,
											"end": 7650,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 7650,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 7650,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 7650,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 7650,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 7650,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 7650,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 6888,
											"end": 7650,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 7650,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 7650,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 6888,
											"end": 7650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 7650,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 6888,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 7650,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 6888,
											"end": 7650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 7650,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 6888,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 7650,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 918,
											"end": 963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 918,
											"end": 963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 918,
											"end": 963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 918,
											"end": 963,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 918,
											"end": 963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 918,
											"end": 963,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 918,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 918,
											"end": 963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 918,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 918,
											"end": 963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 918,
											"end": 963,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 918,
											"end": 963,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 918,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 918,
											"end": 963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 918,
											"end": 963,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2756,
											"end": 3454,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 2756,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2756,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 2756,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 2756,
											"end": 3454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2756,
											"end": 3454,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 2756,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2756,
											"end": 3454,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 677,
											"end": 710,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 677,
											"end": 710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 677,
											"end": 710,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 677,
											"end": 710,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 677,
											"end": 710,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 677,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 677,
											"end": 710,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 677,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 710,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 677,
											"end": 710,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 677,
											"end": 710,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 677,
											"end": 710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 677,
											"end": 710,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 677,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 677,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 677,
											"end": 710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 677,
											"end": 710,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 677,
											"end": 710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 677,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 677,
											"end": 710,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 677,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 677,
											"end": 710,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 677,
											"end": 710,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 677,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 677,
											"end": 710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 677,
											"end": 710,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 677,
											"end": 710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 677,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 677,
											"end": 710,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 677,
											"end": 710,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 677,
											"end": 710,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 677,
											"end": 710,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 677,
											"end": 710,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 677,
											"end": 710,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 6156,
											"end": 6826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 6156,
											"end": 6826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 6156,
											"end": 6826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 382,
											"end": 420,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 382,
											"end": 420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 382,
											"end": 420,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 382,
											"end": 420,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 382,
											"end": 420,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 382,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 382,
											"end": 420,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 382,
											"end": 420,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 382,
											"end": 420,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 382,
											"end": 420,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 382,
											"end": 420,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 382,
											"end": 420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 382,
											"end": 420,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 382,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 382,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 382,
											"end": 420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 382,
											"end": 420,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 382,
											"end": 420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 382,
											"end": 420,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 382,
											"end": 420,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 382,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 382,
											"end": 420,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 382,
											"end": 420,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 382,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 382,
											"end": 420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 382,
											"end": 420,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 382,
											"end": 420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 382,
											"end": 420,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 382,
											"end": 420,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 382,
											"end": 420,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 382,
											"end": 420,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 382,
											"end": 420,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 382,
											"end": 420,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 382,
											"end": 420,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 503,
											"end": 554,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 503,
											"end": 554,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 503,
											"end": 554,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 503,
											"end": 554,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 503,
											"end": 554,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 503,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 503,
											"end": 554,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 503,
											"end": 554,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 503,
											"end": 554,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 503,
											"end": 554,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 503,
											"end": 554,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 503,
											"end": 554,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 503,
											"end": 554,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 503,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 503,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 503,
											"end": 554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 503,
											"end": 554,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 503,
											"end": 554,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 503,
											"end": 554,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 503,
											"end": 554,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 503,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 503,
											"end": 554,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 503,
											"end": 554,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 503,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 503,
											"end": 554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 503,
											"end": 554,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 503,
											"end": 554,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 503,
											"end": 554,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 503,
											"end": 554,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 503,
											"end": 554,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 503,
											"end": 554,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 503,
											"end": 554,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 503,
											"end": 554,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 503,
											"end": 554,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4233,
											"end": 4893,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 4233,
											"end": 4893,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4233,
											"end": 4893,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4233,
											"end": 4893,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4233,
											"end": 4893,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4233,
											"end": 4893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 4233,
											"end": 4893,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4233,
											"end": 4893,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4233,
											"end": 4893,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4233,
											"end": 4893,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4233,
											"end": 4893,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 4233,
											"end": 4893,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4233,
											"end": 4893,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4233,
											"end": 4893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 4233,
											"end": 4893,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4233,
											"end": 4893,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4233,
											"end": 4893,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4233,
											"end": 4893,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4233,
											"end": 4893,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4233,
											"end": 4893,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4233,
											"end": 4893,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4233,
											"end": 4893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 4233,
											"end": 4893,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4233,
											"end": 4893,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4233,
											"end": 4893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 4233,
											"end": 4893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4233,
											"end": 4893,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 4233,
											"end": 4893,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4233,
											"end": 4893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 4233,
											"end": 4893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4233,
											"end": 4893,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 4233,
											"end": 4893,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4233,
											"end": 4893,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 4929,
											"end": 5151,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4929,
											"end": 5151,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4929,
											"end": 5151,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4929,
											"end": 5151,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4929,
											"end": 5151,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4929,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 4929,
											"end": 5151,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4929,
											"end": 5151,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4929,
											"end": 5151,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4929,
											"end": 5151,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4929,
											"end": 5151,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 4929,
											"end": 5151,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4929,
											"end": 5151,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4929,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 4929,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 4929,
											"end": 5151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4929,
											"end": 5151,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 4929,
											"end": 5151,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4929,
											"end": 5151,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4929,
											"end": 5151,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4929,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 4929,
											"end": 5151,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4929,
											"end": 5151,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4929,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 4929,
											"end": 5151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4929,
											"end": 5151,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 4929,
											"end": 5151,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4929,
											"end": 5151,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4929,
											"end": 5151,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4929,
											"end": 5151,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4929,
											"end": 5151,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4929,
											"end": 5151,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4929,
											"end": 5151,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4929,
											"end": 5151,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 2178,
											"end": 2712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 2178,
											"end": 2712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 2178,
											"end": 2712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 3462,
											"end": 4174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 3462,
											"end": 4174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 3462,
											"end": 4174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 429,
											"end": 475,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 429,
											"end": 475,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 429,
											"end": 475,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 429,
											"end": 475,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 429,
											"end": 475,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 429,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 429,
											"end": 475,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 429,
											"end": 475,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 429,
											"end": 475,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 429,
											"end": 475,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 429,
											"end": 475,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 429,
											"end": 475,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 429,
											"end": 475,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 429,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 429,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 429,
											"end": 475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 429,
											"end": 475,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 429,
											"end": 475,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 429,
											"end": 475,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 429,
											"end": 475,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 429,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 429,
											"end": 475,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 429,
											"end": 475,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 429,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 429,
											"end": 475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 429,
											"end": 475,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 429,
											"end": 475,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 429,
											"end": 475,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 429,
											"end": 475,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 429,
											"end": 475,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 429,
											"end": 475,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 429,
											"end": 475,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 429,
											"end": 475,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 429,
											"end": 475,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 590,
											"end": 635,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 590,
											"end": 635,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 590,
											"end": 635,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 590,
											"end": 635,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 590,
											"end": 635,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 590,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 590,
											"end": 635,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 590,
											"end": 635,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 590,
											"end": 635,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 590,
											"end": 635,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 590,
											"end": 635,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 590,
											"end": 635,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 590,
											"end": 635,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 590,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 590,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 590,
											"end": 635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 590,
											"end": 635,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 590,
											"end": 635,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 590,
											"end": 635,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 590,
											"end": 635,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 590,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 590,
											"end": 635,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 590,
											"end": 635,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 590,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 590,
											"end": 635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 590,
											"end": 635,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 590,
											"end": 635,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 590,
											"end": 635,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 590,
											"end": 635,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 590,
											"end": 635,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 590,
											"end": 635,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 590,
											"end": 635,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 590,
											"end": 635,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 590,
											"end": 635,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 5205,
											"end": 5558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 5205,
											"end": 5558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 5205,
											"end": 5558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 7718,
											"end": 7810,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 7718,
											"end": 7810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7761,
											"end": 7777,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7797,
											"end": 7802,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7718,
											"end": 7810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7718,
											"end": 7810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3975,
											"end": 3979,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 4004,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 4007,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 4007,
											"end": 4019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 4038,
											"end": 4043,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4029,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 4029,
											"end": 4060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4077,
											"end": 4081,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5678,
											"end": 5685,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5698,
											"end": 5717,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5720,
											"end": 5729,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 5720,
											"end": 5735,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5730,
											"end": 5734,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5720,
											"end": 5735,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5720,
											"end": 5735,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5720,
											"end": 5735,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5720,
											"end": 5735,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5720,
											"end": 5735,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5720,
											"end": 5735,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5720,
											"end": 5735,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5720,
											"end": 5735,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5720,
											"end": 5735,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5720,
											"end": 5735,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5720,
											"end": 5735,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5720,
											"end": 5735,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5720,
											"end": 5735,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5720,
											"end": 5735,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5720,
											"end": 5735,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5698,
											"end": 5735,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5698,
											"end": 5735,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5698,
											"end": 5735,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5698,
											"end": 5735,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5698,
											"end": 5735,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5698,
											"end": 5735,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5698,
											"end": 5735,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5698,
											"end": 5735,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5698,
											"end": 5735,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5698,
											"end": 5735,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5698,
											"end": 5735,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5698,
											"end": 5735,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5698,
											"end": 5735,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5698,
											"end": 5735,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5698,
											"end": 5735,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5698,
											"end": 5735,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5698,
											"end": 5735,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5698,
											"end": 5735,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5698,
											"end": 5735,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5698,
											"end": 5735,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5698,
											"end": 5735,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5698,
											"end": 5735,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5698,
											"end": 5735,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5698,
											"end": 5735,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5698,
											"end": 5735,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5698,
											"end": 5735,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5698,
											"end": 5735,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5772,
											"end": 5773,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5750,
											"end": 5753,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5750,
											"end": 5768,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5750,
											"end": 5768,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5750,
											"end": 5768,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5750,
											"end": 5773,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5746,
											"end": 5799,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 5746,
											"end": 5799,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5782,
											"end": 5799,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5775,
											"end": 5799,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5775,
											"end": 5799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5775,
											"end": 5799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5775,
											"end": 5799,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 5775,
											"end": 5799,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5746,
											"end": 5799,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 5746,
											"end": 5799,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5812,
											"end": 5833,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5836,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 5857,
											"end": 5861,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5836,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 5836,
											"end": 5862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5836,
											"end": 5862,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 5836,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5812,
											"end": 5862,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5812,
											"end": 5862,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6045,
											"end": 6048,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6045,
											"end": 6063,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6045,
											"end": 6063,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6045,
											"end": 6063,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6042,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 6029,
											"end": 6063,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6063,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 6029,
											"end": 6063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6063,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 6029,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6022,
											"end": 6063,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6022,
											"end": 6063,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6022,
											"end": 6063,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6022,
											"end": 6063,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 6071,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 6071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2855,
											"end": 2862,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4767,
											"end": 4771,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4783,
											"end": 4798,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 4801,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 4801,
											"end": 4813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4783,
											"end": 4813,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4783,
											"end": 4813,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 4839,
											"end": 4843,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4845,
											"end": 4852,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4854,
											"end": 4859,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 4823,
											"end": 4860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 4880,
											"end": 4884,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4886,
											"end": 4888,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4890,
											"end": 4895,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4870,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 4870,
											"end": 4896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4913,
											"end": 4917,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2170,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 2086,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2141,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2161,
											"end": 2162,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2154,
											"end": 2162,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2162,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2170,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 970,
											"end": 992,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 970,
											"end": 992,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 970,
											"end": 992,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 970,
											"end": 992,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 970,
											"end": 992,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 970,
											"end": 992,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 970,
											"end": 992,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 970,
											"end": 992,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 970,
											"end": 992,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 970,
											"end": 992,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 970,
											"end": 992,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 7650,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 6888,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6968,
											"end": 6980,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6994,
											"end": 7005,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6994,
											"end": 7005,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6983,
											"end": 7017,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6983,
											"end": 7017,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6983,
											"end": 7017,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6983,
											"end": 7017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 6983,
											"end": 7017,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6983,
											"end": 7017,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6983,
											"end": 7017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 6983,
											"end": 7017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6983,
											"end": 7017,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 6983,
											"end": 7017,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6968,
											"end": 7017,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6968,
											"end": 7017,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 472,
											"end": 475,
											"name": "PUSH",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 7036,
											"end": 7060,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 7055,
											"end": 7059,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7036,
											"end": 7054,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 7036,
											"end": 7060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7036,
											"end": 7060,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 7036,
											"end": 7060,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7036,
											"end": 7079,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7028,
											"end": 7105,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 7028,
											"end": 7105,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7028,
											"end": 7105,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7028,
											"end": 7105,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7028,
											"end": 7105,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7028,
											"end": 7105,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7028,
											"end": 7105,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7028,
											"end": 7105,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7028,
											"end": 7105,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7028,
											"end": 7105,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 7028,
											"end": 7105,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7028,
											"end": 7105,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 7028,
											"end": 7105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7028,
											"end": 7105,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 7028,
											"end": 7105,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7028,
											"end": 7105,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7028,
											"end": 7105,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7028,
											"end": 7105,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7028,
											"end": 7105,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7028,
											"end": 7105,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7028,
											"end": 7105,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7028,
											"end": 7105,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7028,
											"end": 7105,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 7028,
											"end": 7105,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7187,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7190,
											"end": 7199,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 7190,
											"end": 7205,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7200,
											"end": 7204,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7190,
											"end": 7205,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7190,
											"end": 7205,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7190,
											"end": 7205,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7190,
											"end": 7205,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7190,
											"end": 7205,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7190,
											"end": 7205,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7190,
											"end": 7205,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7190,
											"end": 7205,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7190,
											"end": 7205,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7190,
											"end": 7205,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7190,
											"end": 7205,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7190,
											"end": 7205,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7190,
											"end": 7205,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7190,
											"end": 7205,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7190,
											"end": 7205,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7205,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7159,
											"end": 7205,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7205,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7205,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7159,
											"end": 7205,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7205,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7159,
											"end": 7205,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7205,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7205,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7205,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7159,
											"end": 7205,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7205,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7205,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7205,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7205,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7205,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7159,
											"end": 7205,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7205,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7159,
											"end": 7205,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7205,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7205,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7205,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7205,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7205,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7205,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7205,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7205,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7242,
											"end": 7282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 7248,
											"end": 7252,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7254,
											"end": 7266,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7254,
											"end": 7281,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7254,
											"end": 7281,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7254,
											"end": 7281,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7242,
											"end": 7247,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 7242,
											"end": 7282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7242,
											"end": 7282,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 7242,
											"end": 7282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7333,
											"end": 7354,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7357,
											"end": 7366,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 7357,
											"end": 7372,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7367,
											"end": 7371,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7357,
											"end": 7372,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7357,
											"end": 7372,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7357,
											"end": 7372,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7357,
											"end": 7372,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7357,
											"end": 7372,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7357,
											"end": 7372,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7357,
											"end": 7372,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7357,
											"end": 7372,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7357,
											"end": 7372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7357,
											"end": 7372,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7357,
											"end": 7372,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7357,
											"end": 7372,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7357,
											"end": 7372,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7357,
											"end": 7372,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7357,
											"end": 7372,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7357,
											"end": 7386,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7357,
											"end": 7386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7357,
											"end": 7386,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7333,
											"end": 7386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7333,
											"end": 7386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7486,
											"end": 7487,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7454,
											"end": 7463,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 7454,
											"end": 7469,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7464,
											"end": 7468,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7454,
											"end": 7469,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7454,
											"end": 7469,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7454,
											"end": 7469,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7454,
											"end": 7469,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7454,
											"end": 7469,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7454,
											"end": 7469,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7454,
											"end": 7469,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7454,
											"end": 7469,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7454,
											"end": 7469,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7454,
											"end": 7469,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7454,
											"end": 7469,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7454,
											"end": 7469,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7454,
											"end": 7469,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7454,
											"end": 7469,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7454,
											"end": 7469,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7454,
											"end": 7483,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7454,
											"end": 7483,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7454,
											"end": 7487,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7454,
											"end": 7487,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7454,
											"end": 7487,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7454,
											"end": 7487,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7531,
											"end": 7532,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7498,
											"end": 7507,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 7498,
											"end": 7513,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7508,
											"end": 7512,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7498,
											"end": 7513,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7498,
											"end": 7513,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7498,
											"end": 7513,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7498,
											"end": 7513,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7498,
											"end": 7513,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7498,
											"end": 7513,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7498,
											"end": 7513,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7498,
											"end": 7513,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7498,
											"end": 7513,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7498,
											"end": 7513,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7498,
											"end": 7513,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7498,
											"end": 7513,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7498,
											"end": 7513,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7498,
											"end": 7513,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7498,
											"end": 7513,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7498,
											"end": 7528,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7498,
											"end": 7528,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7498,
											"end": 7532,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7498,
											"end": 7532,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7498,
											"end": 7532,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7498,
											"end": 7532,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7551,
											"end": 7569,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 7551,
											"end": 7569,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7551,
											"end": 7569,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7551,
											"end": 7569,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7551,
											"end": 7569,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7551,
											"end": 7569,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7551,
											"end": 7569,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 7551,
											"end": 7569,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7551,
											"end": 7569,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 7551,
											"end": 7569,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7551,
											"end": 7569,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7543,
											"end": 7579,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7543,
											"end": 7579,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "PUSH",
											"source": 9,
											"value": "8FC"
										},
										{
											"begin": 7580,
											"end": 7593,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7543,
											"end": 7594,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7622,
											"end": 7626,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7642,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7611,
											"end": 7642,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7642,
											"name": "PUSH",
											"source": 9,
											"value": "A5EE7A2B0254FCE91DEED604506790ED7FA072D0B14CBA4859C3BC8955B9CAAC"
										},
										{
											"begin": 7628,
											"end": 7641,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7642,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7611,
											"end": 7642,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 7611,
											"end": 7642,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7642,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 7611,
											"end": 7642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7642,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 7611,
											"end": 7642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7642,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7611,
											"end": 7642,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7642,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7642,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7642,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7642,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7642,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 6957,
											"end": 7650,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6957,
											"end": 7650,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6957,
											"end": 7650,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 7650,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 7650,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 7650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 918,
											"end": 963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 918,
											"end": 963,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 918,
											"end": 963,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 963,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 918,
											"end": 963,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 963,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 963,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 963,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 918,
											"end": 963,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 918,
											"end": 963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2756,
											"end": 3454,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 2756,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2830,
											"end": 2831,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2818,
											"end": 2827,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2818,
											"end": 2831,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2810,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 2810,
											"end": 2852,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2810,
											"end": 2852,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2810,
											"end": 2852,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2810,
											"end": 2852,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2810,
											"end": 2852,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2810,
											"end": 2852,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2810,
											"end": 2852,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2810,
											"end": 2852,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2810,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 2810,
											"end": 2852,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2810,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 2810,
											"end": 2852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2810,
											"end": 2852,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 2810,
											"end": 2852,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2810,
											"end": 2852,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2810,
											"end": 2852,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2810,
											"end": 2852,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2810,
											"end": 2852,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2810,
											"end": 2852,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2810,
											"end": 2852,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2810,
											"end": 2852,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2810,
											"end": 2852,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 2810,
											"end": 2852,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 2891,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 2913,
											"end": 2922,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2894,
											"end": 2912,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 2894,
											"end": 2923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 2923,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 2923,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2935,
											"end": 2964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 2941,
											"end": 2951,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 2963,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2935,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 2935,
											"end": 2964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2935,
											"end": 2964,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 2935,
											"end": 2964,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3020,
											"end": 3021,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2981,
											"end": 2990,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2981,
											"end": 3002,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2991,
											"end": 3001,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2981,
											"end": 3002,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2981,
											"end": 3002,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2981,
											"end": 3002,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2981,
											"end": 3002,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2981,
											"end": 3002,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2981,
											"end": 3002,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2981,
											"end": 3002,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2981,
											"end": 3002,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2981,
											"end": 3002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2981,
											"end": 3002,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2981,
											"end": 3002,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2981,
											"end": 3002,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2981,
											"end": 3002,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2981,
											"end": 3002,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2981,
											"end": 3002,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2981,
											"end": 3016,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2981,
											"end": 3016,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2981,
											"end": 3016,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2981,
											"end": 3021,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 3181,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 2977,
											"end": 3181,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3041,
											"end": 3051,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3062,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3041,
											"end": 3063,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3037,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 3037,
											"end": 3170,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3089,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 3095,
											"end": 3105,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3150,
											"end": 3154,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3125,
											"end": 3135,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3125,
											"end": 3147,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3136,
											"end": 3146,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3125,
											"end": 3147,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3125,
											"end": 3147,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3125,
											"end": 3147,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3125,
											"end": 3147,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3125,
											"end": 3147,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3125,
											"end": 3147,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3125,
											"end": 3147,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3125,
											"end": 3147,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3125,
											"end": 3147,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3125,
											"end": 3147,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3125,
											"end": 3147,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3125,
											"end": 3147,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3125,
											"end": 3147,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3125,
											"end": 3147,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3125,
											"end": 3147,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3125,
											"end": 3147,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3037,
											"end": 3170,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 3037,
											"end": 3170,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 3181,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 2977,
											"end": 3181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3232,
											"end": 3241,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3202,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 3193,
											"end": 3214,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3213,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3214,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3193,
											"end": 3214,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3214,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3193,
											"end": 3214,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3214,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3214,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3214,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3193,
											"end": 3214,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3214,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3214,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3214,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3214,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3193,
											"end": 3214,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3214,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3193,
											"end": 3214,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3228,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3193,
											"end": 3228,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3228,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3193,
											"end": 3241,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3241,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3241,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 3193,
											"end": 3241,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3241,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 3193,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3241,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 3193,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3241,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3241,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3241,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3241,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3241,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3241,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3241,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3326,
											"end": 3336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3295,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 3286,
											"end": 3307,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3306,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3307,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3286,
											"end": 3307,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3307,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3286,
											"end": 3307,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3307,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3307,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3307,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3286,
											"end": 3307,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3307,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3307,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3307,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3307,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3286,
											"end": 3307,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3307,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3286,
											"end": 3307,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3322,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3286,
											"end": 3322,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3322,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3286,
											"end": 3336,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3336,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3336,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 3286,
											"end": 3336,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3336,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 3286,
											"end": 3336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3336,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 3286,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3336,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3336,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3336,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3336,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3336,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3336,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3336,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3391,
											"end": 3401,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3425,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3383,
											"end": 3425,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3425,
											"name": "PUSH",
											"source": 9,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 3403,
											"end": 3412,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3414,
											"end": 3424,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3425,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3383,
											"end": 3425,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3425,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 3383,
											"end": 3425,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3425,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3425,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3425,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 3383,
											"end": 3425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3425,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 3383,
											"end": 3425,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3425,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3383,
											"end": 3425,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3425,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3425,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3425,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3425,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3425,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 2799,
											"end": 3454,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2756,
											"end": 3454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 677,
											"end": 710,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 677,
											"end": 710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 677,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 677,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 710,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 677,
											"end": 710,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 677,
											"end": 710,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 677,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 677,
											"end": 710,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 677,
											"end": 710,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 677,
											"end": 710,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 677,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 677,
											"end": 710,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 677,
											"end": 710,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 677,
											"end": 710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6226,
											"end": 6243,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6245,
											"end": 6269,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6287,
											"end": 6296,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6282,
											"end": 6716,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 6282,
											"end": 6716,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6306,
											"end": 6311,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 6306,
											"end": 6318,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6306,
											"end": 6318,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6306,
											"end": 6318,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6306,
											"end": 6318,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6302,
											"end": 6303,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6302,
											"end": 6318,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6282,
											"end": 6716,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6282,
											"end": 6716,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 6282,
											"end": 6716,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6340,
											"end": 6352,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6355,
											"end": 6360,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 6361,
											"end": 6362,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6355,
											"end": 6363,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6355,
											"end": 6363,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6355,
											"end": 6363,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6355,
											"end": 6363,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6355,
											"end": 6363,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 6355,
											"end": 6363,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6355,
											"end": 6363,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 6355,
											"end": 6363,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 6355,
											"end": 6363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6355,
											"end": 6363,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 6355,
											"end": 6363,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6355,
											"end": 6363,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 6355,
											"end": 6363,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6355,
											"end": 6363,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6355,
											"end": 6363,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6355,
											"end": 6363,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6355,
											"end": 6363,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6355,
											"end": 6363,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6355,
											"end": 6363,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6355,
											"end": 6363,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6355,
											"end": 6363,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6355,
											"end": 6363,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6355,
											"end": 6363,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6355,
											"end": 6363,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6355,
											"end": 6363,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6355,
											"end": 6363,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6355,
											"end": 6363,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6355,
											"end": 6363,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6355,
											"end": 6363,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6355,
											"end": 6363,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6340,
											"end": 6363,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6340,
											"end": 6363,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 472,
											"end": 475,
											"name": "PUSH",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 6382,
											"end": 6406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 6401,
											"end": 6405,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6382,
											"end": 6400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 6382,
											"end": 6406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6382,
											"end": 6406,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 6382,
											"end": 6406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6382,
											"end": 6425,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6378,
											"end": 6705,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6378,
											"end": 6705,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 6378,
											"end": 6705,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6515,
											"end": 6519,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6500,
											"end": 6519,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6500,
											"end": 6519,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6588,
											"end": 6592,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6577,
											"end": 6593,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6577,
											"end": 6593,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6577,
											"end": 6593,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6577,
											"end": 6593,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6577,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 6577,
											"end": 6593,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6577,
											"end": 6593,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6577,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 6577,
											"end": 6593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6577,
											"end": 6593,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 6577,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6577,
											"end": 6593,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6577,
											"end": 6593,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6577,
											"end": 6593,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6577,
											"end": 6593,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6577,
											"end": 6593,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6577,
											"end": 6593,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6577,
											"end": 6593,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6577,
											"end": 6593,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6577,
											"end": 6593,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6577,
											"end": 6593,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6577,
											"end": 6593,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6577,
											"end": 6593,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6593,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6593,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6670,
											"end": 6674,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6662,
											"end": 6688,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6662,
											"end": 6688,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6662,
											"end": 6688,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6662,
											"end": 6688,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6662,
											"end": 6688,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 6662,
											"end": 6688,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6378,
											"end": 6705,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 6378,
											"end": 6705,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6325,
											"end": 6716,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6323,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6323,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6323,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6320,
											"end": 6323,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6323,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6323,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6323,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6282,
											"end": 6716,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 6282,
											"end": 6716,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6282,
											"end": 6716,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 6282,
											"end": 6716,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6282,
											"end": 6716,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6801,
											"end": 6806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6808,
											"end": 6817,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6808,
											"end": 6817,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6808,
											"end": 6817,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6808,
											"end": 6817,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6808,
											"end": 6817,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6808,
											"end": 6817,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6808,
											"end": 6817,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6808,
											"end": 6817,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6808,
											"end": 6817,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6808,
											"end": 6817,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6808,
											"end": 6817,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6808,
											"end": 6817,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6793,
											"end": 6818,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6793,
											"end": 6818,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6793,
											"end": 6818,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6793,
											"end": 6818,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3033,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3041,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 382,
											"end": 420,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 382,
											"end": 420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 382,
											"end": 420,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 382,
											"end": 420,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 382,
											"end": 420,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 382,
											"end": 420,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 382,
											"end": 420,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 382,
											"end": 420,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 382,
											"end": 420,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 382,
											"end": 420,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 382,
											"end": 420,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 382,
											"end": 420,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 382,
											"end": 420,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 382,
											"end": 420,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 382,
											"end": 420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 503,
											"end": 554,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 503,
											"end": 554,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 553,
											"end": 554,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 503,
											"end": 554,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 503,
											"end": 554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4233,
											"end": 4893,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 4233,
											"end": 4893,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4331,
											"end": 4341,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4306,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 4316,
											"end": 4326,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4306,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 4306,
											"end": 4327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4306,
											"end": 4327,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 4306,
											"end": 4327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4306,
											"end": 4341,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4306,
											"end": 4341,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 4298,
											"end": 4364,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4364,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4298,
											"end": 4364,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4364,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4298,
											"end": 4364,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4364,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4364,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4298,
											"end": 4364,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 4298,
											"end": 4364,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 4298,
											"end": 4364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4364,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 4298,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4364,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4298,
											"end": 4364,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4364,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4364,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4364,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4364,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4364,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4364,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 4298,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4377,
											"end": 4396,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4399,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 4419,
											"end": 4429,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4399,
											"end": 4418,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 4399,
											"end": 4430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4399,
											"end": 4430,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 4399,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4377,
											"end": 4430,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4377,
											"end": 4430,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4572,
											"end": 4583,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4542,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 4533,
											"end": 4554,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4543,
											"end": 4553,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4554,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4533,
											"end": 4554,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4554,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4533,
											"end": 4554,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4554,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4554,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4554,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4533,
											"end": 4554,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4554,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4554,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4554,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4554,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4533,
											"end": 4554,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4554,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4533,
											"end": 4554,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4568,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4533,
											"end": 4568,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4568,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4583,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4583,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4525,
											"end": 4609,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 4525,
											"end": 4609,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4525,
											"end": 4609,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4525,
											"end": 4609,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4525,
											"end": 4609,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4525,
											"end": 4609,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4525,
											"end": 4609,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4525,
											"end": 4609,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4525,
											"end": 4609,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4525,
											"end": 4609,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 4525,
											"end": 4609,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4525,
											"end": 4609,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 4525,
											"end": 4609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4525,
											"end": 4609,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 4525,
											"end": 4609,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4525,
											"end": 4609,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4525,
											"end": 4609,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4525,
											"end": 4609,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4525,
											"end": 4609,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4525,
											"end": 4609,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4525,
											"end": 4609,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4525,
											"end": 4609,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4525,
											"end": 4609,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 4525,
											"end": 4609,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4661,
											"end": 4672,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4631,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 4622,
											"end": 4643,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4632,
											"end": 4642,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4643,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4622,
											"end": 4643,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4643,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4622,
											"end": 4643,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4643,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4643,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4643,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4622,
											"end": 4643,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4643,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4643,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4643,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4643,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4622,
											"end": 4643,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4643,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4622,
											"end": 4643,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4657,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4622,
											"end": 4657,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4657,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4622,
											"end": 4672,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4672,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4672,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 4622,
											"end": 4672,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4672,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 4622,
											"end": 4672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4672,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 4622,
											"end": 4672,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4672,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4672,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4672,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4672,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4672,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4672,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4672,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4723,
											"end": 4733,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4692,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 4683,
											"end": 4704,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4693,
											"end": 4703,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4704,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4683,
											"end": 4704,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4704,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4683,
											"end": 4704,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4704,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4704,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4704,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4683,
											"end": 4704,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4704,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4704,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4704,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4683,
											"end": 4704,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4704,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4683,
											"end": 4704,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4719,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4683,
											"end": 4719,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4719,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4683,
											"end": 4733,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4733,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4733,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 4683,
											"end": 4733,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4733,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 4683,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4733,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 4683,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4733,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4733,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4733,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4733,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4733,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4733,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4733,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4744,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 4750,
											"end": 4760,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4762,
											"end": 4772,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4744,
											"end": 4749,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 4744,
											"end": 4773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4744,
											"end": 4773,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 4744,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4794,
											"end": 4804,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4814,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4786,
											"end": 4814,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "PUSH",
											"source": 9,
											"value": "8FC"
										},
										{
											"begin": 4815,
											"end": 4826,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4827,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4848,
											"end": 4858,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4843,
											"end": 4884,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4843,
											"end": 4884,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4843,
											"end": 4884,
											"name": "PUSH",
											"source": 9,
											"value": "49995E5DD6158CF69AD3E9777C46755A1A826A446C6416992167462DAD033B2A"
										},
										{
											"begin": 4860,
											"end": 4870,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4883,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4843,
											"end": 4884,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4843,
											"end": 4884,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4843,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 4843,
											"end": 4884,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4843,
											"end": 4884,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4843,
											"end": 4884,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4843,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 4843,
											"end": 4884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4843,
											"end": 4884,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 4843,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4843,
											"end": 4884,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4843,
											"end": 4884,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4843,
											"end": 4884,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4843,
											"end": 4884,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4843,
											"end": 4884,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4843,
											"end": 4884,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4843,
											"end": 4884,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 4287,
											"end": 4893,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4233,
											"end": 4893,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4233,
											"end": 4893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4929,
											"end": 5151,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 4929,
											"end": 5151,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4976,
											"end": 4983,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4999,
											"end": 5008,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5024,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 5015,
											"end": 5024,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5015,
											"end": 5024,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5024,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5024,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5024,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5015,
											"end": 5024,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5024,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5024,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5024,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5015,
											"end": 5024,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "PUSH",
											"source": 9,
											"value": "FEAF968C"
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 5015,
											"end": 5042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 5015,
											"end": 5042,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4996,
											"end": 5042,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4996,
											"end": 5042,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4996,
											"end": 5042,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4996,
											"end": 5042,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4996,
											"end": 5042,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4996,
											"end": 5042,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5069,
											"end": 5070,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5061,
											"end": 5066,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5061,
											"end": 5070,
											"name": "SGT",
											"source": 9
										},
										{
											"begin": 5053,
											"end": 5088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 5053,
											"end": 5088,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5053,
											"end": 5088,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5053,
											"end": 5088,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5053,
											"end": 5088,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5053,
											"end": 5088,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5053,
											"end": 5088,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5053,
											"end": 5088,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5053,
											"end": 5088,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5053,
											"end": 5088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 5053,
											"end": 5088,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5053,
											"end": 5088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 5053,
											"end": 5088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5053,
											"end": 5088,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 5053,
											"end": 5088,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5053,
											"end": 5088,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5053,
											"end": 5088,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5053,
											"end": 5088,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5053,
											"end": 5088,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5053,
											"end": 5088,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5053,
											"end": 5088,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5053,
											"end": 5088,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5053,
											"end": 5088,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 5053,
											"end": 5088,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5114,
											"end": 5119,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5120,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5120,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5120,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4929,
											"end": 5151,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4929,
											"end": 5151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3313,
											"end": 3317,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3342,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 3345,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 3345,
											"end": 3357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 3377,
											"end": 3382,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3384,
											"end": 3386,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3388,
											"end": 3393,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3367,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 3367,
											"end": 3394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2246,
											"end": 2253,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2347,
											"end": 2363,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2366,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 2366,
											"end": 2382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2366,
											"end": 2382,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 2366,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2347,
											"end": 2382,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2347,
											"end": 2382,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2428,
											"end": 2444,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2461,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 2461,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 2461,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2461,
											"end": 2471,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 2461,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2453,
											"end": 2472,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2453,
											"end": 2472,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2447,
											"end": 2449,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 2447,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 2447,
											"end": 2472,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2447,
											"end": 2472,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2447,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 2447,
											"end": 2472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2447,
											"end": 2472,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 2447,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2428,
											"end": 2472,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2428,
											"end": 2472,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2483,
											"end": 2504,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2549,
											"end": 2553,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2543,
											"end": 2546,
											"name": "PUSH",
											"source": 9,
											"value": "5F5E100"
										},
										{
											"begin": 2531,
											"end": 2539,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2520,
											"end": 2528,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2508,
											"end": 2517,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2508,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 2508,
											"end": 2528,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2508,
											"end": 2528,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2508,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 2508,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2508,
											"end": 2528,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 2508,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2508,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 2508,
											"end": 2539,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2508,
											"end": 2539,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2508,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 2508,
											"end": 2539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2508,
											"end": 2539,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 2508,
											"end": 2539,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2507,
											"end": 2546,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 2507,
											"end": 2546,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2507,
											"end": 2546,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2507,
											"end": 2546,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 2507,
											"end": 2546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2507,
											"end": 2546,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 2507,
											"end": 2546,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2507,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 2507,
											"end": 2553,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2507,
											"end": 2553,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2507,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 2507,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2507,
											"end": 2553,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 2507,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2483,
											"end": 2553,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2483,
											"end": 2553,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 472,
											"end": 475,
											"name": "PUSH",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 2626,
											"end": 2629,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2610,
											"end": 2623,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 2610,
											"end": 2629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2610,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 2610,
											"end": 2648,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2610,
											"end": 2648,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2610,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 2610,
											"end": 2648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2610,
											"end": 2648,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 2610,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2603,
											"end": 2648,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2603,
											"end": 2648,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2603,
											"end": 2648,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2603,
											"end": 2648,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2603,
											"end": 2648,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2712,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3532,
											"end": 3539,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3573,
											"end": 3574,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3560,
											"end": 3570,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3560,
											"end": 3574,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3552,
											"end": 3608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 3552,
											"end": 3608,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3552,
											"end": 3608,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3552,
											"end": 3608,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3552,
											"end": 3608,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3552,
											"end": 3608,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3552,
											"end": 3608,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3552,
											"end": 3608,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3552,
											"end": 3608,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3552,
											"end": 3608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 3552,
											"end": 3608,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3552,
											"end": 3608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 3552,
											"end": 3608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3552,
											"end": 3608,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 3552,
											"end": 3608,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3552,
											"end": 3608,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3552,
											"end": 3608,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3552,
											"end": 3608,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3552,
											"end": 3608,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3552,
											"end": 3608,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3552,
											"end": 3608,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3552,
											"end": 3608,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3552,
											"end": 3608,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 3552,
											"end": 3608,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3619,
											"end": 3635,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 3638,
											"end": 3652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 3638,
											"end": 3654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3638,
											"end": 3654,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 3638,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3619,
											"end": 3654,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3619,
											"end": 3654,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3742,
											"end": 3757,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 635,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3774,
											"end": 3778,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3761,
											"end": 3771,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3761,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 3761,
											"end": 3778,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3761,
											"end": 3778,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3761,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 3761,
											"end": 3778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3761,
											"end": 3778,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 3761,
											"end": 3778,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3760,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 3760,
											"end": 3797,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3760,
											"end": 3797,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3760,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 3760,
											"end": 3797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3760,
											"end": 3797,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 3760,
											"end": 3797,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3742,
											"end": 3797,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3742,
											"end": 3797,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3924,
											"end": 3945,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3979,
											"end": 3982,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 472,
											"end": 475,
											"name": "PUSH",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 3949,
											"end": 3956,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3949,
											"end": 3975,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 3949,
											"end": 3975,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3949,
											"end": 3975,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3949,
											"end": 3975,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 3949,
											"end": 3975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3949,
											"end": 3975,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 3949,
											"end": 3975,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3948,
											"end": 3982,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 3948,
											"end": 3982,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3948,
											"end": 3982,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3948,
											"end": 3982,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 3948,
											"end": 3982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3948,
											"end": 3982,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 3948,
											"end": 3982,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3924,
											"end": 3982,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3924,
											"end": 3982,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4102,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4129,
											"end": 4137,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4122,
											"end": 4125,
											"name": "PUSH",
											"source": 9,
											"value": "5F5E100"
										},
										{
											"begin": 4106,
											"end": 4119,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4106,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 4106,
											"end": 4125,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4106,
											"end": 4125,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4106,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 4106,
											"end": 4125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4106,
											"end": 4125,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 4106,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4105,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 4105,
											"end": 4137,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4105,
											"end": 4137,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4105,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 4105,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4105,
											"end": 4137,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 4105,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4137,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4155,
											"end": 4166,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4148,
											"end": 4166,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4148,
											"end": 4166,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4148,
											"end": 4166,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4148,
											"end": 4166,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4148,
											"end": 4166,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4148,
											"end": 4166,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 4174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 429,
											"end": 475,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 429,
											"end": 475,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 472,
											"end": 475,
											"name": "PUSH",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 429,
											"end": 475,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 429,
											"end": 475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3542,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3572,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3587,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 590,
											"end": 635,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 590,
											"end": 635,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 632,
											"end": 635,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 590,
											"end": 635,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 590,
											"end": 635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5270,
											"end": 5277,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5290,
											"end": 5306,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5309,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 5309,
											"end": 5323,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 5309,
											"end": 5325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5309,
											"end": 5325,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 5309,
											"end": 5325,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5290,
											"end": 5325,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5290,
											"end": 5325,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5336,
											"end": 5355,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5358,
											"end": 5367,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 5358,
											"end": 5373,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5368,
											"end": 5372,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5358,
											"end": 5373,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5358,
											"end": 5373,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5358,
											"end": 5373,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5358,
											"end": 5373,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5358,
											"end": 5373,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5358,
											"end": 5373,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5358,
											"end": 5373,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5358,
											"end": 5373,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5358,
											"end": 5373,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5358,
											"end": 5373,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5358,
											"end": 5373,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5358,
											"end": 5373,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5358,
											"end": 5373,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5358,
											"end": 5373,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5358,
											"end": 5373,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5336,
											"end": 5373,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5336,
											"end": 5373,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5336,
											"end": 5373,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5336,
											"end": 5373,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5336,
											"end": 5373,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5336,
											"end": 5373,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5336,
											"end": 5373,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5336,
											"end": 5373,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5336,
											"end": 5373,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5336,
											"end": 5373,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5336,
											"end": 5373,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5336,
											"end": 5373,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5336,
											"end": 5373,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5336,
											"end": 5373,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5336,
											"end": 5373,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5336,
											"end": 5373,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5336,
											"end": 5373,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5336,
											"end": 5373,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5336,
											"end": 5373,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5336,
											"end": 5373,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5336,
											"end": 5373,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5336,
											"end": 5373,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5336,
											"end": 5373,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5336,
											"end": 5373,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5336,
											"end": 5373,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5336,
											"end": 5373,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5336,
											"end": 5373,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5386,
											"end": 5402,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5419,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 5419,
											"end": 5427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 5419,
											"end": 5429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5419,
											"end": 5429,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 5419,
											"end": 5429,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5411,
											"end": 5430,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5411,
											"end": 5430,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5407,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 5405,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 5405,
											"end": 5430,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5430,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 5405,
											"end": 5430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5430,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 5405,
											"end": 5430,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5386,
											"end": 5430,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5386,
											"end": 5430,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5441,
											"end": 5462,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5515,
											"end": 5519,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5509,
											"end": 5512,
											"name": "PUSH",
											"source": 9,
											"value": "5F5E100"
										},
										{
											"begin": 5497,
											"end": 5505,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5486,
											"end": 5494,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5466,
											"end": 5483,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5466,
											"end": 5483,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5466,
											"end": 5483,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5466,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 5466,
											"end": 5494,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5466,
											"end": 5494,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5466,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 5466,
											"end": 5494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5466,
											"end": 5494,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 5466,
											"end": 5494,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5466,
											"end": 5505,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 5466,
											"end": 5505,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5466,
											"end": 5505,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5466,
											"end": 5505,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 5466,
											"end": 5505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5466,
											"end": 5505,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 5466,
											"end": 5505,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5512,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 5465,
											"end": 5512,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5512,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5512,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 5465,
											"end": 5512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5512,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 5465,
											"end": 5512,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 5465,
											"end": 5519,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5519,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 5465,
											"end": 5519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5519,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 5465,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5441,
											"end": 5519,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5441,
											"end": 5519,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5550,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5530,
											"end": 5550,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 5530,
											"end": 5550,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5530,
											"end": 5550,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5530,
											"end": 5550,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5530,
											"end": 5550,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5530,
											"end": 5550,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 8723,
											"end": 8728,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8730,
											"end": 8737,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8739,
											"end": 8744,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8746,
											"end": 8750,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8714,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 8714,
											"end": 8751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8630,
											"end": 8758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10418,
											"end": 10442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 10455,
											"end": 10460,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10462,
											"end": 10469,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10445,
											"end": 10454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 10445,
											"end": 10470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10503,
											"end": 10520,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10484,
											"end": 10500,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10484,
											"end": 10520,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10559,
											"end": 10564,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10540,
											"end": 10556,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10540,
											"end": 10564,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10618,
											"end": 10625,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10627,
											"end": 10643,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10645,
											"end": 10650,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 5,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 10591,
											"end": 10651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 10716,
											"end": 10721,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10723,
											"end": 10730,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10751,
											"end": 10756,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10732,
											"end": 10748,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10758,
											"end": 10763,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 10707,
											"end": 10764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10408,
											"end": 10795,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10319,
											"end": 10795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5396,
											"end": 5397,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5380,
											"end": 5384,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5448,
											"end": 5449,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 5,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 5421,
											"end": 5451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5489,
											"end": 5490,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5475,
											"end": 5477,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5543,
											"end": 5544,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 5,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 5514,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 5574,
											"end": 5578,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5580,
											"end": 5582,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5584,
											"end": 5589,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5566,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 5566,
											"end": 5590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5297,
											"end": 5597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7977,
											"end": 7978,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7958,
											"end": 7965,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8029,
											"end": 8030,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 5,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 8002,
											"end": 8032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "tag",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "tag",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8052,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8077,
											"end": 8078,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8081,
											"end": 8086,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8052,
											"end": 8059,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 8052,
											"end": 8087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8052,
											"end": 8087,
											"name": "tag",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 8052,
											"end": 8087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7888,
											"end": 8094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7451,
											"end": 7452,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7432,
											"end": 7439,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 5,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 7476,
											"end": 7508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "tag",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 7544,
											"end": 7545,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7548,
											"end": 7555,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7557,
											"end": 7562,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 7528,
											"end": 7563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "tag",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7362,
											"end": 7570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9734,
											"end": 9735,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9717,
											"end": 9722,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9788,
											"end": 9789,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 5,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 9759,
											"end": 9791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "tag",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "tag",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9834,
											"end": 9835,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9815,
											"end": 9822,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9887,
											"end": 9888,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 5,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 9859,
											"end": 9890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "tag",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9940,
											"end": 9945,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9921,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9927,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9929,
											"end": 9936,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9959,
											"end": 9968,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10005,
											"end": 10012,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9998,
											"end": 10003,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10014,
											"end": 10019,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 9989,
											"end": 10020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "tag",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "tag",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9605,
											"end": 10037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6017,
											"end": 6018,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6001,
											"end": 6005,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6153,
											"end": 6158,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 6137,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "tag",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6208,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6220,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6258,
											"end": 6263,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6244,
											"end": 6255,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6244,
											"end": 6263,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6315,
											"end": 6319,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6334,
											"end": 6339,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 5,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 6290,
											"end": 6340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "tag",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "tag",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6507,
											"end": 6512,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6493,
											"end": 6504,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6484,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6485,
											"end": 6489,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6175,
											"end": 6537,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6565,
											"end": 6566,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6551,
											"end": 6553,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 6735,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6942,
											"end": 6947,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6934,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6935,
											"end": 6937,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7004,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6996,
											"end": 7000,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7006,
											"end": 7011,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 6987,
											"end": 7012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "tag",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 121,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 7,
											"end": 121,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 74,
											"end": 80,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 108,
											"end": 113,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 102,
											"end": 114,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 92,
											"end": 114,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 92,
											"end": 114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 121,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 121,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 121,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 127,
											"end": 311,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 127,
											"end": 311,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 226,
											"end": 237,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 266,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 255,
											"end": 258,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 248,
											"end": 267,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 300,
											"end": 304,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 295,
											"end": 298,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 291,
											"end": 305,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 276,
											"end": 305,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 305,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 127,
											"end": 311,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 127,
											"end": 311,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 127,
											"end": 311,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 127,
											"end": 311,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 127,
											"end": 311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 317,
											"end": 449,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 317,
											"end": 449,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 384,
											"end": 388,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 410,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 399,
											"end": 410,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 399,
											"end": 410,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 437,
											"end": 441,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 432,
											"end": 435,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 428,
											"end": 442,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 420,
											"end": 442,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 420,
											"end": 442,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 317,
											"end": 449,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 317,
											"end": 449,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 317,
											"end": 449,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 317,
											"end": 449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 455,
											"end": 581,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 455,
											"end": 581,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 492,
											"end": 499,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 574,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 525,
											"end": 530,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 521,
											"end": 575,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 510,
											"end": 575,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 510,
											"end": 575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 455,
											"end": 581,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 455,
											"end": 581,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 455,
											"end": 581,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 455,
											"end": 581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 587,
											"end": 683,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 587,
											"end": 683,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 624,
											"end": 631,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 653,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 671,
											"end": 676,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 653,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 653,
											"end": 677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 653,
											"end": 677,
											"name": "tag",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 653,
											"end": 677,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 642,
											"end": 677,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 642,
											"end": 677,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 587,
											"end": 683,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 587,
											"end": 683,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 587,
											"end": 683,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 587,
											"end": 683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 689,
											"end": 797,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 689,
											"end": 797,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 766,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 784,
											"end": 789,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 766,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 766,
											"end": 790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 766,
											"end": 790,
											"name": "tag",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 766,
											"end": 790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 761,
											"end": 764,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 754,
											"end": 791,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 689,
											"end": 797,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 689,
											"end": 797,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 689,
											"end": 797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 803,
											"end": 982,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 803,
											"end": 982,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 872,
											"end": 882,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 935,
											"end": 938,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 927,
											"end": 933,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 893,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 893,
											"end": 939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 893,
											"end": 939,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 893,
											"end": 939,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 971,
											"end": 975,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 966,
											"end": 969,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 962,
											"end": 976,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 948,
											"end": 976,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 948,
											"end": 976,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 803,
											"end": 982,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 803,
											"end": 982,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 803,
											"end": 982,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 803,
											"end": 982,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 803,
											"end": 982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1101,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 988,
											"end": 1101,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1058,
											"end": 1062,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1090,
											"end": 1094,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1085,
											"end": 1088,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1081,
											"end": 1095,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1073,
											"end": 1095,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1073,
											"end": 1095,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1101,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1101,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1101,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1137,
											"end": 1869,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 1137,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1256,
											"end": 1259,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1285,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 1333,
											"end": 1338,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1285,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 1285,
											"end": 1339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1285,
											"end": 1339,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 1285,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1355,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 1434,
											"end": 1440,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1429,
											"end": 1432,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1355,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 1355,
											"end": 1441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1355,
											"end": 1441,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 1355,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1348,
											"end": 1441,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1348,
											"end": 1441,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1465,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 1515,
											"end": 1520,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1465,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 1465,
											"end": 1521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1465,
											"end": 1521,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 1465,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1544,
											"end": 1551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1576,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1560,
											"end": 1844,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 1560,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1585,
											"end": 1591,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1582,
											"end": 1583,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1560,
											"end": 1844,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1560,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 1560,
											"end": 1844,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1661,
											"end": 1667,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1655,
											"end": 1668,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1688,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 1747,
											"end": 1750,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 1732,
											"end": 1745,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1688,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 1688,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1688,
											"end": 1751,
											"name": "tag",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 1688,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1681,
											"end": 1751,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 1681,
											"end": 1751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1774,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 1827,
											"end": 1833,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1774,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 1774,
											"end": 1834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1774,
											"end": 1834,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 1774,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1764,
											"end": 1834,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1764,
											"end": 1834,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1844,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1607,
											"end": 1608,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1604,
											"end": 1605,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1600,
											"end": 1609,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1595,
											"end": 1609,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1595,
											"end": 1609,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1560,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 1560,
											"end": 1844,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1560,
											"end": 1844,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 1560,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1564,
											"end": 1578,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1860,
											"end": 1863,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1853,
											"end": 1863,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1853,
											"end": 1863,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1869,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1869,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1261,
											"end": 1869,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1137,
											"end": 1869,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1137,
											"end": 1869,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1137,
											"end": 1869,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1137,
											"end": 1869,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1137,
											"end": 1869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1875,
											"end": 2248,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1875,
											"end": 2248,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2018,
											"end": 2022,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2058,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2045,
											"end": 2054,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2059,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2033,
											"end": 2059,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2033,
											"end": 2059,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2103,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2115,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2092,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2080,
											"end": 2089,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2093,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2069,
											"end": 2116,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 2236,
											"end": 2240,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 2133,
											"end": 2241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2241,
											"name": "tag",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 2133,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2125,
											"end": 2241,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2125,
											"end": 2241,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1875,
											"end": 2248,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1875,
											"end": 2248,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1875,
											"end": 2248,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1875,
											"end": 2248,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1875,
											"end": 2248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2254,
											"end": 2353,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 2254,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2306,
											"end": 2312,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2340,
											"end": 2345,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2346,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2346,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2346,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2254,
											"end": 2353,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2254,
											"end": 2353,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2254,
											"end": 2353,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2254,
											"end": 2353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2359,
											"end": 2528,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 2359,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2443,
											"end": 2454,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2477,
											"end": 2483,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2472,
											"end": 2475,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2465,
											"end": 2484,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2517,
											"end": 2521,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2512,
											"end": 2515,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2508,
											"end": 2522,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2493,
											"end": 2522,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2493,
											"end": 2522,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2359,
											"end": 2528,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2359,
											"end": 2528,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2359,
											"end": 2528,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2359,
											"end": 2528,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2359,
											"end": 2528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2534,
											"end": 2780,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 2534,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2615,
											"end": 2616,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2625,
											"end": 2738,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 2625,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2639,
											"end": 2645,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2637,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2633,
											"end": 2646,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2625,
											"end": 2738,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2625,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 2625,
											"end": 2738,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2724,
											"end": 2725,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2719,
											"end": 2722,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2715,
											"end": 2726,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2727,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2705,
											"end": 2706,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2700,
											"end": 2703,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2696,
											"end": 2707,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2689,
											"end": 2728,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2661,
											"end": 2663,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2658,
											"end": 2659,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2664,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2649,
											"end": 2664,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2649,
											"end": 2664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2625,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 2625,
											"end": 2738,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2625,
											"end": 2738,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 2625,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2772,
											"end": 2773,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2763,
											"end": 2769,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 2761,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2754,
											"end": 2770,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2747,
											"end": 2774,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2596,
											"end": 2780,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2534,
											"end": 2780,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2534,
											"end": 2780,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2534,
											"end": 2780,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2534,
											"end": 2780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2786,
											"end": 2888,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 2786,
											"end": 2888,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2827,
											"end": 2833,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2878,
											"end": 2880,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2874,
											"end": 2881,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2869,
											"end": 2871,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2862,
											"end": 2867,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2858,
											"end": 2872,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2854,
											"end": 2882,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2844,
											"end": 2882,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2844,
											"end": 2882,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2786,
											"end": 2888,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2786,
											"end": 2888,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2786,
											"end": 2888,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2786,
											"end": 2888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2894,
											"end": 3271,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 2894,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 2985,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3010,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 3043,
											"end": 3048,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 3010,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3049,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 3010,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3136,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 3129,
											"end": 3135,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3124,
											"end": 3127,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3136,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 3065,
											"end": 3136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3136,
											"name": "tag",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 3065,
											"end": 3136,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3058,
											"end": 3136,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3058,
											"end": 3136,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3145,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 3203,
											"end": 3209,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3198,
											"end": 3201,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3191,
											"end": 3195,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3184,
											"end": 3189,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3180,
											"end": 3196,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3145,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 3145,
											"end": 3210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3145,
											"end": 3210,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 3145,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3235,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 3257,
											"end": 3263,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3235,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 3235,
											"end": 3264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3235,
											"end": 3264,
											"name": "tag",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 3235,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3233,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3226,
											"end": 3265,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3219,
											"end": 3265,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3219,
											"end": 3265,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2986,
											"end": 3271,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2894,
											"end": 3271,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2894,
											"end": 3271,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2894,
											"end": 3271,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2894,
											"end": 3271,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2894,
											"end": 3271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3277,
											"end": 3590,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 3277,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3390,
											"end": 3394,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3428,
											"end": 3430,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3417,
											"end": 3426,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3413,
											"end": 3431,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3405,
											"end": 3431,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3405,
											"end": 3431,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3477,
											"end": 3486,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3471,
											"end": 3475,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3467,
											"end": 3487,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3464,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3461,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3448,
											"end": 3465,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3488,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3505,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 3578,
											"end": 3582,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3569,
											"end": 3575,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3505,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 3505,
											"end": 3583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3505,
											"end": 3583,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 3505,
											"end": 3583,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3497,
											"end": 3583,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3497,
											"end": 3583,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3277,
											"end": 3590,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3277,
											"end": 3590,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3277,
											"end": 3590,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3277,
											"end": 3590,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3277,
											"end": 3590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3677,
											"end": 3794,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 3677,
											"end": 3794,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3786,
											"end": 3787,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3783,
											"end": 3784,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3776,
											"end": 3788,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3800,
											"end": 3917,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 3800,
											"end": 3917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3909,
											"end": 3910,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3906,
											"end": 3907,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3899,
											"end": 3911,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3923,
											"end": 4045,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 3923,
											"end": 4045,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3996,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 4014,
											"end": 4019,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3996,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 3996,
											"end": 4020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3996,
											"end": 4020,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 3996,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3989,
											"end": 3994,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3986,
											"end": 4021,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3976,
											"end": 4039,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 3976,
											"end": 4039,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4035,
											"end": 4036,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4032,
											"end": 4033,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4025,
											"end": 4037,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3976,
											"end": 4039,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 3976,
											"end": 4039,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3923,
											"end": 4045,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3923,
											"end": 4045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4051,
											"end": 4190,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 4051,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4097,
											"end": 4102,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4135,
											"end": 4141,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4122,
											"end": 4142,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4113,
											"end": 4142,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4113,
											"end": 4142,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4151,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 4178,
											"end": 4183,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4151,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 4151,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4151,
											"end": 4184,
											"name": "tag",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 4151,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4051,
											"end": 4190,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4051,
											"end": 4190,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4051,
											"end": 4190,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4051,
											"end": 4190,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4051,
											"end": 4190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4196,
											"end": 4273,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 4196,
											"end": 4273,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4240,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4262,
											"end": 4267,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4251,
											"end": 4267,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4251,
											"end": 4267,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4196,
											"end": 4273,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4196,
											"end": 4273,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4196,
											"end": 4273,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4196,
											"end": 4273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4279,
											"end": 4401,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 4279,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4352,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 4370,
											"end": 4375,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4352,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 4352,
											"end": 4376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4352,
											"end": 4376,
											"name": "tag",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 4352,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4345,
											"end": 4350,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4377,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4332,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 4332,
											"end": 4395,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4391,
											"end": 4392,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4388,
											"end": 4389,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4381,
											"end": 4393,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4332,
											"end": 4395,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 4332,
											"end": 4395,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4279,
											"end": 4401,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4279,
											"end": 4401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4407,
											"end": 4546,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 4407,
											"end": 4546,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4453,
											"end": 4458,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4491,
											"end": 4497,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4478,
											"end": 4498,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4469,
											"end": 4498,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4469,
											"end": 4498,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4507,
											"end": 4540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 4534,
											"end": 4539,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4507,
											"end": 4540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 4507,
											"end": 4540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4507,
											"end": 4540,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 4507,
											"end": 4540,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4407,
											"end": 4546,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4407,
											"end": 4546,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4407,
											"end": 4546,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4407,
											"end": 4546,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4407,
											"end": 4546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4552,
											"end": 5026,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 4552,
											"end": 5026,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4626,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4628,
											"end": 4634,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4677,
											"end": 4679,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4665,
											"end": 4674,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4656,
											"end": 4663,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4675,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4680,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4645,
											"end": 4764,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4645,
											"end": 4764,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 4645,
											"end": 4764,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4683,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 4683,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 4683,
											"end": 4762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4683,
											"end": 4762,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 4683,
											"end": 4762,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4645,
											"end": 4764,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 4645,
											"end": 4764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4803,
											"end": 4804,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4828,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 4873,
											"end": 4880,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4864,
											"end": 4870,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4853,
											"end": 4862,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4849,
											"end": 4871,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4828,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 4828,
											"end": 4881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4828,
											"end": 4881,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 4828,
											"end": 4881,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4818,
											"end": 4881,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4818,
											"end": 4881,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4774,
											"end": 4891,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4930,
											"end": 4932,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4956,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 5001,
											"end": 5008,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 4998,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4981,
											"end": 4990,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4977,
											"end": 4999,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4956,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 4956,
											"end": 5009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4956,
											"end": 5009,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 4956,
											"end": 5009,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4946,
											"end": 5009,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4946,
											"end": 5009,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4901,
											"end": 5019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4552,
											"end": 5026,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4552,
											"end": 5026,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4552,
											"end": 5026,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4552,
											"end": 5026,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4552,
											"end": 5026,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4552,
											"end": 5026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5032,
											"end": 5122,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 5032,
											"end": 5122,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5066,
											"end": 5073,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5109,
											"end": 5114,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5102,
											"end": 5115,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5095,
											"end": 5116,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5084,
											"end": 5116,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5084,
											"end": 5116,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5032,
											"end": 5122,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5032,
											"end": 5122,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5032,
											"end": 5122,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5032,
											"end": 5122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5128,
											"end": 5237,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 5128,
											"end": 5237,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5209,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 5224,
											"end": 5229,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5209,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 5209,
											"end": 5230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5209,
											"end": 5230,
											"name": "tag",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 5209,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5204,
											"end": 5207,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5197,
											"end": 5231,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5128,
											"end": 5237,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5128,
											"end": 5237,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5128,
											"end": 5237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5243,
											"end": 5453,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 5243,
											"end": 5453,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5330,
											"end": 5334,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5368,
											"end": 5370,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5357,
											"end": 5366,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5353,
											"end": 5371,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5345,
											"end": 5371,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5345,
											"end": 5371,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5381,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 5443,
											"end": 5444,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5432,
											"end": 5441,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5428,
											"end": 5445,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5419,
											"end": 5425,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5381,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 5381,
											"end": 5446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5381,
											"end": 5446,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 5381,
											"end": 5446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5243,
											"end": 5453,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5243,
											"end": 5453,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5243,
											"end": 5453,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5243,
											"end": 5453,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5243,
											"end": 5453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5788,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 5459,
											"end": 5788,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5518,
											"end": 5524,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5567,
											"end": 5569,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5555,
											"end": 5564,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5546,
											"end": 5553,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5565,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5538,
											"end": 5570,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5535,
											"end": 5654,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5535,
											"end": 5654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 5535,
											"end": 5654,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5573,
											"end": 5652,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 5573,
											"end": 5652,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 5573,
											"end": 5652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5573,
											"end": 5652,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 5573,
											"end": 5652,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5535,
											"end": 5654,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 5535,
											"end": 5654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5693,
											"end": 5694,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5718,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 5763,
											"end": 5770,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5754,
											"end": 5760,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5743,
											"end": 5752,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5739,
											"end": 5761,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5718,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 5718,
											"end": 5771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5718,
											"end": 5771,
											"name": "tag",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 5718,
											"end": 5771,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5708,
											"end": 5771,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5708,
											"end": 5771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5664,
											"end": 5781,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5788,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5788,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5794,
											"end": 5912,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 5794,
											"end": 5912,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5881,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 5899,
											"end": 5904,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5881,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 5881,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5881,
											"end": 5905,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 5881,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5876,
											"end": 5879,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5869,
											"end": 5906,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5794,
											"end": 5912,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5794,
											"end": 5912,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5794,
											"end": 5912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5918,
											"end": 6140,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 5918,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6011,
											"end": 6015,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6049,
											"end": 6051,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6038,
											"end": 6047,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6034,
											"end": 6052,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6026,
											"end": 6052,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6026,
											"end": 6052,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6062,
											"end": 6133,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 6130,
											"end": 6131,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6119,
											"end": 6128,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6115,
											"end": 6132,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6106,
											"end": 6112,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6062,
											"end": 6133,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 6062,
											"end": 6133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6062,
											"end": 6133,
											"name": "tag",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 6062,
											"end": 6133,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5918,
											"end": 6140,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5918,
											"end": 6140,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5918,
											"end": 6140,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5918,
											"end": 6140,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5918,
											"end": 6140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6146,
											"end": 6765,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 6146,
											"end": 6765,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6223,
											"end": 6229,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6231,
											"end": 6237,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6239,
											"end": 6245,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6290,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6276,
											"end": 6285,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6267,
											"end": 6274,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6263,
											"end": 6286,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6259,
											"end": 6291,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6256,
											"end": 6375,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6256,
											"end": 6375,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 6256,
											"end": 6375,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6373,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 6294,
											"end": 6373,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 6294,
											"end": 6373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6373,
											"name": "tag",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 6294,
											"end": 6373,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6256,
											"end": 6375,
											"name": "tag",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 6256,
											"end": 6375,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6414,
											"end": 6415,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6439,
											"end": 6492,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 6484,
											"end": 6491,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6475,
											"end": 6481,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6473,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6460,
											"end": 6482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6439,
											"end": 6492,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 6439,
											"end": 6492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6439,
											"end": 6492,
											"name": "tag",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 6439,
											"end": 6492,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6429,
											"end": 6492,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6429,
											"end": 6492,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6385,
											"end": 6502,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6541,
											"end": 6543,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6567,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 6612,
											"end": 6619,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6603,
											"end": 6609,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6592,
											"end": 6601,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6588,
											"end": 6610,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6567,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 6567,
											"end": 6620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6567,
											"end": 6620,
											"name": "tag",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 6567,
											"end": 6620,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6557,
											"end": 6620,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6557,
											"end": 6620,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6512,
											"end": 6630,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6669,
											"end": 6671,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6695,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 6740,
											"end": 6747,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6731,
											"end": 6737,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 6729,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6716,
											"end": 6738,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6695,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 6695,
											"end": 6748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6695,
											"end": 6748,
											"name": "tag",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 6695,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6685,
											"end": 6748,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6685,
											"end": 6748,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6640,
											"end": 6758,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6146,
											"end": 6765,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6146,
											"end": 6765,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6146,
											"end": 6765,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6146,
											"end": 6765,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6146,
											"end": 6765,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6146,
											"end": 6765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6771,
											"end": 6857,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 6771,
											"end": 6857,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6806,
											"end": 6813,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6846,
											"end": 6850,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 6839,
											"end": 6844,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6835,
											"end": 6851,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6824,
											"end": 6851,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6824,
											"end": 6851,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6771,
											"end": 6857,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6771,
											"end": 6857,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6771,
											"end": 6857,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6771,
											"end": 6857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6863,
											"end": 6975,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 6863,
											"end": 6975,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6946,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 6962,
											"end": 6967,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6946,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 6946,
											"end": 6968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6946,
											"end": 6968,
											"name": "tag",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 6946,
											"end": 6968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6941,
											"end": 6944,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6934,
											"end": 6969,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6863,
											"end": 6975,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6863,
											"end": 6975,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6863,
											"end": 6975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6981,
											"end": 7195,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 6981,
											"end": 7195,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7070,
											"end": 7074,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7108,
											"end": 7110,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7097,
											"end": 7106,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7093,
											"end": 7111,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7085,
											"end": 7111,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7085,
											"end": 7111,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7121,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 7185,
											"end": 7186,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7174,
											"end": 7183,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7170,
											"end": 7187,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7161,
											"end": 7167,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7121,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 7121,
											"end": 7188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7121,
											"end": 7188,
											"name": "tag",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 7121,
											"end": 7188,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6981,
											"end": 7195,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6981,
											"end": 7195,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6981,
											"end": 7195,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6981,
											"end": 7195,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6981,
											"end": 7195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7201,
											"end": 7530,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 7201,
											"end": 7530,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7260,
											"end": 7266,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7309,
											"end": 7311,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7297,
											"end": 7306,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7288,
											"end": 7295,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7284,
											"end": 7307,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7280,
											"end": 7312,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7277,
											"end": 7396,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7277,
											"end": 7396,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 7277,
											"end": 7396,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7315,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 7315,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 7315,
											"end": 7394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7315,
											"end": 7394,
											"name": "tag",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 7315,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7277,
											"end": 7396,
											"name": "tag",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 7277,
											"end": 7396,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7435,
											"end": 7436,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7460,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 7505,
											"end": 7512,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7496,
											"end": 7502,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7485,
											"end": 7494,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7481,
											"end": 7503,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7460,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 7460,
											"end": 7513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7460,
											"end": 7513,
											"name": "tag",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 7460,
											"end": 7513,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7450,
											"end": 7513,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7450,
											"end": 7513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7406,
											"end": 7523,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7201,
											"end": 7530,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7201,
											"end": 7530,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7201,
											"end": 7530,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7201,
											"end": 7530,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7201,
											"end": 7530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7536,
											"end": 7654,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 7536,
											"end": 7654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7623,
											"end": 7647,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 7641,
											"end": 7646,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7623,
											"end": 7647,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 7623,
											"end": 7647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7623,
											"end": 7647,
											"name": "tag",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 7623,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7618,
											"end": 7621,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7611,
											"end": 7648,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7536,
											"end": 7654,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7536,
											"end": 7654,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7536,
											"end": 7654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7660,
											"end": 7882,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 7660,
											"end": 7882,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7753,
											"end": 7757,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7793,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7780,
											"end": 7789,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7776,
											"end": 7794,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7768,
											"end": 7794,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7768,
											"end": 7794,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7804,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 7872,
											"end": 7873,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7861,
											"end": 7870,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7857,
											"end": 7874,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7848,
											"end": 7854,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7804,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 7804,
											"end": 7875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7804,
											"end": 7875,
											"name": "tag",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 7804,
											"end": 7875,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7660,
											"end": 7882,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7660,
											"end": 7882,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7660,
											"end": 7882,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7660,
											"end": 7882,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7660,
											"end": 7882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7888,
											"end": 8005,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 7888,
											"end": 8005,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7997,
											"end": 7998,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7994,
											"end": 7995,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7987,
											"end": 7999,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8011,
											"end": 8128,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 8011,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8120,
											"end": 8121,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8117,
											"end": 8118,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8110,
											"end": 8122,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8134,
											"end": 8251,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 8134,
											"end": 8251,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8243,
											"end": 8244,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8240,
											"end": 8241,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8233,
											"end": 8245,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8270,
											"end": 8822,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 8270,
											"end": 8822,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8327,
											"end": 8335,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8337,
											"end": 8343,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8387,
											"end": 8390,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8380,
											"end": 8384,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 8372,
											"end": 8378,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8368,
											"end": 8385,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8364,
											"end": 8391,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8354,
											"end": 8476,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 8354,
											"end": 8476,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8395,
											"end": 8474,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 8395,
											"end": 8474,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 8395,
											"end": 8474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8395,
											"end": 8474,
											"name": "tag",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 8395,
											"end": 8474,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8354,
											"end": 8476,
											"name": "tag",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 8354,
											"end": 8476,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8508,
											"end": 8514,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8495,
											"end": 8515,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 8485,
											"end": 8515,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8485,
											"end": 8515,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8538,
											"end": 8556,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8530,
											"end": 8536,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8527,
											"end": 8557,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8524,
											"end": 8641,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8524,
											"end": 8641,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 8524,
											"end": 8641,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8560,
											"end": 8639,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 8560,
											"end": 8639,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 8560,
											"end": 8639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8560,
											"end": 8639,
											"name": "tag",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 8560,
											"end": 8639,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8524,
											"end": 8641,
											"name": "tag",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 8524,
											"end": 8641,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8674,
											"end": 8678,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8662,
											"end": 8679,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8650,
											"end": 8679,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8650,
											"end": 8679,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8728,
											"end": 8731,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8720,
											"end": 8724,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8712,
											"end": 8718,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8708,
											"end": 8725,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8698,
											"end": 8706,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8694,
											"end": 8726,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 8732,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8688,
											"end": 8816,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8688,
											"end": 8816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 8688,
											"end": 8816,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8735,
											"end": 8814,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 8735,
											"end": 8814,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 8735,
											"end": 8814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8735,
											"end": 8814,
											"name": "tag",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 8735,
											"end": 8814,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8688,
											"end": 8816,
											"name": "tag",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 8688,
											"end": 8816,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8270,
											"end": 8822,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8270,
											"end": 8822,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8270,
											"end": 8822,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8270,
											"end": 8822,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8270,
											"end": 8822,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8270,
											"end": 8822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8828,
											"end": 9355,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 8828,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8898,
											"end": 8904,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8906,
											"end": 8912,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8955,
											"end": 8957,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8943,
											"end": 8952,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8934,
											"end": 8941,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8930,
											"end": 8953,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8926,
											"end": 8958,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8923,
											"end": 9042,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8923,
											"end": 9042,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 8923,
											"end": 9042,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8961,
											"end": 9040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 8961,
											"end": 9040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 8961,
											"end": 9040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8961,
											"end": 9040,
											"name": "tag",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 8961,
											"end": 9040,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8923,
											"end": 9042,
											"name": "tag",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 8923,
											"end": 9042,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9109,
											"end": 9110,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9098,
											"end": 9107,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9094,
											"end": 9111,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9081,
											"end": 9112,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 9139,
											"end": 9157,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9131,
											"end": 9137,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9158,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9125,
											"end": 9242,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9125,
											"end": 9242,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 9125,
											"end": 9242,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9161,
											"end": 9240,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 9161,
											"end": 9240,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 9161,
											"end": 9240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9161,
											"end": 9240,
											"name": "tag",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 9161,
											"end": 9240,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9125,
											"end": 9242,
											"name": "tag",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 9125,
											"end": 9242,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9274,
											"end": 9338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 9330,
											"end": 9337,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9321,
											"end": 9327,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9310,
											"end": 9319,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9306,
											"end": 9328,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9274,
											"end": 9338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 9274,
											"end": 9338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9274,
											"end": 9338,
											"name": "tag",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 9274,
											"end": 9338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9256,
											"end": 9338,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9256,
											"end": 9338,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9256,
											"end": 9338,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9256,
											"end": 9338,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9052,
											"end": 9348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8828,
											"end": 9355,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8828,
											"end": 9355,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8828,
											"end": 9355,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8828,
											"end": 9355,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8828,
											"end": 9355,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8828,
											"end": 9355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9361,
											"end": 9693,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 9361,
											"end": 9693,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9482,
											"end": 9486,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9520,
											"end": 9522,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9509,
											"end": 9518,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9505,
											"end": 9523,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9497,
											"end": 9523,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9497,
											"end": 9523,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9533,
											"end": 9604,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 9601,
											"end": 9602,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9590,
											"end": 9599,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9586,
											"end": 9603,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9577,
											"end": 9583,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9533,
											"end": 9604,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 9533,
											"end": 9604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9533,
											"end": 9604,
											"name": "tag",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 9533,
											"end": 9604,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9614,
											"end": 9686,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 9682,
											"end": 9684,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9671,
											"end": 9680,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9667,
											"end": 9685,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9658,
											"end": 9664,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9614,
											"end": 9686,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 9614,
											"end": 9686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9614,
											"end": 9686,
											"name": "tag",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 9614,
											"end": 9686,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9361,
											"end": 9693,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9361,
											"end": 9693,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9361,
											"end": 9693,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9361,
											"end": 9693,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9361,
											"end": 9693,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9361,
											"end": 9693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9699,
											"end": 9797,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 9699,
											"end": 9797,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9750,
											"end": 9756,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9784,
											"end": 9789,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9778,
											"end": 9790,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9768,
											"end": 9790,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9768,
											"end": 9790,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9699,
											"end": 9797,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9699,
											"end": 9797,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9699,
											"end": 9797,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9699,
											"end": 9797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9803,
											"end": 9971,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 9803,
											"end": 9971,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9886,
											"end": 9897,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9920,
											"end": 9926,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9915,
											"end": 9918,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9908,
											"end": 9927,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9960,
											"end": 9964,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9955,
											"end": 9958,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9951,
											"end": 9965,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9936,
											"end": 9965,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9936,
											"end": 9965,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9803,
											"end": 9971,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9803,
											"end": 9971,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9803,
											"end": 9971,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9803,
											"end": 9971,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9803,
											"end": 9971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9977,
											"end": 10350,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 9977,
											"end": 10350,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10063,
											"end": 10066,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10091,
											"end": 10129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 10123,
											"end": 10128,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10091,
											"end": 10129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 10091,
											"end": 10129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10091,
											"end": 10129,
											"name": "tag",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 10091,
											"end": 10129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10145,
											"end": 10215,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 10208,
											"end": 10214,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10203,
											"end": 10206,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10145,
											"end": 10215,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 10145,
											"end": 10215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10145,
											"end": 10215,
											"name": "tag",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 10145,
											"end": 10215,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10138,
											"end": 10215,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10138,
											"end": 10215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10224,
											"end": 10289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 10282,
											"end": 10288,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10277,
											"end": 10280,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10270,
											"end": 10274,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10263,
											"end": 10268,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10259,
											"end": 10275,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10224,
											"end": 10289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 10224,
											"end": 10289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10224,
											"end": 10289,
											"name": "tag",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 10224,
											"end": 10289,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10314,
											"end": 10343,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 10336,
											"end": 10342,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10314,
											"end": 10343,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 10314,
											"end": 10343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10314,
											"end": 10343,
											"name": "tag",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 10314,
											"end": 10343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10309,
											"end": 10312,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10305,
											"end": 10344,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10298,
											"end": 10344,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10298,
											"end": 10344,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10067,
											"end": 10350,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9977,
											"end": 10350,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9977,
											"end": 10350,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9977,
											"end": 10350,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9977,
											"end": 10350,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9977,
											"end": 10350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10356,
											"end": 10763,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 10356,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10489,
											"end": 10493,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10527,
											"end": 10529,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10516,
											"end": 10525,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10512,
											"end": 10530,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10504,
											"end": 10530,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10504,
											"end": 10530,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10540,
											"end": 10605,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 10602,
											"end": 10603,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10591,
											"end": 10600,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10587,
											"end": 10604,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10578,
											"end": 10584,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10540,
											"end": 10605,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 10540,
											"end": 10605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10540,
											"end": 10605,
											"name": "tag",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 10540,
											"end": 10605,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10652,
											"end": 10661,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10646,
											"end": 10650,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10642,
											"end": 10662,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10637,
											"end": 10639,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10626,
											"end": 10635,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10622,
											"end": 10640,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10615,
											"end": 10663,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10680,
											"end": 10756,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 10751,
											"end": 10755,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10742,
											"end": 10748,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10680,
											"end": 10756,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 10680,
											"end": 10756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10680,
											"end": 10756,
											"name": "tag",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 10680,
											"end": 10756,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10672,
											"end": 10756,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10672,
											"end": 10756,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10356,
											"end": 10763,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10356,
											"end": 10763,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10356,
											"end": 10763,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10356,
											"end": 10763,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10356,
											"end": 10763,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10356,
											"end": 10763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10769,
											"end": 10829,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 10769,
											"end": 10829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10797,
											"end": 10800,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10818,
											"end": 10823,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10811,
											"end": 10823,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10811,
											"end": 10823,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10769,
											"end": 10829,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10769,
											"end": 10829,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10769,
											"end": 10829,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10769,
											"end": 10829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10835,
											"end": 10977,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 10835,
											"end": 10977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10885,
											"end": 10894,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10918,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 10936,
											"end": 10970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 10945,
											"end": 10969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 10963,
											"end": 10968,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10945,
											"end": 10969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 10945,
											"end": 10969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10945,
											"end": 10969,
											"name": "tag",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 10945,
											"end": 10969,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10936,
											"end": 10970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 10936,
											"end": 10970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10936,
											"end": 10970,
											"name": "tag",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 10936,
											"end": 10970,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10918,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 10918,
											"end": 10971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10918,
											"end": 10971,
											"name": "tag",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 10918,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10905,
											"end": 10971,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10905,
											"end": 10971,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10835,
											"end": 10977,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10835,
											"end": 10977,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10835,
											"end": 10977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10835,
											"end": 10977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10983,
											"end": 11109,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 10983,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11033,
											"end": 11042,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11066,
											"end": 11103,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 11097,
											"end": 11102,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11066,
											"end": 11103,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 11066,
											"end": 11103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11066,
											"end": 11103,
											"name": "tag",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 11066,
											"end": 11103,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11053,
											"end": 11103,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11053,
											"end": 11103,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10983,
											"end": 11109,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10983,
											"end": 11109,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10983,
											"end": 11109,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10983,
											"end": 11109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11115,
											"end": 11270,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 11115,
											"end": 11270,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11194,
											"end": 11203,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11227,
											"end": 11264,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "533"
										},
										{
											"begin": 11258,
											"end": 11263,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11227,
											"end": 11264,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 11227,
											"end": 11264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11227,
											"end": 11264,
											"name": "tag",
											"source": 10,
											"value": "533"
										},
										{
											"begin": 11227,
											"end": 11264,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11214,
											"end": 11264,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11214,
											"end": 11264,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11115,
											"end": 11270,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11115,
											"end": 11270,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11115,
											"end": 11270,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11115,
											"end": 11270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11276,
											"end": 11465,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 11276,
											"end": 11465,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11392,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 11452,
											"end": 11457,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11392,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 11392,
											"end": 11458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11392,
											"end": 11458,
											"name": "tag",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 11392,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11387,
											"end": 11390,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11380,
											"end": 11459,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11276,
											"end": 11465,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11276,
											"end": 11465,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11276,
											"end": 11465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11471,
											"end": 11751,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 11471,
											"end": 11751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11593,
											"end": 11597,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11631,
											"end": 11633,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11620,
											"end": 11629,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11616,
											"end": 11634,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11608,
											"end": 11634,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11608,
											"end": 11634,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11644,
											"end": 11744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 11741,
											"end": 11742,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11730,
											"end": 11739,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11726,
											"end": 11743,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11717,
											"end": 11723,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11644,
											"end": 11744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 11644,
											"end": 11744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11644,
											"end": 11744,
											"name": "tag",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 11644,
											"end": 11744,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11471,
											"end": 11751,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11471,
											"end": 11751,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11471,
											"end": 11751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11471,
											"end": 11751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11471,
											"end": 11751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11757,
											"end": 12231,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 11757,
											"end": 12231,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11825,
											"end": 11831,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11833,
											"end": 11839,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11882,
											"end": 11884,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11870,
											"end": 11879,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11861,
											"end": 11868,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11857,
											"end": 11880,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11853,
											"end": 11885,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 11850,
											"end": 11969,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11850,
											"end": 11969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 11850,
											"end": 11969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11888,
											"end": 11967,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 11888,
											"end": 11967,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 11888,
											"end": 11967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11888,
											"end": 11967,
											"name": "tag",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 11888,
											"end": 11967,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11850,
											"end": 11969,
											"name": "tag",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 11850,
											"end": 11969,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12008,
											"end": 12009,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12033,
											"end": 12086,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 12078,
											"end": 12085,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12069,
											"end": 12075,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12058,
											"end": 12067,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 12054,
											"end": 12076,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12033,
											"end": 12086,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 12033,
											"end": 12086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12033,
											"end": 12086,
											"name": "tag",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 12033,
											"end": 12086,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12023,
											"end": 12086,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12023,
											"end": 12086,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11979,
											"end": 12096,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12135,
											"end": 12137,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12161,
											"end": 12214,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 12206,
											"end": 12213,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12197,
											"end": 12203,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12186,
											"end": 12195,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 12182,
											"end": 12204,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12161,
											"end": 12214,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 12161,
											"end": 12214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12161,
											"end": 12214,
											"name": "tag",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 12161,
											"end": 12214,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12151,
											"end": 12214,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12151,
											"end": 12214,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12106,
											"end": 12224,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11757,
											"end": 12231,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11757,
											"end": 12231,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11757,
											"end": 12231,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11757,
											"end": 12231,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11757,
											"end": 12231,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11757,
											"end": 12231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12237,
											"end": 12417,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 12237,
											"end": 12417,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12285,
											"end": 12362,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12282,
											"end": 12283,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12275,
											"end": 12363,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12382,
											"end": 12386,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 12379,
											"end": 12380,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12372,
											"end": 12387,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12406,
											"end": 12410,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12403,
											"end": 12404,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12396,
											"end": 12411,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12423,
											"end": 12743,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 12423,
											"end": 12743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12467,
											"end": 12473,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12504,
											"end": 12505,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 12498,
											"end": 12502,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12494,
											"end": 12506,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12484,
											"end": 12506,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12484,
											"end": 12506,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12551,
											"end": 12552,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 12545,
											"end": 12549,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12541,
											"end": 12553,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12572,
											"end": 12590,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12562,
											"end": 12643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 12562,
											"end": 12643,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12628,
											"end": 12632,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 12620,
											"end": 12626,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12616,
											"end": 12633,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12606,
											"end": 12633,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12606,
											"end": 12633,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12562,
											"end": 12643,
											"name": "tag",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 12562,
											"end": 12643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12690,
											"end": 12692,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12682,
											"end": 12688,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12679,
											"end": 12693,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12659,
											"end": 12677,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12656,
											"end": 12694,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12653,
											"end": 12737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "546"
										},
										{
											"begin": 12653,
											"end": 12737,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12709,
											"end": 12727,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 12709,
											"end": 12727,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 12709,
											"end": 12727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12709,
											"end": 12727,
											"name": "tag",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 12709,
											"end": 12727,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12653,
											"end": 12737,
											"name": "tag",
											"source": 10,
											"value": "546"
										},
										{
											"begin": 12653,
											"end": 12737,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12474,
											"end": 12743,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12423,
											"end": 12743,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12423,
											"end": 12743,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12423,
											"end": 12743,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12423,
											"end": 12743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12749,
											"end": 12929,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 12749,
											"end": 12929,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12797,
											"end": 12874,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12794,
											"end": 12795,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12787,
											"end": 12875,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12894,
											"end": 12898,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 12891,
											"end": 12892,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12884,
											"end": 12899,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12918,
											"end": 12922,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12915,
											"end": 12916,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12908,
											"end": 12923,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12935,
											"end": 13115,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 12935,
											"end": 13115,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12983,
											"end": 13060,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12980,
											"end": 12981,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12973,
											"end": 13061,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13080,
											"end": 13084,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 13077,
											"end": 13078,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13070,
											"end": 13085,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13104,
											"end": 13108,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13101,
											"end": 13102,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13094,
											"end": 13109,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 13121,
											"end": 13306,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 13121,
											"end": 13306,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13161,
											"end": 13162,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13178,
											"end": 13198,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 13196,
											"end": 13197,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13178,
											"end": 13198,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 13178,
											"end": 13198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13178,
											"end": 13198,
											"name": "tag",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 13178,
											"end": 13198,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13173,
											"end": 13198,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13173,
											"end": 13198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13212,
											"end": 13232,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 13230,
											"end": 13231,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13212,
											"end": 13232,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 13212,
											"end": 13232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13212,
											"end": 13232,
											"name": "tag",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 13212,
											"end": 13232,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13207,
											"end": 13232,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13207,
											"end": 13232,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13251,
											"end": 13252,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13241,
											"end": 13276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 13241,
											"end": 13276,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13256,
											"end": 13274,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 13256,
											"end": 13274,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 13256,
											"end": 13274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13256,
											"end": 13274,
											"name": "tag",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 13256,
											"end": 13274,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13241,
											"end": 13276,
											"name": "tag",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 13241,
											"end": 13276,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13298,
											"end": 13299,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13295,
											"end": 13296,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13291,
											"end": 13300,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 13286,
											"end": 13300,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13286,
											"end": 13300,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13121,
											"end": 13306,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13121,
											"end": 13306,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13121,
											"end": 13306,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13121,
											"end": 13306,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13121,
											"end": 13306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13312,
											"end": 13416,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 13312,
											"end": 13416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13357,
											"end": 13364,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13386,
											"end": 13410,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 13404,
											"end": 13409,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13386,
											"end": 13410,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 13386,
											"end": 13410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13386,
											"end": 13410,
											"name": "tag",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 13386,
											"end": 13410,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13375,
											"end": 13410,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13375,
											"end": 13410,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13312,
											"end": 13416,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13312,
											"end": 13416,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13312,
											"end": 13416,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13312,
											"end": 13416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13422,
											"end": 13560,
											"name": "tag",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 13422,
											"end": 13560,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13503,
											"end": 13535,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 13529,
											"end": 13534,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13503,
											"end": 13535,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 13503,
											"end": 13535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13503,
											"end": 13535,
											"name": "tag",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 13503,
											"end": 13535,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13496,
											"end": 13501,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13493,
											"end": 13536,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 13483,
											"end": 13554,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 13483,
											"end": 13554,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13550,
											"end": 13551,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13547,
											"end": 13548,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13540,
											"end": 13552,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 13483,
											"end": 13554,
											"name": "tag",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 13483,
											"end": 13554,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13422,
											"end": 13560,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13422,
											"end": 13560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13566,
											"end": 13721,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 13566,
											"end": 13721,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13620,
											"end": 13625,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13658,
											"end": 13664,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13645,
											"end": 13665,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 13636,
											"end": 13665,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13636,
											"end": 13665,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13674,
											"end": 13715,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 13709,
											"end": 13714,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13674,
											"end": 13715,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 13674,
											"end": 13715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13674,
											"end": 13715,
											"name": "tag",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 13674,
											"end": 13715,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13566,
											"end": 13721,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13566,
											"end": 13721,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13566,
											"end": 13721,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13566,
											"end": 13721,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13566,
											"end": 13721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13727,
											"end": 14072,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 13727,
											"end": 14072,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13794,
											"end": 13800,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13843,
											"end": 13845,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13831,
											"end": 13840,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13822,
											"end": 13829,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13818,
											"end": 13841,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13814,
											"end": 13846,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 13811,
											"end": 13930,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13811,
											"end": 13930,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 13811,
											"end": 13930,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13849,
											"end": 13928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 13849,
											"end": 13928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 13849,
											"end": 13928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13849,
											"end": 13928,
											"name": "tag",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 13849,
											"end": 13928,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13811,
											"end": 13930,
											"name": "tag",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 13811,
											"end": 13930,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13969,
											"end": 13970,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13994,
											"end": 14055,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 14047,
											"end": 14054,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14038,
											"end": 14044,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14027,
											"end": 14036,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14023,
											"end": 14045,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13994,
											"end": 14055,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 13994,
											"end": 14055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13994,
											"end": 14055,
											"name": "tag",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 13994,
											"end": 14055,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13984,
											"end": 14055,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13984,
											"end": 14055,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13940,
											"end": 14065,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13727,
											"end": 14072,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13727,
											"end": 14072,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13727,
											"end": 14072,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13727,
											"end": 14072,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13727,
											"end": 14072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14078,
											"end": 14249,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 14078,
											"end": 14249,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14218,
											"end": 14241,
											"name": "PUSH",
											"source": 10,
											"value": "55736572206E6F74206C6971756964617461626C650000000000000000000000"
										},
										{
											"begin": 14214,
											"end": 14215,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14206,
											"end": 14212,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14202,
											"end": 14216,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14195,
											"end": 14242,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14078,
											"end": 14249,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14078,
											"end": 14249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14255,
											"end": 14621,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 14255,
											"end": 14621,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14397,
											"end": 14400,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14418,
											"end": 14485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "568"
										},
										{
											"begin": 14482,
											"end": 14484,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 14477,
											"end": 14480,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14418,
											"end": 14485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 14418,
											"end": 14485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14418,
											"end": 14485,
											"name": "tag",
											"source": 10,
											"value": "568"
										},
										{
											"begin": 14418,
											"end": 14485,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14411,
											"end": 14485,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14411,
											"end": 14485,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14494,
											"end": 14587,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 14583,
											"end": 14586,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14494,
											"end": 14587,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 14494,
											"end": 14587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14494,
											"end": 14587,
											"name": "tag",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 14494,
											"end": 14587,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14612,
											"end": 14614,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14607,
											"end": 14610,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14603,
											"end": 14615,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14596,
											"end": 14615,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14596,
											"end": 14615,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14255,
											"end": 14621,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14255,
											"end": 14621,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14255,
											"end": 14621,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14255,
											"end": 14621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14627,
											"end": 15046,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 14627,
											"end": 15046,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14793,
											"end": 14797,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14831,
											"end": 14833,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14820,
											"end": 14829,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14816,
											"end": 14834,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14808,
											"end": 14834,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14808,
											"end": 14834,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14874,
											"end": 14878,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14870,
											"end": 14890,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14866,
											"end": 14867,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14855,
											"end": 14864,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14851,
											"end": 14868,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14844,
											"end": 14891,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14908,
											"end": 15039,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 15034,
											"end": 15038,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14908,
											"end": 15039,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 14908,
											"end": 15039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14908,
											"end": 15039,
											"name": "tag",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 14908,
											"end": 15039,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14900,
											"end": 15039,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14900,
											"end": 15039,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14627,
											"end": 15046,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14627,
											"end": 15046,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14627,
											"end": 15046,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14627,
											"end": 15046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15052,
											"end": 15218,
											"name": "tag",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 15052,
											"end": 15218,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15192,
											"end": 15210,
											"name": "PUSH",
											"source": 10,
											"value": "4D757374206465706F7369742045544800000000000000000000000000000000"
										},
										{
											"begin": 15188,
											"end": 15189,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15180,
											"end": 15186,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15176,
											"end": 15190,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15169,
											"end": 15211,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15052,
											"end": 15218,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15052,
											"end": 15218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15224,
											"end": 15590,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 15224,
											"end": 15590,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15366,
											"end": 15369,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15387,
											"end": 15454,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 15451,
											"end": 15453,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 15446,
											"end": 15449,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15387,
											"end": 15454,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 15387,
											"end": 15454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15387,
											"end": 15454,
											"name": "tag",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 15387,
											"end": 15454,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15380,
											"end": 15454,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15380,
											"end": 15454,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15463,
											"end": 15556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 15552,
											"end": 15555,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15463,
											"end": 15556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 15463,
											"end": 15556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15463,
											"end": 15556,
											"name": "tag",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 15463,
											"end": 15556,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15581,
											"end": 15583,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15576,
											"end": 15579,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15565,
											"end": 15584,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15565,
											"end": 15584,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15224,
											"end": 15590,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15224,
											"end": 15590,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15224,
											"end": 15590,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15224,
											"end": 15590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15596,
											"end": 16015,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 15596,
											"end": 16015,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15762,
											"end": 15766,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15800,
											"end": 15802,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15789,
											"end": 15798,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15785,
											"end": 15803,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15777,
											"end": 15803,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15777,
											"end": 15803,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15849,
											"end": 15858,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15843,
											"end": 15847,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15839,
											"end": 15859,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15835,
											"end": 15836,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15824,
											"end": 15833,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15820,
											"end": 15837,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15813,
											"end": 15860,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15877,
											"end": 16008,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "577"
										},
										{
											"begin": 16003,
											"end": 16007,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15877,
											"end": 16008,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 15877,
											"end": 16008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15877,
											"end": 16008,
											"name": "tag",
											"source": 10,
											"value": "577"
										},
										{
											"begin": 15877,
											"end": 16008,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15869,
											"end": 16008,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15869,
											"end": 16008,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15596,
											"end": 16015,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15596,
											"end": 16015,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15596,
											"end": 16015,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15596,
											"end": 16015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16021,
											"end": 16212,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 16021,
											"end": 16212,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16061,
											"end": 16064,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16080,
											"end": 16100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "579"
										},
										{
											"begin": 16098,
											"end": 16099,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16080,
											"end": 16100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 16080,
											"end": 16100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16080,
											"end": 16100,
											"name": "tag",
											"source": 10,
											"value": "579"
										},
										{
											"begin": 16080,
											"end": 16100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16075,
											"end": 16100,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16075,
											"end": 16100,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16114,
											"end": 16134,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 16132,
											"end": 16133,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16114,
											"end": 16134,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 16114,
											"end": 16134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16114,
											"end": 16134,
											"name": "tag",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 16114,
											"end": 16134,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16109,
											"end": 16134,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16109,
											"end": 16134,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16157,
											"end": 16158,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16154,
											"end": 16155,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16150,
											"end": 16159,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16143,
											"end": 16159,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16143,
											"end": 16159,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16178,
											"end": 16181,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16175,
											"end": 16176,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16172,
											"end": 16182,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 16169,
											"end": 16205,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16169,
											"end": 16205,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "581"
										},
										{
											"begin": 16169,
											"end": 16205,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16185,
											"end": 16203,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "582"
										},
										{
											"begin": 16185,
											"end": 16203,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 16185,
											"end": 16203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16185,
											"end": 16203,
											"name": "tag",
											"source": 10,
											"value": "582"
										},
										{
											"begin": 16185,
											"end": 16203,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16169,
											"end": 16205,
											"name": "tag",
											"source": 10,
											"value": "581"
										},
										{
											"begin": 16169,
											"end": 16205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16021,
											"end": 16212,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16021,
											"end": 16212,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16021,
											"end": 16212,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16021,
											"end": 16212,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16021,
											"end": 16212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16218,
											"end": 16398,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 16218,
											"end": 16398,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16266,
											"end": 16343,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16263,
											"end": 16264,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16256,
											"end": 16344,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16363,
											"end": 16367,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 16360,
											"end": 16361,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 16353,
											"end": 16368,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16387,
											"end": 16391,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 16384,
											"end": 16385,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16377,
											"end": 16392,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 16404,
											"end": 16572,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 16404,
											"end": 16572,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16544,
											"end": 16564,
											"name": "PUSH",
											"source": 10,
											"value": "496E73756666696369656E742054415653540000000000000000000000000000"
										},
										{
											"begin": 16540,
											"end": 16541,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16532,
											"end": 16538,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16528,
											"end": 16542,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16521,
											"end": 16565,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16404,
											"end": 16572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16404,
											"end": 16572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16578,
											"end": 16944,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 16578,
											"end": 16944,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16720,
											"end": 16723,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16741,
											"end": 16808,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 16805,
											"end": 16807,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 16800,
											"end": 16803,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16741,
											"end": 16808,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 16741,
											"end": 16808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16741,
											"end": 16808,
											"name": "tag",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 16741,
											"end": 16808,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16734,
											"end": 16808,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16734,
											"end": 16808,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16817,
											"end": 16910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 16906,
											"end": 16909,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16817,
											"end": 16910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 16817,
											"end": 16910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16817,
											"end": 16910,
											"name": "tag",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 16817,
											"end": 16910,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16935,
											"end": 16937,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16930,
											"end": 16933,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16926,
											"end": 16938,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16919,
											"end": 16938,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16919,
											"end": 16938,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16578,
											"end": 16944,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16578,
											"end": 16944,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16578,
											"end": 16944,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16578,
											"end": 16944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16950,
											"end": 17369,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 16950,
											"end": 17369,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17116,
											"end": 17120,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17154,
											"end": 17156,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17143,
											"end": 17152,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17139,
											"end": 17157,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17131,
											"end": 17157,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17131,
											"end": 17157,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17203,
											"end": 17212,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17197,
											"end": 17201,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17193,
											"end": 17213,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17189,
											"end": 17190,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17178,
											"end": 17187,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17174,
											"end": 17191,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17167,
											"end": 17214,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17231,
											"end": 17362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "589"
										},
										{
											"begin": 17357,
											"end": 17361,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17231,
											"end": 17362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 17231,
											"end": 17362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17231,
											"end": 17362,
											"name": "tag",
											"source": 10,
											"value": "589"
										},
										{
											"begin": 17231,
											"end": 17362,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17223,
											"end": 17362,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17223,
											"end": 17362,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16950,
											"end": 17369,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16950,
											"end": 17369,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16950,
											"end": 17369,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16950,
											"end": 17369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17375,
											"end": 17546,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 17375,
											"end": 17546,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17515,
											"end": 17538,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F7420656E6F75676820636F6C6C61746572616C0000000000000000000000"
										},
										{
											"begin": 17511,
											"end": 17512,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17503,
											"end": 17509,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17499,
											"end": 17513,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17492,
											"end": 17539,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17375,
											"end": 17546,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17375,
											"end": 17546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17552,
											"end": 17918,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 17552,
											"end": 17918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17694,
											"end": 17697,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17715,
											"end": 17782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 17779,
											"end": 17781,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 17774,
											"end": 17777,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17715,
											"end": 17782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 17715,
											"end": 17782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17715,
											"end": 17782,
											"name": "tag",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 17715,
											"end": 17782,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17708,
											"end": 17782,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17708,
											"end": 17782,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17791,
											"end": 17884,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 17880,
											"end": 17883,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17791,
											"end": 17884,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 17791,
											"end": 17884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17791,
											"end": 17884,
											"name": "tag",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 17791,
											"end": 17884,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17909,
											"end": 17911,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17904,
											"end": 17907,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17900,
											"end": 17912,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17893,
											"end": 17912,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17893,
											"end": 17912,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17552,
											"end": 17918,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17552,
											"end": 17918,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17552,
											"end": 17918,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17552,
											"end": 17918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17924,
											"end": 18343,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 17924,
											"end": 18343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18090,
											"end": 18094,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18128,
											"end": 18130,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18117,
											"end": 18126,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18113,
											"end": 18131,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18105,
											"end": 18131,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18105,
											"end": 18131,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18177,
											"end": 18186,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18171,
											"end": 18175,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18167,
											"end": 18187,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18163,
											"end": 18164,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18152,
											"end": 18161,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18148,
											"end": 18165,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18141,
											"end": 18188,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18205,
											"end": 18336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "595"
										},
										{
											"begin": 18331,
											"end": 18335,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18205,
											"end": 18336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 18205,
											"end": 18336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18205,
											"end": 18336,
											"name": "tag",
											"source": 10,
											"value": "595"
										},
										{
											"begin": 18205,
											"end": 18336,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18197,
											"end": 18336,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18197,
											"end": 18336,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17924,
											"end": 18343,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17924,
											"end": 18343,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17924,
											"end": 18343,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17924,
											"end": 18343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18349,
											"end": 18543,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 18349,
											"end": 18543,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18389,
											"end": 18393,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18409,
											"end": 18429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "597"
										},
										{
											"begin": 18427,
											"end": 18428,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18409,
											"end": 18429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 18409,
											"end": 18429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18409,
											"end": 18429,
											"name": "tag",
											"source": 10,
											"value": "597"
										},
										{
											"begin": 18409,
											"end": 18429,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18404,
											"end": 18429,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18404,
											"end": 18429,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18443,
											"end": 18463,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "598"
										},
										{
											"begin": 18461,
											"end": 18462,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18443,
											"end": 18463,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 18443,
											"end": 18463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18443,
											"end": 18463,
											"name": "tag",
											"source": 10,
											"value": "598"
										},
										{
											"begin": 18443,
											"end": 18463,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18438,
											"end": 18463,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 18438,
											"end": 18463,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18487,
											"end": 18488,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18484,
											"end": 18485,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18480,
											"end": 18489,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18472,
											"end": 18489,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18472,
											"end": 18489,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18511,
											"end": 18512,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18505,
											"end": 18509,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18502,
											"end": 18513,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 18499,
											"end": 18536,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 18499,
											"end": 18536,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "599"
										},
										{
											"begin": 18499,
											"end": 18536,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 18516,
											"end": 18534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "600"
										},
										{
											"begin": 18516,
											"end": 18534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 18516,
											"end": 18534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18516,
											"end": 18534,
											"name": "tag",
											"source": 10,
											"value": "600"
										},
										{
											"begin": 18516,
											"end": 18534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18499,
											"end": 18536,
											"name": "tag",
											"source": 10,
											"value": "599"
										},
										{
											"begin": 18499,
											"end": 18536,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18349,
											"end": 18543,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 18349,
											"end": 18543,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18349,
											"end": 18543,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18349,
											"end": 18543,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18349,
											"end": 18543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18549,
											"end": 18654,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 18549,
											"end": 18654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18585,
											"end": 18592,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18625,
											"end": 18647,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18618,
											"end": 18623,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18614,
											"end": 18648,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 18603,
											"end": 18648,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18603,
											"end": 18648,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18549,
											"end": 18654,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18549,
											"end": 18654,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18549,
											"end": 18654,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18549,
											"end": 18654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18660,
											"end": 18780,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 18660,
											"end": 18780,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18732,
											"end": 18755,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "603"
										},
										{
											"begin": 18749,
											"end": 18754,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18732,
											"end": 18755,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 18732,
											"end": 18755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18732,
											"end": 18755,
											"name": "tag",
											"source": 10,
											"value": "603"
										},
										{
											"begin": 18732,
											"end": 18755,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18725,
											"end": 18730,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18722,
											"end": 18756,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 18712,
											"end": 18774,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "604"
										},
										{
											"begin": 18712,
											"end": 18774,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 18770,
											"end": 18771,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18767,
											"end": 18768,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 18760,
											"end": 18772,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 18712,
											"end": 18774,
											"name": "tag",
											"source": 10,
											"value": "604"
										},
										{
											"begin": 18712,
											"end": 18774,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18660,
											"end": 18780,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18660,
											"end": 18780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18786,
											"end": 18927,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 18786,
											"end": 18927,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18842,
											"end": 18847,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18873,
											"end": 18879,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18867,
											"end": 18880,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 18858,
											"end": 18880,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18858,
											"end": 18880,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18889,
											"end": 18921,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "606"
										},
										{
											"begin": 18915,
											"end": 18920,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18889,
											"end": 18921,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 18889,
											"end": 18921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18889,
											"end": 18921,
											"name": "tag",
											"source": 10,
											"value": "606"
										},
										{
											"begin": 18889,
											"end": 18921,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18786,
											"end": 18927,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 18786,
											"end": 18927,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18786,
											"end": 18927,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18786,
											"end": 18927,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18786,
											"end": 18927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18933,
											"end": 19009,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 18933,
											"end": 19009,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18969,
											"end": 18976,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18998,
											"end": 19003,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18987,
											"end": 19003,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18987,
											"end": 19003,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18933,
											"end": 19009,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18933,
											"end": 19009,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18933,
											"end": 19009,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18933,
											"end": 19009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19015,
											"end": 19135,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 19015,
											"end": 19135,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19087,
											"end": 19110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "609"
										},
										{
											"begin": 19104,
											"end": 19109,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19087,
											"end": 19110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 19087,
											"end": 19110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19087,
											"end": 19110,
											"name": "tag",
											"source": 10,
											"value": "609"
										},
										{
											"begin": 19087,
											"end": 19110,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19080,
											"end": 19085,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19077,
											"end": 19111,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 19067,
											"end": 19129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "610"
										},
										{
											"begin": 19067,
											"end": 19129,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19125,
											"end": 19126,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19122,
											"end": 19123,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 19115,
											"end": 19127,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 19067,
											"end": 19129,
											"name": "tag",
											"source": 10,
											"value": "610"
										},
										{
											"begin": 19067,
											"end": 19129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19015,
											"end": 19135,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19015,
											"end": 19135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19141,
											"end": 19282,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 19141,
											"end": 19282,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19197,
											"end": 19202,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19228,
											"end": 19234,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19222,
											"end": 19235,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 19213,
											"end": 19235,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19213,
											"end": 19235,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19244,
											"end": 19276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "612"
										},
										{
											"begin": 19270,
											"end": 19275,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19244,
											"end": 19276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 19244,
											"end": 19276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19244,
											"end": 19276,
											"name": "tag",
											"source": 10,
											"value": "612"
										},
										{
											"begin": 19244,
											"end": 19276,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19141,
											"end": 19282,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19141,
											"end": 19282,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19141,
											"end": 19282,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19141,
											"end": 19282,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19141,
											"end": 19282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19288,
											"end": 19431,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 19288,
											"end": 19431,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19345,
											"end": 19350,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19376,
											"end": 19382,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19370,
											"end": 19383,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 19361,
											"end": 19383,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19361,
											"end": 19383,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19392,
											"end": 19425,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "614"
										},
										{
											"begin": 19419,
											"end": 19424,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19392,
											"end": 19425,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 19392,
											"end": 19425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19392,
											"end": 19425,
											"name": "tag",
											"source": 10,
											"value": "614"
										},
										{
											"begin": 19392,
											"end": 19425,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19288,
											"end": 19431,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19288,
											"end": 19431,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19288,
											"end": 19431,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19288,
											"end": 19431,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19288,
											"end": 19431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19437,
											"end": 20408,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 19437,
											"end": 20408,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19540,
											"end": 19546,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19548,
											"end": 19554,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 19556,
											"end": 19562,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19564,
											"end": 19570,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 19572,
											"end": 19578,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19621,
											"end": 19624,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 19609,
											"end": 19618,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 19600,
											"end": 19607,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 19596,
											"end": 19619,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 19592,
											"end": 19625,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 19589,
											"end": 19709,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 19589,
											"end": 19709,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "616"
										},
										{
											"begin": 19589,
											"end": 19709,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19628,
											"end": 19707,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "617"
										},
										{
											"begin": 19628,
											"end": 19707,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 19628,
											"end": 19707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19628,
											"end": 19707,
											"name": "tag",
											"source": 10,
											"value": "617"
										},
										{
											"begin": 19628,
											"end": 19707,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19589,
											"end": 19709,
											"name": "tag",
											"source": 10,
											"value": "616"
										},
										{
											"begin": 19589,
											"end": 19709,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19748,
											"end": 19749,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19773,
											"end": 19836,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "618"
										},
										{
											"begin": 19828,
											"end": 19835,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 19819,
											"end": 19825,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19808,
											"end": 19817,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 19804,
											"end": 19826,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19773,
											"end": 19836,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 19773,
											"end": 19836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19773,
											"end": 19836,
											"name": "tag",
											"source": 10,
											"value": "618"
										},
										{
											"begin": 19773,
											"end": 19836,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19763,
											"end": 19836,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 19763,
											"end": 19836,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19719,
											"end": 19846,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19885,
											"end": 19887,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19911,
											"end": 19974,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "619"
										},
										{
											"begin": 19966,
											"end": 19973,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 19957,
											"end": 19963,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19946,
											"end": 19955,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 19942,
											"end": 19964,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19911,
											"end": 19974,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 19911,
											"end": 19974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19911,
											"end": 19974,
											"name": "tag",
											"source": 10,
											"value": "619"
										},
										{
											"begin": 19911,
											"end": 19974,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19901,
											"end": 19974,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 19901,
											"end": 19974,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19856,
											"end": 19984,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20023,
											"end": 20025,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 20049,
											"end": 20113,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "620"
										},
										{
											"begin": 20105,
											"end": 20112,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 20096,
											"end": 20102,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20085,
											"end": 20094,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 20081,
											"end": 20103,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20049,
											"end": 20113,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 20049,
											"end": 20113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20049,
											"end": 20113,
											"name": "tag",
											"source": 10,
											"value": "620"
										},
										{
											"begin": 20049,
											"end": 20113,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20039,
											"end": 20113,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 20039,
											"end": 20113,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19994,
											"end": 20123,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20162,
											"end": 20164,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 20188,
											"end": 20252,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "621"
										},
										{
											"begin": 20244,
											"end": 20251,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 20235,
											"end": 20241,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20224,
											"end": 20233,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 20220,
											"end": 20242,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20188,
											"end": 20252,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 20188,
											"end": 20252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20188,
											"end": 20252,
											"name": "tag",
											"source": 10,
											"value": "621"
										},
										{
											"begin": 20188,
											"end": 20252,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20178,
											"end": 20252,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 20178,
											"end": 20252,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20133,
											"end": 20262,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20301,
											"end": 20304,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 20328,
											"end": 20391,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "622"
										},
										{
											"begin": 20383,
											"end": 20390,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 20374,
											"end": 20380,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20363,
											"end": 20372,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 20359,
											"end": 20381,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20328,
											"end": 20391,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 20328,
											"end": 20391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20328,
											"end": 20391,
											"name": "tag",
											"source": 10,
											"value": "622"
										},
										{
											"begin": 20328,
											"end": 20391,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20318,
											"end": 20391,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20318,
											"end": 20391,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20272,
											"end": 20401,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19437,
											"end": 20408,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19437,
											"end": 20408,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 19437,
											"end": 20408,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19437,
											"end": 20408,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19437,
											"end": 20408,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 19437,
											"end": 20408,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19437,
											"end": 20408,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 19437,
											"end": 20408,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19437,
											"end": 20408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20414,
											"end": 20577,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 20414,
											"end": 20577,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20554,
											"end": 20569,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C696420707269636500000000000000000000000000000000000000"
										},
										{
											"begin": 20550,
											"end": 20551,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20542,
											"end": 20548,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20538,
											"end": 20552,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20531,
											"end": 20570,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20414,
											"end": 20577,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20414,
											"end": 20577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20583,
											"end": 20949,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 20583,
											"end": 20949,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20725,
											"end": 20728,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20746,
											"end": 20813,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "625"
										},
										{
											"begin": 20810,
											"end": 20812,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 20805,
											"end": 20808,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20746,
											"end": 20813,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 20746,
											"end": 20813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20746,
											"end": 20813,
											"name": "tag",
											"source": 10,
											"value": "625"
										},
										{
											"begin": 20746,
											"end": 20813,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20739,
											"end": 20813,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20739,
											"end": 20813,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20822,
											"end": 20915,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "626"
										},
										{
											"begin": 20911,
											"end": 20914,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20822,
											"end": 20915,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 20822,
											"end": 20915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20822,
											"end": 20915,
											"name": "tag",
											"source": 10,
											"value": "626"
										},
										{
											"begin": 20822,
											"end": 20915,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20940,
											"end": 20942,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20935,
											"end": 20938,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20931,
											"end": 20943,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20924,
											"end": 20943,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20924,
											"end": 20943,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20583,
											"end": 20949,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20583,
											"end": 20949,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20583,
											"end": 20949,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20583,
											"end": 20949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20955,
											"end": 21374,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 20955,
											"end": 21374,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21121,
											"end": 21125,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21159,
											"end": 21161,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21148,
											"end": 21157,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21144,
											"end": 21162,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21136,
											"end": 21162,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21136,
											"end": 21162,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21208,
											"end": 21217,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21202,
											"end": 21206,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21198,
											"end": 21218,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 21194,
											"end": 21195,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21183,
											"end": 21192,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21179,
											"end": 21196,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21172,
											"end": 21219,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21236,
											"end": 21367,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "628"
										},
										{
											"begin": 21362,
											"end": 21366,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21236,
											"end": 21367,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 21236,
											"end": 21367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21236,
											"end": 21367,
											"name": "tag",
											"source": 10,
											"value": "628"
										},
										{
											"begin": 21236,
											"end": 21367,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21228,
											"end": 21367,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21228,
											"end": 21367,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20955,
											"end": 21374,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20955,
											"end": 21374,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20955,
											"end": 21374,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20955,
											"end": 21374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21380,
											"end": 21482,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 21380,
											"end": 21482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21422,
											"end": 21430,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21469,
											"end": 21474,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21466,
											"end": 21467,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 21462,
											"end": 21475,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 21441,
											"end": 21475,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21441,
											"end": 21475,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21380,
											"end": 21482,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21380,
											"end": 21482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21380,
											"end": 21482,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21380,
											"end": 21482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21488,
											"end": 22336,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 21488,
											"end": 22336,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21549,
											"end": 21554,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21556,
											"end": 21560,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 21580,
											"end": 21586,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21571,
											"end": 21586,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21571,
											"end": 21586,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21604,
											"end": 21609,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21595,
											"end": 21609,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21595,
											"end": 21609,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21618,
											"end": 22330,
											"name": "tag",
											"source": 10,
											"value": "631"
										},
										{
											"begin": 21618,
											"end": 22330,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21639,
											"end": 21640,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 21629,
											"end": 21637,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 21626,
											"end": 21641,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 21618,
											"end": 22330,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 21618,
											"end": 22330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "633"
										},
										{
											"begin": 21618,
											"end": 22330,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 21734,
											"end": 21738,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 21729,
											"end": 21732,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 21725,
											"end": 21739,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 21719,
											"end": 21723,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21716,
											"end": 21740,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 21713,
											"end": 21763,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 21713,
											"end": 21763,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "634"
										},
										{
											"begin": 21713,
											"end": 21763,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 21743,
											"end": 21761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "635"
										},
										{
											"begin": 21743,
											"end": 21761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 21743,
											"end": 21761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21743,
											"end": 21761,
											"name": "tag",
											"source": 10,
											"value": "635"
										},
										{
											"begin": 21743,
											"end": 21761,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21713,
											"end": 21763,
											"name": "tag",
											"source": 10,
											"value": "634"
										},
										{
											"begin": 21713,
											"end": 21763,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21793,
											"end": 21794,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 21783,
											"end": 21791,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 21779,
											"end": 21795,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 21776,
											"end": 22227,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 21776,
											"end": 22227,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "636"
										},
										{
											"begin": 21776,
											"end": 22227,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 22208,
											"end": 22212,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 22201,
											"end": 22206,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22197,
											"end": 22213,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 22188,
											"end": 22213,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22188,
											"end": 22213,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21776,
											"end": 22227,
											"name": "tag",
											"source": 10,
											"value": "636"
										},
										{
											"begin": 21776,
											"end": 22227,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22258,
											"end": 22262,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 22252,
											"end": 22256,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22248,
											"end": 22263,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 22240,
											"end": 22263,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22240,
											"end": 22263,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22288,
											"end": 22320,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "637"
										},
										{
											"begin": 22311,
											"end": 22319,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 22288,
											"end": 22320,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 22288,
											"end": 22320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22288,
											"end": 22320,
											"name": "tag",
											"source": 10,
											"value": "637"
										},
										{
											"begin": 22288,
											"end": 22320,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22276,
											"end": 22320,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 22276,
											"end": 22320,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21618,
											"end": 22330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "631"
										},
										{
											"begin": 21618,
											"end": 22330,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21618,
											"end": 22330,
											"name": "tag",
											"source": 10,
											"value": "633"
										},
										{
											"begin": 21618,
											"end": 22330,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21488,
											"end": 22336,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 21488,
											"end": 22336,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21488,
											"end": 22336,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 21488,
											"end": 22336,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 21488,
											"end": 22336,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21488,
											"end": 22336,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21488,
											"end": 22336,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21488,
											"end": 22336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22342,
											"end": 23415,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 22342,
											"end": 23415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22396,
											"end": 22401,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22587,
											"end": 22595,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22577,
											"end": 22617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "639"
										},
										{
											"begin": 22577,
											"end": 22617,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 22608,
											"end": 22609,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 22599,
											"end": 22609,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22599,
											"end": 22609,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22610,
											"end": 22615,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "638"
										},
										{
											"begin": 22610,
											"end": 22615,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22577,
											"end": 22617,
											"name": "tag",
											"source": 10,
											"value": "639"
										},
										{
											"begin": 22577,
											"end": 22617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22636,
											"end": 22640,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22626,
											"end": 22662,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "640"
										},
										{
											"begin": 22626,
											"end": 22662,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 22653,
											"end": 22654,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22644,
											"end": 22654,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22644,
											"end": 22654,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22655,
											"end": 22660,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "638"
										},
										{
											"begin": 22655,
											"end": 22660,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22626,
											"end": 22662,
											"name": "tag",
											"source": 10,
											"value": "640"
										},
										{
											"begin": 22626,
											"end": 22662,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22722,
											"end": 22726,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22770,
											"end": 22771,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 22765,
											"end": 22792,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22765,
											"end": 22792,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 22765,
											"end": 22792,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "642"
										},
										{
											"begin": 22765,
											"end": 22792,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 22806,
											"end": 22807,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 22801,
											"end": 22992,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22801,
											"end": 22992,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 22801,
											"end": 22992,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "643"
										},
										{
											"begin": 22801,
											"end": 22992,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 22715,
											"end": 22992,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "641"
										},
										{
											"begin": 22715,
											"end": 22992,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22765,
											"end": 22792,
											"name": "tag",
											"source": 10,
											"value": "642"
										},
										{
											"begin": 22765,
											"end": 22792,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22783,
											"end": 22784,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 22774,
											"end": 22784,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22774,
											"end": 22784,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22785,
											"end": 22790,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22785,
											"end": 22790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "638"
										},
										{
											"begin": 22785,
											"end": 22790,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22801,
											"end": 22992,
											"name": "tag",
											"source": 10,
											"value": "643"
										},
										{
											"begin": 22801,
											"end": 22992,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22846,
											"end": 22849,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 22836,
											"end": 22844,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 22833,
											"end": 22850,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 22830,
											"end": 22873,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 22830,
											"end": 22873,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "644"
										},
										{
											"begin": 22830,
											"end": 22873,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 22853,
											"end": 22871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "645"
										},
										{
											"begin": 22853,
											"end": 22871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 22853,
											"end": 22871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22853,
											"end": 22871,
											"name": "tag",
											"source": 10,
											"value": "645"
										},
										{
											"begin": 22853,
											"end": 22871,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22830,
											"end": 22873,
											"name": "tag",
											"source": 10,
											"value": "644"
										},
										{
											"begin": 22830,
											"end": 22873,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22902,
											"end": 22910,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22899,
											"end": 22900,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 22895,
											"end": 22911,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 22886,
											"end": 22911,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22886,
											"end": 22911,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22937,
											"end": 22940,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 22930,
											"end": 22935,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22927,
											"end": 22941,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 22924,
											"end": 22964,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 22924,
											"end": 22964,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "646"
										},
										{
											"begin": 22924,
											"end": 22964,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 22944,
											"end": 22962,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "647"
										},
										{
											"begin": 22944,
											"end": 22962,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 22944,
											"end": 22962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22944,
											"end": 22962,
											"name": "tag",
											"source": 10,
											"value": "647"
										},
										{
											"begin": 22944,
											"end": 22962,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22924,
											"end": 22964,
											"name": "tag",
											"source": 10,
											"value": "646"
										},
										{
											"begin": 22924,
											"end": 22964,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22977,
											"end": 22982,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22977,
											"end": 22982,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "638"
										},
										{
											"begin": 22977,
											"end": 22982,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22715,
											"end": 22992,
											"name": "tag",
											"source": 10,
											"value": "641"
										},
										{
											"begin": 22715,
											"end": 22992,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22715,
											"end": 22992,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23101,
											"end": 23103,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23091,
											"end": 23099,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23088,
											"end": 23104,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 23082,
											"end": 23085,
											"name": "PUSH",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 23076,
											"end": 23080,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23073,
											"end": 23086,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 23069,
											"end": 23105,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 23051,
											"end": 23053,
											"name": "PUSH",
											"source": 10,
											"value": "4E"
										},
										{
											"begin": 23041,
											"end": 23049,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 23038,
											"end": 23054,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 23033,
											"end": 23035,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 23027,
											"end": 23031,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 23024,
											"end": 23036,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 23020,
											"end": 23055,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 23004,
											"end": 23115,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 23001,
											"end": 23247,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 23001,
											"end": 23247,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "648"
										},
										{
											"begin": 23001,
											"end": 23247,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 23157,
											"end": 23165,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23151,
											"end": 23155,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23147,
											"end": 23166,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 23138,
											"end": 23166,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23138,
											"end": 23166,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23192,
											"end": 23195,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23185,
											"end": 23190,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23182,
											"end": 23196,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 23179,
											"end": 23219,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 23179,
											"end": 23219,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "649"
										},
										{
											"begin": 23179,
											"end": 23219,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 23199,
											"end": 23217,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "650"
										},
										{
											"begin": 23199,
											"end": 23217,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 23199,
											"end": 23217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23199,
											"end": 23217,
											"name": "tag",
											"source": 10,
											"value": "650"
										},
										{
											"begin": 23199,
											"end": 23217,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23179,
											"end": 23219,
											"name": "tag",
											"source": 10,
											"value": "649"
										},
										{
											"begin": 23179,
											"end": 23219,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23232,
											"end": 23237,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "638"
										},
										{
											"begin": 23232,
											"end": 23237,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23001,
											"end": 23247,
											"name": "tag",
											"source": 10,
											"value": "648"
										},
										{
											"begin": 23001,
											"end": 23247,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23272,
											"end": 23314,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "651"
										},
										{
											"begin": 23310,
											"end": 23313,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 23300,
											"end": 23308,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 23294,
											"end": 23298,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 23291,
											"end": 23292,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 23272,
											"end": 23314,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 23272,
											"end": 23314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23272,
											"end": 23314,
											"name": "tag",
											"source": 10,
											"value": "651"
										},
										{
											"begin": 23272,
											"end": 23314,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23257,
											"end": 23314,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 23257,
											"end": 23314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23257,
											"end": 23314,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23257,
											"end": 23314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23346,
											"end": 23350,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23341,
											"end": 23344,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 23337,
											"end": 23351,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 23330,
											"end": 23335,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23327,
											"end": 23352,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 23324,
											"end": 23375,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 23324,
											"end": 23375,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "652"
										},
										{
											"begin": 23324,
											"end": 23375,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 23355,
											"end": 23373,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "653"
										},
										{
											"begin": 23355,
											"end": 23373,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 23355,
											"end": 23373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23355,
											"end": 23373,
											"name": "tag",
											"source": 10,
											"value": "653"
										},
										{
											"begin": 23355,
											"end": 23373,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23324,
											"end": 23375,
											"name": "tag",
											"source": 10,
											"value": "652"
										},
										{
											"begin": 23324,
											"end": 23375,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23404,
											"end": 23408,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23397,
											"end": 23402,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23393,
											"end": 23409,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 23384,
											"end": 23409,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23384,
											"end": 23409,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22342,
											"end": 23415,
											"name": "tag",
											"source": 10,
											"value": "638"
										},
										{
											"begin": 22342,
											"end": 23415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22342,
											"end": 23415,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 22342,
											"end": 23415,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 22342,
											"end": 23415,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22342,
											"end": 23415,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22342,
											"end": 23415,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22342,
											"end": 23415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23421,
											"end": 23706,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 23421,
											"end": 23706,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23481,
											"end": 23486,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23505,
											"end": 23528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "655"
										},
										{
											"begin": 23523,
											"end": 23527,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23505,
											"end": 23528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 23505,
											"end": 23528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23505,
											"end": 23528,
											"name": "tag",
											"source": 10,
											"value": "655"
										},
										{
											"begin": 23505,
											"end": 23528,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23497,
											"end": 23528,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23497,
											"end": 23528,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23549,
											"end": 23576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "656"
										},
										{
											"begin": 23567,
											"end": 23575,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23549,
											"end": 23576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 23549,
											"end": 23576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23549,
											"end": 23576,
											"name": "tag",
											"source": 10,
											"value": "656"
										},
										{
											"begin": 23549,
											"end": 23576,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23537,
											"end": 23576,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 23537,
											"end": 23576,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23595,
											"end": 23699,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "657"
										},
										{
											"begin": 23632,
											"end": 23698,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23622,
											"end": 23630,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 23616,
											"end": 23620,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 23595,
											"end": 23699,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 23595,
											"end": 23699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23595,
											"end": 23699,
											"name": "tag",
											"source": 10,
											"value": "657"
										},
										{
											"begin": 23595,
											"end": 23699,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23586,
											"end": 23699,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23586,
											"end": 23699,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23421,
											"end": 23706,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 23421,
											"end": 23706,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23421,
											"end": 23706,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23421,
											"end": 23706,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23421,
											"end": 23706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23712,
											"end": 24122,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 23712,
											"end": 24122,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23752,
											"end": 23759,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23775,
											"end": 23795,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "659"
										},
										{
											"begin": 23793,
											"end": 23794,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23775,
											"end": 23795,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 23775,
											"end": 23795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23775,
											"end": 23795,
											"name": "tag",
											"source": 10,
											"value": "659"
										},
										{
											"begin": 23775,
											"end": 23795,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23770,
											"end": 23795,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23770,
											"end": 23795,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23809,
											"end": 23829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "660"
										},
										{
											"begin": 23827,
											"end": 23828,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23809,
											"end": 23829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 23809,
											"end": 23829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23809,
											"end": 23829,
											"name": "tag",
											"source": 10,
											"value": "660"
										},
										{
											"begin": 23809,
											"end": 23829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23804,
											"end": 23829,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 23804,
											"end": 23829,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23864,
											"end": 23865,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23861,
											"end": 23862,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23857,
											"end": 23866,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 23886,
											"end": 23916,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "661"
										},
										{
											"begin": 23904,
											"end": 23915,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23886,
											"end": 23916,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 23886,
											"end": 23916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23886,
											"end": 23916,
											"name": "tag",
											"source": 10,
											"value": "661"
										},
										{
											"begin": 23886,
											"end": 23916,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23875,
											"end": 23916,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23875,
											"end": 23916,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24065,
											"end": 24066,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24056,
											"end": 24063,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24052,
											"end": 24067,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 24049,
											"end": 24050,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 24046,
											"end": 24068,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 24026,
											"end": 24027,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24019,
											"end": 24028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 23999,
											"end": 24082,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 23976,
											"end": 24115,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "662"
										},
										{
											"begin": 23976,
											"end": 24115,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 24095,
											"end": 24113,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "663"
										},
										{
											"begin": 24095,
											"end": 24113,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 24095,
											"end": 24113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24095,
											"end": 24113,
											"name": "tag",
											"source": 10,
											"value": "663"
										},
										{
											"begin": 24095,
											"end": 24113,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23976,
											"end": 24115,
											"name": "tag",
											"source": 10,
											"value": "662"
										},
										{
											"begin": 23976,
											"end": 24115,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23760,
											"end": 24122,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23712,
											"end": 24122,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 23712,
											"end": 24122,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23712,
											"end": 24122,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23712,
											"end": 24122,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23712,
											"end": 24122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24128,
											"end": 24307,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 24128,
											"end": 24307,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24268,
											"end": 24299,
											"name": "PUSH",
											"source": 10,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E2030000000"
										},
										{
											"begin": 24264,
											"end": 24265,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24256,
											"end": 24262,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24252,
											"end": 24266,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24245,
											"end": 24300,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24128,
											"end": 24307,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24128,
											"end": 24307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24313,
											"end": 24679,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 24313,
											"end": 24679,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24455,
											"end": 24458,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24476,
											"end": 24543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "666"
										},
										{
											"begin": 24540,
											"end": 24542,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 24535,
											"end": 24538,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24476,
											"end": 24543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 24476,
											"end": 24543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24476,
											"end": 24543,
											"name": "tag",
											"source": 10,
											"value": "666"
										},
										{
											"begin": 24476,
											"end": 24543,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24469,
											"end": 24543,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24469,
											"end": 24543,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24552,
											"end": 24645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "667"
										},
										{
											"begin": 24641,
											"end": 24644,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24552,
											"end": 24645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 24552,
											"end": 24645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24552,
											"end": 24645,
											"name": "tag",
											"source": 10,
											"value": "667"
										},
										{
											"begin": 24552,
											"end": 24645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24670,
											"end": 24672,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24665,
											"end": 24668,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24661,
											"end": 24673,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24654,
											"end": 24673,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24654,
											"end": 24673,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24313,
											"end": 24679,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24313,
											"end": 24679,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24313,
											"end": 24679,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24313,
											"end": 24679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24685,
											"end": 25104,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 24685,
											"end": 25104,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24851,
											"end": 24855,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24889,
											"end": 24891,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24878,
											"end": 24887,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24874,
											"end": 24892,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24866,
											"end": 24892,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24866,
											"end": 24892,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24938,
											"end": 24947,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24932,
											"end": 24936,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24928,
											"end": 24948,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 24924,
											"end": 24925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24913,
											"end": 24922,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24909,
											"end": 24926,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24902,
											"end": 24949,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24966,
											"end": 25097,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "669"
										},
										{
											"begin": 25092,
											"end": 25096,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24966,
											"end": 25097,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 24966,
											"end": 25097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24966,
											"end": 25097,
											"name": "tag",
											"source": 10,
											"value": "669"
										},
										{
											"begin": 24966,
											"end": 25097,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24958,
											"end": 25097,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24958,
											"end": 25097,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24685,
											"end": 25104,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24685,
											"end": 25104,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24685,
											"end": 25104,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24685,
											"end": 25104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25110,
											"end": 25552,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 25110,
											"end": 25552,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25259,
											"end": 25263,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25297,
											"end": 25299,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 25286,
											"end": 25295,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25282,
											"end": 25300,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25274,
											"end": 25300,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25274,
											"end": 25300,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25310,
											"end": 25381,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "671"
										},
										{
											"begin": 25378,
											"end": 25379,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25367,
											"end": 25376,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25363,
											"end": 25380,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25354,
											"end": 25360,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 25310,
											"end": 25381,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 25310,
											"end": 25381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25310,
											"end": 25381,
											"name": "tag",
											"source": 10,
											"value": "671"
										},
										{
											"begin": 25310,
											"end": 25381,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25391,
											"end": 25463,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "672"
										},
										{
											"begin": 25459,
											"end": 25461,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 25448,
											"end": 25457,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25444,
											"end": 25462,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25435,
											"end": 25441,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 25391,
											"end": 25463,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 25391,
											"end": 25463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25391,
											"end": 25463,
											"name": "tag",
											"source": 10,
											"value": "672"
										},
										{
											"begin": 25391,
											"end": 25463,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25473,
											"end": 25545,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "673"
										},
										{
											"begin": 25541,
											"end": 25543,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 25530,
											"end": 25539,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25526,
											"end": 25544,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25517,
											"end": 25523,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 25473,
											"end": 25545,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 25473,
											"end": 25545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25473,
											"end": 25545,
											"name": "tag",
											"source": 10,
											"value": "673"
										},
										{
											"begin": 25473,
											"end": 25545,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25110,
											"end": 25552,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 25110,
											"end": 25552,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 25110,
											"end": 25552,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25110,
											"end": 25552,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25110,
											"end": 25552,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25110,
											"end": 25552,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25110,
											"end": 25552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol",
								"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol",
								"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"TavsStable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"COLLATERAL_RATIO()": "d9e69a05",
							"DATAFEED_PRICE_DECIMALS()": "75b1475d",
							"DECIMALS_FACTOR()": "e36b72c6",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burnAndWithdraw(uint256)": "7c695cc1",
							"checkUpkeep(bytes)": "6e04ff0d",
							"decimals()": "313ce567",
							"depositAndMint()": "663837db",
							"estimateMintAmount(uint256)": "b5fbc7a0",
							"estimateWithdrawETH(uint256)": "b855fa5b",
							"getCollateralRatio(address)": "15a3ba43",
							"getLatestPrice()": "8e15f473",
							"getUserCollateralUSD(address)": "e5c338ee",
							"getUsers()": "00ce8e3e",
							"liquidationAddress()": "6c09395e",
							"name()": "06fdde03",
							"performUpkeep(bytes)": "4585e33b",
							"positions(address)": "55f57510",
							"priceFeed()": "741bef1a",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"users(uint256)": "365b98b2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethReturned\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralSeized\",\"type\":\"uint256\"}],\"name\":\"Liquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COLLATERAL_RATIO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DATAFEED_PRICE_DECIMALS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DECIMALS_FACTOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"}],\"name\":\"burnAndWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositAndMint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"}],\"name\":\"estimateMintAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"}],\"name\":\"estimateWithdrawETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getCollateralRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserCollateralUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUsers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidationAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"collateralETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stablecoinDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TavsStable.sol\":\"TAVSStable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c53c8736dacbf8c517c63937d556c3e4873a62f509c5d84b89e32fc5c9c6c2c\",\"dweb:/ipfs/QmeR6RSce5dTDcPgbwBnG7E8U89716bqsUcv1NeWnX5RJf\"]},\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":{\"keccak256\":\"0xce623f3e7fa4addf240032d2817b2b489ac08e79fae14a5cc5850ed3f1acddf8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0546b2739f3989b897c5cb591d01211e2db22e1a8578f68117f1a8a692abd85c\",\"dweb:/ipfs/QmW6guw8uUk2Dq49PWdjeZeEvnDDRg3CVX2BVcVNcT6QNL\"]},\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xabb5a81f9380914fe192ba9e16aea6a948f8f949ad96052849207de2f40a2e3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://039c114331e7d1b2b8ebf2aebb730f67e9217508e75e442d980b3364e040321d\",\"dweb:/ipfs/QmV8rBwm6tpCLaXPmy3nYB11R9Eg5qatUKxQDau3sRKnfo\"]},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"TavsStable.sol\":{\"keccak256\":\"0x5106e2b742ecd8cfbe55a8954d9417ea368f3af6c7a2d9d2b0562a809b3dc255\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac6f665707ded6e2e24c6ccdd7352593665768b8ce66779e67757a4c7d32ddf1\",\"dweb:/ipfs/QmaNsqefhox5GYQJC8UkwV87YFrN6L4ed4QcFWmjK5wx6s\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 273,
								"contract": "TavsStable.sol:TAVSStable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 279,
								"contract": "TavsStable.sol:TAVSStable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 281,
								"contract": "TavsStable.sol:TAVSStable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 283,
								"contract": "TavsStable.sol:TAVSStable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 285,
								"contract": "TavsStable.sol:TAVSStable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 912,
								"contract": "TavsStable.sol:TAVSStable",
								"label": "priceFeed",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(AggregatorV3Interface)113"
							},
							{
								"astId": 923,
								"contract": "TavsStable.sol:TAVSStable",
								"label": "liquidationAddress",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 933,
								"contract": "TavsStable.sol:TAVSStable",
								"label": "positions",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_struct(Position)928_storage)"
							},
							{
								"astId": 936,
								"contract": "TavsStable.sol:TAVSStable",
								"label": "users",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 940,
								"contract": "TavsStable.sol:TAVSStable",
								"label": "userExists",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(AggregatorV3Interface)113": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(Position)928_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct TAVSStable.Position)",
								"numberOfBytes": "32",
								"value": "t_struct(Position)928_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Position)928_storage": {
								"encoding": "inplace",
								"label": "struct TAVSStable.Position",
								"members": [
									{
										"astId": 925,
										"contract": "TavsStable.sol:TAVSStable",
										"label": "collateralETH",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 927,
										"contract": "TavsStable.sol:TAVSStable",
										"label": "stablecoinDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"performUpkeep(bytes)": {
								"notice": "method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/automation/AutomationBase.sol",
					"exportedSymbols": {
						"AutomationBase": [
							37
						]
					},
					"id": 38,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AutomationBase",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 37,
							"linearizedBaseContracts": [
								37
							],
							"name": "AutomationBase",
							"nameLocation": "66:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "b60ac5db",
									"id": 3,
									"name": "OnlySimulatedBackend",
									"nameLocation": "91:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "111:2:0"
									},
									"src": "85:29:0"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "291:200:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 7,
																"name": "tx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967270,
																"src": "350:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_transaction",
																	"typeString": "tx"
																}
															},
															"id": 8,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "353:6:0",
															"memberName": "origin",
															"nodeType": "MemberAccess",
															"src": "350:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 11,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "371:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 10,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "363:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 9,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "363:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 12,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "363:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "350:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 20,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 14,
																"name": "tx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967270,
																"src": "377:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_transaction",
																	"typeString": "tx"
																}
															},
															"id": 15,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "380:6:0",
															"memberName": "origin",
															"nodeType": "MemberAccess",
															"src": "377:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "307831313131313131313131313131313131313131313131313131313131313131313131313131313131",
																	"id": 18,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "398:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"value": "0x1111111111111111111111111111111111111111"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 17,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "390:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 16,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "390:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "390:51:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "377:64:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "350:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 26,
												"nodeType": "IfStatement",
												"src": "346:141:0",
												"trueBody": {
													"id": 25,
													"nodeType": "Block",
													"src": "443:44:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 22,
																	"name": "OnlySimulatedBackend",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "458:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "458:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 24,
															"nodeType": "RevertStatement",
															"src": "451:29:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4,
										"nodeType": "StructuredDocumentation",
										"src": "118:127:0",
										"text": " @notice method that allows it to be simulated via eth_call by checking that\n the sender is the zero address."
									},
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_preventExecution",
									"nameLocation": "257:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "274:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "291:0:0"
									},
									"scope": 37,
									"src": "248:243:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "652:37:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 31,
														"name": "_preventExecution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "658:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "658:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "658:19:0"
											},
											{
												"id": 34,
												"nodeType": "PlaceholderStatement",
												"src": "683:1:0"
											}
										]
									},
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "495:129:0",
										"text": " @notice modifier that allows it to be simulated via eth_call by checking\n that the sender is the zero address."
									},
									"id": 36,
									"name": "cannotExecute",
									"nameLocation": "636:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "649:2:0"
									},
									"src": "627:62:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 38,
							"src": "57:634:0",
							"usedErrors": [
								3
							],
							"usedEvents": []
						}
					],
					"src": "32:660:0"
				},
				"id": 0
			},
			"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol",
					"exportedSymbols": {
						"AutomationBase": [
							37
						],
						"AutomationCompatible": [
							48
						],
						"AutomationCompatibleInterface": [
							67
						]
					},
					"id": 49,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 39,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/automation/AutomationBase.sol",
							"file": "./AutomationBase.sol",
							"id": 41,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 49,
							"sourceUnit": 38,
							"src": "57:52:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 40,
										"name": "AutomationBase",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 37,
										"src": "65:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
							"file": "./interfaces/AutomationCompatibleInterface.sol",
							"id": 43,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 49,
							"sourceUnit": 68,
							"src": "110:93:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 42,
										"name": "AutomationCompatibleInterface",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 67,
										"src": "118:29:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 44,
										"name": "AutomationBase",
										"nameLocations": [
											"247:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 37,
										"src": "247:14:1"
									},
									"id": 45,
									"nodeType": "InheritanceSpecifier",
									"src": "247:14:1"
								},
								{
									"baseName": {
										"id": 46,
										"name": "AutomationCompatibleInterface",
										"nameLocations": [
											"263:29:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 67,
										"src": "263:29:1"
									},
									"id": 47,
									"nodeType": "InheritanceSpecifier",
									"src": "263:29:1"
								}
							],
							"canonicalName": "AutomationCompatible",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 48,
							"linearizedBaseContracts": [
								48,
								67,
								37
							],
							"name": "AutomationCompatible",
							"nameLocation": "223:20:1",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 49,
							"src": "205:90:1",
							"usedErrors": [
								3
							],
							"usedEvents": []
						}
					],
					"src": "32:264:1"
				},
				"id": 1
			},
			"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
					"exportedSymbols": {
						"AutomationCompatibleInterface": [
							67
						]
					},
					"id": 68,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 50,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AutomationCompatibleInterface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 67,
							"linearizedBaseContracts": [
								67
							],
							"name": "AutomationCompatibleInterface",
							"nameLocation": "120:29:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "154:985:2",
										"text": " @notice method that is simulated by the keepers to see if any work actually\n needs to be performed. This method does does not actually need to be\n executable, and since it is only ever simulated it can consume lots of gas.\n @dev To ensure that it is never called, you may want to add the\n cannotExecute modifier from KeeperBase to your implementation of this\n method.\n @param checkData specified in the upkeep registration so it is always the\n same for a registered upkeep. This can easily be broken down into specific\n arguments using `abi.decode`, so multiple upkeeps can be registered on the\n same contract and easily differentiated by the contract.\n @return upkeepNeeded boolean to indicate whether the keeper should call\n performUpkeep or not.\n @return performData bytes that the keeper should call performUpkeep with, if\n upkeep is needed. If you would like to encode data to decode later, try\n `abi.encode`."
									},
									"functionSelector": "6e04ff0d",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "checkUpkeep",
									"nameLocation": "1151:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "checkData",
												"nameLocation": "1183:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1168:24:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 52,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1168:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1162:34:2"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "upkeepNeeded",
												"nameLocation": "1220:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1215:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1215:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "performData",
												"nameLocation": "1247:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1234:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 57,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1234:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1214:45:2"
									},
									"scope": 67,
									"src": "1142:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1264:1003:2",
										"text": " @notice method that is actually executed by the keepers, via the registry.\n The data returned by the checkUpkeep simulation will be passed into\n this method to actually be executed.\n @dev The input to this method should not be trusted, and the caller of the\n method should not even be restricted to any single registry. Anyone should\n be able call it, and the input should be validated, there is no guarantee\n that the data passed in is the performData returned from checkUpkeep. This\n could happen due to malicious keepers, racing keepers, or simply a state\n change while the performUpkeep transaction is waiting for confirmation.\n Always validate the data passed in.\n @param performData is the data which was passed back from the checkData\n simulation. If it is encoded, it can easily be decoded into other types by\n calling `abi.decode`. This data should not be trusted, and should be\n validated against the contract's current state."
									},
									"functionSelector": "4585e33b",
									"id": 66,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "performUpkeep",
									"nameLocation": "2279:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "performData",
												"nameLocation": "2313:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "2298:26:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 62,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2298:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2292:36:2"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2337:0:2"
									},
									"scope": 67,
									"src": "2270:68:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 68,
							"src": "110:2230:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:2309:2"
				},
				"id": 2
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							113
						]
					},
					"id": 114,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 69,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "67:21:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 74,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "102:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:3"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "136:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 71,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "136:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:7:3"
									},
									"scope": 113,
									"src": "93:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 79,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "156:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:3"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "193:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 76,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "193:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:15:3"
									},
									"scope": 113,
									"src": "147:61:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 84,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:3"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "254:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:3"
									},
									"scope": 113,
									"src": "212:51:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "276:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "301:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "294:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 85,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "294:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:25:3"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "344:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "337:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 88,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "360:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "353:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 90,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "353:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "376:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "368:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "395:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "387:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "413:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "406:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 96,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:93:3"
									},
									"scope": 113,
									"src": "267:163:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "443:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "458:2:3"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "503:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "496:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 101,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "496:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "519:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "512:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 103,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "512:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "535:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "527:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "554:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "546:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "572:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "565:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 109,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:93:3"
									},
									"scope": 113,
									"src": "434:155:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 114,
							"src": "57:534:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:560:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							250
						],
						"IERC20Errors": [
							155
						],
						"IERC721Errors": [
							203
						]
					},
					"id": 251,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 115,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 116,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:4",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 155,
							"linearizedBaseContracts": [
								155
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 125,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "654:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "670:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "687:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:4"
									},
									"src": "623:80:4"
								},
								{
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 130,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "891:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:4"
									},
									"src": "866:41:4"
								},
								{
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 135,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "1104:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:4"
									},
									"src": "1077:45:4"
								},
								{
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:4",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 144,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1511:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1528:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1547:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:4"
									},
									"src": "1478:85:4"
								},
								{
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 149,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1775:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:4"
									},
									"src": "1748:45:4"
								},
								{
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:4",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 154,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2025:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:4"
									},
									"src": "1999:43:4"
								}
							],
							"scope": 251,
							"src": "280:1764:4",
							"usedErrors": [
								125,
								130,
								135,
								144,
								149,
								154
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 156,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:4",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 203,
							"linearizedBaseContracts": [
								203
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:4",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 161,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "2469:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:4"
									},
									"src": "2444:40:4"
								},
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:4",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 166,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2656:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:4"
									},
									"src": "2627:46:4"
								},
								{
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:4",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 175,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "3000:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "3016:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "3033:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:4"
									},
									"src": "2973:75:4"
								},
								{
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 180,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "3237:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:4"
									},
									"src": "3211:42:4"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 185,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "3451:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:4"
									},
									"src": "3423:46:4"
								},
								{
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 192,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "3760:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "3778:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:4"
									},
									"src": "3727:68:4"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 197,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "4008:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:4"
									},
									"src": "3980:46:4"
								},
								{
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 202,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "4262:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:4"
									},
									"src": "4234:46:4"
								}
							],
							"scope": 251,
							"src": "2190:2092:4",
							"usedErrors": [
								161,
								166,
								175,
								180,
								185,
								192,
								197,
								202
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 204,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:4",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 250,
							"linearizedBaseContracts": [
								250
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 215,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "4860:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "4876:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "4893:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "4909:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:4"
									},
									"src": "4827:99:4"
								},
								{
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 220,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "5116:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:4"
									},
									"src": "5089:43:4"
								},
								{
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 225,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "5331:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:4"
									},
									"src": "5302:47:4"
								},
								{
									"documentation": {
										"id": 226,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 232,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "5651:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "5669:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:4"
									},
									"src": "5616:68:4"
								},
								{
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 237,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "5898:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:4"
									},
									"src": "5869:47:4"
								},
								{
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 242,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "6153:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:4"
									},
									"src": "6124:47:4"
								},
								{
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:4",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 249,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "6494:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "6513:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:4"
									},
									"src": "6462:73:4"
								}
							],
							"scope": 251,
							"src": "4430:2107:4",
							"usedErrors": [
								215,
								220,
								225,
								232,
								237,
								242,
								249
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							899
						],
						"ERC20": [
							765
						],
						"IERC20": [
							843
						],
						"IERC20Errors": [
							155
						],
						"IERC20Metadata": [
							869
						]
					},
					"id": 766,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 252,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 254,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 766,
							"sourceUnit": 844,
							"src": "131:36:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 253,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 843,
										"src": "139:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 256,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 766,
							"sourceUnit": 870,
							"src": "168:63:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 255,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 869,
										"src": "176:14:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 258,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 766,
							"sourceUnit": 900,
							"src": "232:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 257,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 899,
										"src": "240:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 260,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 766,
							"sourceUnit": 251,
							"src": "281:65:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 259,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 155,
										"src": "289:12:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 262,
										"name": "Context",
										"nameLocations": [
											"1133:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 899,
										"src": "1133:7:5"
									},
									"id": 263,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:5"
								},
								{
									"baseName": {
										"id": 264,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 843,
										"src": "1142:6:5"
									},
									"id": 265,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:5"
								},
								{
									"baseName": {
										"id": 266,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 869,
										"src": "1150:14:5"
									},
									"id": 267,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:5"
								},
								{
									"baseName": {
										"id": 268,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 155,
										"src": "1166:12:5"
									},
									"id": 269,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:5"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 261,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:5",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 765,
							"linearizedBaseContracts": [
								765,
								155,
								869,
								843,
								899
							],
							"name": "ERC20",
							"nameLocation": "1124:5:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 273,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 765,
									"src": "1185:53:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 272,
										"keyName": "account",
										"keyNameLocation": "1201:7:5",
										"keyType": {
											"id": 270,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 271,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 279,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 765,
									"src": "1245:83:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 278,
										"keyName": "account",
										"keyNameLocation": "1261:7:5",
										"keyType": {
											"id": 274,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 277,
											"keyName": "spender",
											"keyNameLocation": "1288:7:5",
											"keyType": {
												"id": 275,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 276,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 281,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 765,
									"src": "1335:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 280,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 283,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 765,
									"src": "1370:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 282,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 285,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 765,
									"src": "1396:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 284,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "1638:57:5",
										"statements": [
											{
												"expression": {
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 293,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "1648:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 294,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "1656:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:5"
											},
											{
												"expression": {
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 297,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 285,
														"src": "1671:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 298,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "1681:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:5"
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:5",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 302,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "1594:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 287,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "1615:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 289,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:5"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:5"
									},
									"scope": 765,
									"src": "1582:113:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										856
									],
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "1820:29:5",
										"statements": [
											{
												"expression": {
													"id": 308,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 283,
													"src": "1837:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 307,
												"id": 309,
												"nodeType": "Return",
												"src": "1830:12:5"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:5"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1805:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 305,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:5"
									},
									"scope": 765,
									"src": "1760:89:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										862
									],
									"body": {
										"id": 319,
										"nodeType": "Block",
										"src": "2024:31:5",
										"statements": [
											{
												"expression": {
													"id": 317,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 285,
													"src": "2041:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 316,
												"id": 318,
												"nodeType": "Return",
												"src": "2034:14:5"
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:5",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:5"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "2009:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 314,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:5"
									},
									"scope": 765,
									"src": "1962:93:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										868
									],
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "2744:26:5",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 325,
												"id": 327,
												"nodeType": "Return",
												"src": "2754:9:5"
											}
										]
									},
									"documentation": {
										"id": 321,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:5",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:5"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "2737:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 323,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:5"
									},
									"scope": 765,
									"src": "2688:82:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										792
									],
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "2864:36:5",
										"statements": [
											{
												"expression": {
													"id": 335,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 281,
													"src": "2881:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 334,
												"id": 336,
												"nodeType": "Return",
												"src": "2874:19:5"
											}
										]
									},
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "2776:22:5",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "18160ddd",
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2812:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2823:2:5"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "2855:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2854:9:5"
									},
									"scope": 765,
									"src": "2803:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										800
									],
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "3007:42:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 346,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "3024:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 348,
													"indexExpression": {
														"id": 347,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "3034:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3024:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 345,
												"id": 349,
												"nodeType": "Return",
												"src": "3017:25:5"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "2906:22:5",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "70a08231",
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2942:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2960:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "2952:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:17:5"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "2998:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:9:5"
									},
									"scope": 765,
									"src": "2933:116:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										810
									],
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "3319:103:5",
										"statements": [
											{
												"assignments": [
													362
												],
												"declarations": [
													{
														"constant": false,
														"id": 362,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3337:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 374,
														"src": "3329:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 361,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3329:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 365,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 363,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "3345:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3345:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3329:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 367,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "3377:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 368,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "3384:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 369,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "3388:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 366,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "3367:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3367:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "3367:27:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3411:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 360,
												"id": 373,
												"nodeType": "Return",
												"src": "3404:11:5"
											}
										]
									},
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "3055:184:5",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3253:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3270:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "3262:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3262:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3282:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "3274:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3261:27:5"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "3313:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 358,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3313:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:6:5"
									},
									"scope": 765,
									"src": "3244:178:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										820
									],
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "3544:51:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 385,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "3561:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 387,
														"indexExpression": {
															"id": 386,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "3573:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3561:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 389,
													"indexExpression": {
														"id": 388,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 380,
														"src": "3580:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3561:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 384,
												"id": 390,
												"nodeType": "Return",
												"src": "3554:34:5"
											}
										]
									},
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "3428:22:5",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "dd62ed3e",
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3464:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3482:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "3474:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3497:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "3489:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:32:5"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "3535:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3535:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3534:9:5"
									},
									"scope": 765,
									"src": "3455:140:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										830
									],
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "3981:107:5",
										"statements": [
											{
												"assignments": [
													403
												],
												"declarations": [
													{
														"constant": false,
														"id": 403,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3999:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "3991:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 402,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3991:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 406,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 404,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "4007:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4007:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3991:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 408,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "4038:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 409,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "4045:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 410,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "4054:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 407,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															656,
															716
														],
														"referencedDeclaration": 656,
														"src": "4029:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4029:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "4029:31:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4077:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 401,
												"id": 414,
												"nodeType": "Return",
												"src": "4070:11:5"
											}
										]
									},
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "3601:296:5",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3911:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3927:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "3919:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3944:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "3936:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3918:32:5"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "3975:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 399,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3975:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:6:5"
									},
									"scope": 765,
									"src": "3902:186:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										842
									],
									"body": {
										"id": 447,
										"nodeType": "Block",
										"src": "4773:151:5",
										"statements": [
											{
												"assignments": [
													429
												],
												"declarations": [
													{
														"constant": false,
														"id": 429,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4791:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 447,
														"src": "4783:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 428,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4783:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 432,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 430,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "4801:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4783:30:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 434,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "4839:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 435,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4845:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 436,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "4854:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 433,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "4823:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "4823:37:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 440,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "4880:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 441,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "4886:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "4890:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 439,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "4870:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4870:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "4870:26:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4913:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 427,
												"id": 446,
												"nodeType": "Return",
												"src": "4906:11:5"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "4094:581:5",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4689:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4710:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "4702:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4724:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "4716:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4716:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4736:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "4728:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4728:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:41:5"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "4767:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 425,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4767:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4766:6:5"
									},
									"scope": 765,
									"src": "4680:244:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 494,
										"nodeType": "Block",
										"src": "5366:231:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 458,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "5380:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5396:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5388:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 459,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5388:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5388:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5380:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 472,
												"nodeType": "IfStatement",
												"src": "5376:86:5",
												"trueBody": {
													"id": 471,
													"nodeType": "Block",
													"src": "5400:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 467,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5448:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5440:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 465,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5440:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5440:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 464,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "5421:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5421:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 470,
															"nodeType": "RevertStatement",
															"src": "5414:37:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 473,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "5475:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5489:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5481:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 474,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5481:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 477,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5481:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5475:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 487,
												"nodeType": "IfStatement",
												"src": "5471:86:5",
												"trueBody": {
													"id": 486,
													"nodeType": "Block",
													"src": "5493:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 482,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5543:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 481,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5535:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 480,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5535:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5535:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 479,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "5514:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5514:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 485,
															"nodeType": "RevertStatement",
															"src": "5507:39:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 489,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "5574:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 490,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5580:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 491,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5584:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 488,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "5566:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5566:24:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "5566:24:5"
											}
										]
									},
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "4930:362:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5306:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5324:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "5316:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5338:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "5330:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5330:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "5342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:41:5"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5366:0:5"
									},
									"scope": 765,
									"src": "5297:300:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "5987:1032:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 505,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "6001:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6017:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6009:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 506,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6009:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6009:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6001:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 542,
													"nodeType": "Block",
													"src": "6175:362:5",
													"statements": [
														{
															"assignments": [
																517
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 517,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6197:11:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 542,
																	"src": "6189:19:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 516,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6189:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 521,
															"initialValue": {
																"baseExpression": {
																	"id": 518,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 273,
																	"src": "6211:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 520,
																"indexExpression": {
																	"id": 519,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 498,
																	"src": "6221:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6211:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6189:37:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 524,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 522,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 517,
																	"src": "6244:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 523,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 502,
																	"src": "6258:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6244:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 532,
															"nodeType": "IfStatement",
															"src": "6240:115:5",
															"trueBody": {
																"id": 531,
																"nodeType": "Block",
																"src": "6265:90:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 526,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 498,
																					"src": "6315:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 527,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 517,
																					"src": "6321:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 528,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 502,
																					"src": "6334:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 525,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 125,
																				"src": "6290:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 529,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6290:50:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 530,
																		"nodeType": "RevertStatement",
																		"src": "6283:57:5"
																	}
																]
															}
														},
														{
															"id": 541,
															"nodeType": "UncheckedBlock",
															"src": "6368:159:5",
															"statements": [
																{
																	"expression": {
																		"id": 539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 533,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 273,
																				"src": "6475:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 535,
																			"indexExpression": {
																				"id": 534,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 498,
																				"src": "6485:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6475:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 538,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 536,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 517,
																				"src": "6493:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 537,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 502,
																				"src": "6507:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6493:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6475:37:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 540,
																	"nodeType": "ExpressionStatement",
																	"src": "6475:37:5"
																}
															]
														}
													]
												},
												"id": 543,
												"nodeType": "IfStatement",
												"src": "5997:540:5",
												"trueBody": {
													"id": 515,
													"nodeType": "Block",
													"src": "6021:148:5",
													"statements": [
														{
															"expression": {
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 511,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 281,
																	"src": "6137:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 512,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 502,
																	"src": "6153:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6137:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 514,
															"nodeType": "ExpressionStatement",
															"src": "6137:21:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 544,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "6551:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6565:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6557:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 545,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6557:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 548,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6557:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6551:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 563,
													"nodeType": "Block",
													"src": "6766:206:5",
													"statements": [
														{
															"id": 562,
															"nodeType": "UncheckedBlock",
															"src": "6780:182:5",
															"statements": [
																{
																	"expression": {
																		"id": 560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 556,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 273,
																				"src": "6925:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 558,
																			"indexExpression": {
																				"id": 557,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 500,
																				"src": "6935:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6925:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 559,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 502,
																			"src": "6942:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6925:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 561,
																	"nodeType": "ExpressionStatement",
																	"src": "6925:22:5"
																}
															]
														}
													]
												},
												"id": 564,
												"nodeType": "IfStatement",
												"src": "6547:425:5",
												"trueBody": {
													"id": 555,
													"nodeType": "Block",
													"src": "6569:191:5",
													"statements": [
														{
															"id": 554,
															"nodeType": "UncheckedBlock",
															"src": "6583:167:5",
															"statements": [
																{
																	"expression": {
																		"id": 552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 550,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 281,
																			"src": "6714:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 551,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 502,
																			"src": "6730:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6714:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 553,
																	"nodeType": "ExpressionStatement",
																	"src": "6714:21:5"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 566,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "6996:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 567,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 500,
															"src": "7002:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 568,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "7006:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 565,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "6987:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6987:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "EmitStatement",
												"src": "6982:30:5"
											}
										]
									},
									"documentation": {
										"id": 496,
										"nodeType": "StructuredDocumentation",
										"src": "5603:304:5",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5921:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5937:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "5929:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5929:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5951:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "5943:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5943:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5963:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "5955:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5928:41:5"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5987:0:5"
									},
									"scope": 765,
									"src": "5912:1107:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "7418:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 580,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "7432:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7451:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7443:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 581,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7443:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 584,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7443:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7432:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 594,
												"nodeType": "IfStatement",
												"src": "7428:91:5",
												"trueBody": {
													"id": 593,
													"nodeType": "Block",
													"src": "7455:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 589,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7505:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 588,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7497:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 587,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7497:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7497:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 586,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "7476:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7476:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 592,
															"nodeType": "RevertStatement",
															"src": "7469:39:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7544:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7536:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 596,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7536:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7536:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 600,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "7548:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "7557:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 595,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "7528:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7528:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 603,
												"nodeType": "ExpressionStatement",
												"src": "7528:35:5"
											}
										]
									},
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "7025:332:5",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7371:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7385:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "7377:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7377:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7402:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "7394:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7394:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:32:5"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7418:0:5"
									},
									"scope": 765,
									"src": "7362:208:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 637,
										"nodeType": "Block",
										"src": "7944:150:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 613,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "7958:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7977:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7969:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 614,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7969:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 617,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7969:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7958:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 627,
												"nodeType": "IfStatement",
												"src": "7954:89:5",
												"trueBody": {
													"id": 626,
													"nodeType": "Block",
													"src": "7981:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 622,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8029:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8021:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 620,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8021:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8021:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 619,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "8002:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8002:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 625,
															"nodeType": "RevertStatement",
															"src": "7995:37:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 629,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "8060:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8077:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8069:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8069:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8069:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "8081:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 628,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "8052:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8052:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "8052:35:5"
											}
										]
									},
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "7576:307:5",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7897:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7911:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "7903:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7903:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7928:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "7920:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7920:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7902:32:5"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7944:0:5"
									},
									"scope": 765,
									"src": "7888:206:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "8704:54:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 649,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "8723:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 650,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "8730:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 651,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "8739:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8746:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 648,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															656,
															716
														],
														"referencedDeclaration": 716,
														"src": "8714:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8714:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 654,
												"nodeType": "ExpressionStatement",
												"src": "8714:37:5"
											}
										]
									},
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "8100:525:5",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8639:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8656:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "8648:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8648:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8671:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "8663:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8663:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8688:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "8680:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8680:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8647:47:5"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8704:0:5"
									},
									"scope": 765,
									"src": "8630:128:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 715,
										"nodeType": "Block",
										"src": "9703:334:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 668,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 659,
														"src": "9717:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9734:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9726:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 669,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9726:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 672,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9726:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9717:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 682,
												"nodeType": "IfStatement",
												"src": "9713:89:5",
												"trueBody": {
													"id": 681,
													"nodeType": "Block",
													"src": "9738:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 677,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9788:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 676,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9780:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 675,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9780:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9780:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 674,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 149,
																	"src": "9759:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9759:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 680,
															"nodeType": "RevertStatement",
															"src": "9752:39:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 683,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "9815:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 686,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9834:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9826:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 684,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9826:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 687,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9826:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9815:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 697,
												"nodeType": "IfStatement",
												"src": "9811:90:5",
												"trueBody": {
													"id": 696,
													"nodeType": "Block",
													"src": "9838:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 692,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9887:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 691,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9879:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 690,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9879:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9879:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 689,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 154,
																	"src": "9859:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9859:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 695,
															"nodeType": "RevertStatement",
															"src": "9852:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 698,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 279,
																"src": "9910:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 701,
															"indexExpression": {
																"id": 699,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "9922:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9910:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 702,
														"indexExpression": {
															"id": 700,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "9929:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9910:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 703,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "9940:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9910:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 705,
												"nodeType": "ExpressionStatement",
												"src": "9910:35:5"
											},
											{
												"condition": {
													"id": 706,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 665,
													"src": "9959:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 714,
												"nodeType": "IfStatement",
												"src": "9955:76:5",
												"trueBody": {
													"id": 713,
													"nodeType": "Block",
													"src": "9970:61:5",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 708,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 659,
																		"src": "9998:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 709,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 661,
																		"src": "10005:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 710,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 663,
																		"src": "10014:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 707,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 786,
																	"src": "9989:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 711,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9989:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 712,
															"nodeType": "EmitStatement",
															"src": "9984:36:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "8764:836:5",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9614:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9631:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "9623:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9623:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9646:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "9638:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9638:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9663:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "9655:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9655:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9675:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "9670:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 664,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9670:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9622:63:5"
									},
									"returnParameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9703:0:5"
									},
									"scope": 765,
									"src": "9605:432:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "10408:387:5",
										"statements": [
											{
												"assignments": [
													727
												],
												"declarations": [
													{
														"constant": false,
														"id": 727,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10426:16:5",
														"nodeType": "VariableDeclaration",
														"scope": 763,
														"src": "10418:24:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 726,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10418:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 732,
												"initialValue": {
													"arguments": [
														{
															"id": 729,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "10455:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 730,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "10462:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 728,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "10445:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10445:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10418:52:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 733,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 727,
														"src": "10484:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10508:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 735,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10508:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 734,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10503:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10503:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 738,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10517:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10503:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10484:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 762,
												"nodeType": "IfStatement",
												"src": "10480:309:5",
												"trueBody": {
													"id": 761,
													"nodeType": "Block",
													"src": "10522:267:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 740,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 727,
																	"src": "10540:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 741,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "10559:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10540:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 750,
															"nodeType": "IfStatement",
															"src": "10536:130:5",
															"trueBody": {
																"id": 749,
																"nodeType": "Block",
																"src": "10566:100:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 744,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 721,
																					"src": "10618:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 745,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 727,
																					"src": "10627:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 746,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 723,
																					"src": "10645:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 743,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 144,
																				"src": "10591:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10591:60:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 748,
																		"nodeType": "RevertStatement",
																		"src": "10584:67:5"
																	}
																]
															}
														},
														{
															"id": 760,
															"nodeType": "UncheckedBlock",
															"src": "10679:100:5",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 752,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 719,
																				"src": "10716:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 753,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 721,
																				"src": "10723:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 756,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 754,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 727,
																					"src": "10732:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 755,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 723,
																					"src": "10751:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10732:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 757,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10758:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 751,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				656,
																				716
																			],
																			"referencedDeclaration": 716,
																			"src": "10707:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10707:57:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 759,
																	"nodeType": "ExpressionStatement",
																	"src": "10707:57:5"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "10043:271:5",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10328:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10352:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "10344:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10344:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10367:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "10359:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10359:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10384:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "10376:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10376:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10343:47:5"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10408:0:5"
									},
									"scope": 765,
									"src": "10319:476:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 766,
							"src": "1106:9691:5",
							"usedErrors": [
								125,
								130,
								135,
								144,
								149,
								154
							],
							"usedEvents": [
								777,
								786
							]
						}
					],
					"src": "105:10693:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							843
						]
					},
					"id": 844,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 767,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 768,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:6",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 843,
							"linearizedBaseContracts": [
								843
							],
							"name": "IERC20",
							"nameLocation": "215:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 769,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 777,
									"name": "Transfer",
									"nameLocation": "397:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "406:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "428:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 775,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "448:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:6"
									},
									"src": "391:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 786,
									"name": "Approval",
									"nameLocation": "628:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "637:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "660:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "685:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:6"
									},
									"src": "622:78:6"
								},
								{
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:6",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 792,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:6"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "822:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:6"
									},
									"scope": 843,
									"src": "776:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:6",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 800,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "932:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:6"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "972:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:6"
									},
									"scope": 843,
									"src": "913:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 801,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:6",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 810,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "1223:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "1235:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:6"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "1268:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 807,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:6"
									},
									"scope": 843,
									"src": "1205:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 820,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "1568:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "1583:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:6"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "1623:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:6"
									},
									"scope": 843,
									"src": "1549:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:6",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 830,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "2327:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "2344:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:6"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "2377:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 827,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:6"
									},
									"scope": 843,
									"src": "2310:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 831,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:6",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 842,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "2713:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "2727:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "2739:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:6"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "2772:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 839,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:6"
									},
									"scope": 843,
									"src": "2691:87:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 844,
							"src": "205:2575:6",
							"usedErrors": [],
							"usedEvents": [
								777,
								786
							]
						}
					],
					"src": "106:2675:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							843
						],
						"IERC20Metadata": [
							869
						]
					},
					"id": 870,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 845,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 847,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 870,
							"sourceUnit": 844,
							"src": "151:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 846,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 843,
										"src": "159:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 849,
										"name": "IERC20",
										"nameLocations": [
											"306:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 843,
										"src": "306:6:7"
									},
									"id": 850,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:7"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 848,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:7",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 869,
							"linearizedBaseContracts": [
								869,
								843
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:7",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 856,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:7"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "417:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 853,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:7"
									},
									"scope": 869,
									"src": "378:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 857,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:7",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 862,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:7"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "540:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 859,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:7"
									},
									"scope": 869,
									"src": "499:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:7",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 868,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:7"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "674:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 865,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:7"
									},
									"scope": 869,
									"src": "631:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 870,
							"src": "278:405:7",
							"usedErrors": [],
							"usedEvents": [
								777,
								786
							]
						}
					],
					"src": "125:559:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							899
						]
					},
					"id": 900,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 871,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 872,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 899,
							"linearizedBaseContracts": [
								899
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 880,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 877,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 876,
												"id": 879,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 881,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 899,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 889,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 886,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 885,
												"id": 888,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 883,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 899,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 894,
												"id": 896,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 899,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 900,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"TavsStable.sol": {
				"ast": {
					"absolutePath": "TavsStable.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							113
						],
						"AutomationCompatibleInterface": [
							67
						],
						"Context": [
							899
						],
						"ERC20": [
							765
						],
						"IERC20": [
							843
						],
						"IERC20Errors": [
							155
						],
						"IERC20Metadata": [
							869
						],
						"TAVSStable": [
							1494
						]
					},
					"id": 1495,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 901,
							"literals": [
								"solidity",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 902,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1495,
							"sourceUnit": 766,
							"src": "62:55:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"id": 903,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1495,
							"sourceUnit": 114,
							"src": "119:76:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol",
							"file": "@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol",
							"id": 905,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1495,
							"sourceUnit": 49,
							"src": "197:112:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 904,
										"name": "AutomationCompatibleInterface",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 67,
										"src": "205:29:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 906,
										"name": "ERC20",
										"nameLocations": [
											"336:5:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 765,
										"src": "336:5:9"
									},
									"id": 907,
									"nodeType": "InheritanceSpecifier",
									"src": "336:5:9"
								},
								{
									"baseName": {
										"id": 908,
										"name": "AutomationCompatibleInterface",
										"nameLocations": [
											"343:29:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 67,
										"src": "343:29:9"
									},
									"id": 909,
									"nodeType": "InheritanceSpecifier",
									"src": "343:29:9"
								}
							],
							"canonicalName": "TAVSStable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1494,
							"linearizedBaseContracts": [
								1494,
								67,
								765,
								155,
								869,
								843,
								899
							],
							"name": "TAVSStable",
							"nameLocation": "322:10:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "741bef1a",
									"id": 912,
									"mutability": "mutable",
									"name": "priceFeed",
									"nameLocation": "411:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 1494,
									"src": "382:38:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$113",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 911,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 910,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"382:21:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 113,
											"src": "382:21:9"
										},
										"referencedDeclaration": 113,
										"src": "382:21:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$113",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d9e69a05",
									"id": 915,
									"mutability": "constant",
									"name": "COLLATERAL_RATIO",
									"nameLocation": "453:16:9",
									"nodeType": "VariableDeclaration",
									"scope": 1494,
									"src": "429:46:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 913,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "429:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313530",
										"id": 914,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "472:3:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_150_by_1",
											"typeString": "int_const 150"
										},
										"value": "150"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "75b1475d",
									"id": 918,
									"mutability": "constant",
									"name": "DATAFEED_PRICE_DECIMALS",
									"nameLocation": "527:23:9",
									"nodeType": "VariableDeclaration",
									"scope": 1494,
									"src": "503:51:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 916,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "503:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "38",
										"id": 917,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "553:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_8_by_1",
											"typeString": "int_const 8"
										},
										"value": "8"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e36b72c6",
									"id": 921,
									"mutability": "constant",
									"name": "DECIMALS_FACTOR",
									"nameLocation": "614:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 1494,
									"src": "590:45:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 919,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "590:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 920,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "632:3:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6c09395e",
									"id": 923,
									"mutability": "mutable",
									"name": "liquidationAddress",
									"nameLocation": "692:18:9",
									"nodeType": "VariableDeclaration",
									"scope": 1494,
									"src": "677:33:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 922,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "677:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "TAVSStable.Position",
									"id": 928,
									"members": [
										{
											"constant": false,
											"id": 925,
											"mutability": "mutable",
											"name": "collateralETH",
											"nameLocation": "784:13:9",
											"nodeType": "VariableDeclaration",
											"scope": 928,
											"src": "776:21:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 924,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "776:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 927,
											"mutability": "mutable",
											"name": "stablecoinDebt",
											"nameLocation": "841:14:9",
											"nodeType": "VariableDeclaration",
											"scope": 928,
											"src": "833:22:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 926,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "833:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Position",
									"nameLocation": "756:8:9",
									"nodeType": "StructDefinition",
									"scope": 1494,
									"src": "749:163:9",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "55f57510",
									"id": 933,
									"mutability": "mutable",
									"name": "positions",
									"nameLocation": "954:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 1494,
									"src": "918:45:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Position_$928_storage_$",
										"typeString": "mapping(address => struct TAVSStable.Position)"
									},
									"typeName": {
										"id": 932,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 929,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "926:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "918:28:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Position_$928_storage_$",
											"typeString": "mapping(address => struct TAVSStable.Position)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 931,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 930,
												"name": "Position",
												"nameLocations": [
													"937:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 928,
												"src": "937:8:9"
											},
											"referencedDeclaration": 928,
											"src": "937:8:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Position_$928_storage_ptr",
												"typeString": "struct TAVSStable.Position"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "365b98b2",
									"id": 936,
									"mutability": "mutable",
									"name": "users",
									"nameLocation": "987:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 1494,
									"src": "970:22:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 934,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "970:7:9",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 935,
										"nodeType": "ArrayTypeName",
										"src": "970:9:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 940,
									"mutability": "mutable",
									"name": "userExists",
									"nameLocation": "1091:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1494,
									"src": "1058:43:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 939,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 937,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1066:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1058:24:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 938,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1077:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15",
									"id": 948,
									"name": "Deposit",
									"nameLocation": "1116:7:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1140:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "1124:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1124:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"indexed": false,
												"mutability": "mutable",
												"name": "ethAmount",
												"nameLocation": "1154:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "1146:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1146:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"indexed": false,
												"mutability": "mutable",
												"name": "mintAmount",
												"nameLocation": "1174:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "1166:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1166:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1123:62:9"
									},
									"src": "1110:76:9"
								},
								{
									"anonymous": false,
									"eventSelector": "49995e5dd6158cf69ad3e9777c46755a1a826a446c6416992167462dad033b2a",
									"id": 956,
									"name": "Burn",
									"nameLocation": "1256:4:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1277:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "1261:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1261:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"indexed": false,
												"mutability": "mutable",
												"name": "burnAmount",
												"nameLocation": "1291:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "1283:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"indexed": false,
												"mutability": "mutable",
												"name": "ethReturned",
												"nameLocation": "1311:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "1303:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1303:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:63:9"
									},
									"src": "1250:74:9"
								},
								{
									"anonymous": false,
									"eventSelector": "a5ee7a2b0254fce91deed604506790ed7fa072d0b14cba4859c3bc8955b9caac",
									"id": 962,
									"name": "Liquidated",
									"nameLocation": "1387:10:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1414:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1398:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1398:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"indexed": false,
												"mutability": "mutable",
												"name": "collateralSeized",
												"nameLocation": "1428:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1420:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1420:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1397:48:9"
									},
									"src": "1381:65:9"
								},
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "1545:533:9",
										"statements": [
											{
												"assignments": [
													971
												],
												"declarations": [
													{
														"constant": false,
														"id": 971,
														"mutability": "mutable",
														"name": "_priceFeedAddress",
														"nameLocation": "1752:17:9",
														"nodeType": "VariableDeclaration",
														"scope": 989,
														"src": "1744:25:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 970,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1744:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"documentation": " Network: Ethereum Sepolia\n Aggregator: ETH/USD\n Other Data Feeds:\nhttps://docs.chain.link/data-feeds/price-feeds/addresses",
												"id": 973,
												"initialValue": {
													"hexValue": "307836393441413137363933353732313544453446414330383162663166333039614443333235333036",
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1772:42:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"value": "0x694AA1769357215DE4FAC081bf1f309aDC325306"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1744:70:9"
											},
											{
												"expression": {
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 974,
														"name": "priceFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "1825:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$113",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 976,
																"name": "_priceFeedAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 971,
																"src": "1859:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 975,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "1837:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$113_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 977,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1837:40:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$113",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "1825:52:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$113",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 979,
												"nodeType": "ExpressionStatement",
												"src": "1825:52:9"
											},
											{
												"assignments": [
													981
												],
												"declarations": [
													{
														"constant": false,
														"id": 981,
														"mutability": "mutable",
														"name": "_liquidationAddress",
														"nameLocation": "1987:19:9",
														"nodeType": "VariableDeclaration",
														"scope": 989,
														"src": "1979:27:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 980,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1979:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 984,
												"initialValue": {
													"expression": {
														"id": 982,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2009:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2013:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2009:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1979:40:9"
											},
											{
												"expression": {
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 985,
														"name": "liquidationAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "2030:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 986,
														"name": "_liquidationAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "2051:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2030:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "2030:40:9"
											}
										]
									},
									"id": 990,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5441565320537461626c65",
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1521:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_19b9d6e1aa29bb070909236662c7e63cdc215644dd83712c9d4afd446f1b4e18",
														"typeString": "literal_string \"TAVS Stable\""
													},
													"value": "TAVS Stable"
												},
												{
													"hexValue": "5441565354",
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1536:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_67bdbbf9010b1fda926242c89330f0cdd5f13c2b5d435735fb18582788d0ba72",
														"typeString": "literal_string \"TAVST\""
													},
													"value": "TAVST"
												}
											],
											"id": 967,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 964,
												"name": "ERC20",
												"nameLocations": [
													"1515:5:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 765,
												"src": "1515:5:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1515:29:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1512:2:9"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1545:0:9"
									},
									"scope": 1494,
									"src": "1501:577:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										329
									],
									"body": {
										"id": 998,
										"nodeType": "Block",
										"src": "2143:27:9",
										"statements": [
											{
												"expression": {
													"hexValue": "32",
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2161:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_2_by_1",
														"typeString": "int_const 2"
													},
													"value": "2"
												},
												"functionReturnParameters": 995,
												"id": 997,
												"nodeType": "Return",
												"src": "2154:8:9"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2095:8:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 992,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2118:8:9"
									},
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2103:2:9"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "2136:5:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 993,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2136:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2135:7:9"
									},
									"scope": 1494,
									"src": "2086:84:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1040,
										"nodeType": "Block",
										"src": "2255:457:9",
										"statements": [
											{
												"assignments": [
													1007
												],
												"declarations": [
													{
														"constant": false,
														"id": 1007,
														"mutability": "mutable",
														"name": "ethPrice",
														"nameLocation": "2355:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 1040,
														"src": "2347:16:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1006,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2347:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1010,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1008,
														"name": "getLatestPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1265,
														"src": "2366:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2366:16:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2347:35:9"
											},
											{
												"assignments": [
													1012
												],
												"declarations": [
													{
														"constant": false,
														"id": 1012,
														"mutability": "mutable",
														"name": "DECIMALS",
														"nameLocation": "2436:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 1040,
														"src": "2428:16:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1011,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2428:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1020,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 1013,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2447:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1016,
																	"name": "decimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		999
																	],
																	"referencedDeclaration": 999,
																	"src": "2461:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint8_$",
																		"typeString": "function () pure returns (uint8)"
																	}
																},
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2461:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2453:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1014,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2453:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1018,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2453:19:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2447:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2428:44:9"
											},
											{
												"assignments": [
													1022
												],
												"declarations": [
													{
														"constant": false,
														"id": 1022,
														"mutability": "mutable",
														"name": "ethValueInUSD",
														"nameLocation": "2491:13:9",
														"nodeType": "VariableDeclaration",
														"scope": 1040,
														"src": "2483:21:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1021,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2483:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1033,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1030,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1025,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1023,
																			"name": "ethAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1001,
																			"src": "2508:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1024,
																			"name": "ethPrice",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1007,
																			"src": "2520:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2508:20:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1026,
																		"name": "DECIMALS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1012,
																		"src": "2531:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2508:31:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1028,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2507:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "316538",
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2543:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100000000_by_1",
																"typeString": "int_const 100000000"
															},
															"value": "1e8"
														},
														"src": "2507:39:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 1031,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2549:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "2507:46:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2483:70:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1034,
															"name": "ethValueInUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "2610:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "313030",
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "2610:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1037,
														"name": "COLLATERAL_RATIO",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "2632:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2610:38:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1005,
												"id": 1039,
												"nodeType": "Return",
												"src": "2603:45:9"
											}
										]
									},
									"functionSelector": "b5fbc7a0",
									"id": 1041,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "estimateMintAmount",
									"nameLocation": "2187:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "ethAmount",
												"nameLocation": "2214:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "2206:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2205:19:9"
									},
									"returnParameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "2246:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2246:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2245:9:9"
									},
									"scope": 1494,
									"src": "2178:534:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1120,
										"nodeType": "Block",
										"src": "2799:655:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1045,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2818:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2822:5:9",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2818:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2830:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2818:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d757374206465706f73697420455448",
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2833:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50f00e964d5ac3dac66b67fc2e4625a9ccdc3847ded815dc2ac958369f46a7c1",
																"typeString": "literal_string \"Must deposit ETH\""
															},
															"value": "Must deposit ETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50f00e964d5ac3dac66b67fc2e4625a9ccdc3847ded815dc2ac958369f46a7c1",
																"typeString": "literal_string \"Must deposit ETH\""
															}
														],
														"id": 1044,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2810:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2810:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "2810:42:9"
											},
											{
												"assignments": [
													1053
												],
												"declarations": [
													{
														"constant": false,
														"id": 1053,
														"mutability": "mutable",
														"name": "mintAmount",
														"nameLocation": "2881:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1120,
														"src": "2873:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1052,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2873:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1058,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1055,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2913:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2917:5:9",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2913:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1054,
														"name": "estimateMintAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1041,
														"src": "2894:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2894:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2873:50:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1060,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2941:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2945:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2941:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1062,
															"name": "mintAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "2953:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1059,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 605,
														"src": "2935:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2935:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "2935:29:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1065,
																"name": "positions",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 933,
																"src": "2981:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Position_$928_storage_$",
																	"typeString": "mapping(address => struct TAVSStable.Position storage ref)"
																}
															},
															"id": 1068,
															"indexExpression": {
																"expression": {
																	"id": 1066,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2991:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2995:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2991:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2981:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Position_$928_storage",
																"typeString": "struct TAVSStable.Position storage ref"
															}
														},
														"id": 1069,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3003:13:9",
														"memberName": "collateralETH",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 925,
														"src": "2981:35:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1070,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3020:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2981:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1094,
												"nodeType": "IfStatement",
												"src": "2977:204:9",
												"trueBody": {
													"id": 1093,
													"nodeType": "Block",
													"src": "3022:159:9",
													"statements": [
														{
															"condition": {
																"id": 1076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "3040:23:9",
																"subExpression": {
																	"baseExpression": {
																		"id": 1072,
																		"name": "userExists",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 940,
																		"src": "3041:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1075,
																	"indexExpression": {
																		"expression": {
																			"id": 1073,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3052:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3056:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3052:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3041:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1092,
															"nodeType": "IfStatement",
															"src": "3037:133:9",
															"trueBody": {
																"id": 1091,
																"nodeType": "Block",
																"src": "3065:105:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1080,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "3095:3:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1081,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3099:6:9",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "3095:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 1077,
																					"name": "users",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 936,
																					"src": "3084:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1079,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3090:4:9",
																				"memberName": "push",
																				"nodeType": "MemberAccess",
																				"src": "3084:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																					"typeString": "function (address[] storage pointer,address)"
																				}
																			},
																			"id": 1082,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3084:22:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1083,
																		"nodeType": "ExpressionStatement",
																		"src": "3084:22:9"
																	},
																	{
																		"expression": {
																			"id": 1089,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1084,
																					"name": "userExists",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 940,
																					"src": "3125:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																						"typeString": "mapping(address => bool)"
																					}
																				},
																				"id": 1087,
																				"indexExpression": {
																					"expression": {
																						"id": 1085,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "3136:3:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1086,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3140:6:9",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "3136:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3125:22:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 1088,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3150:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "3125:29:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1090,
																		"nodeType": "ExpressionStatement",
																		"src": "3125:29:9"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1095,
																"name": "positions",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 933,
																"src": "3193:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Position_$928_storage_$",
																	"typeString": "mapping(address => struct TAVSStable.Position storage ref)"
																}
															},
															"id": 1098,
															"indexExpression": {
																"expression": {
																	"id": 1096,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3203:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3207:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3203:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3193:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Position_$928_storage",
																"typeString": "struct TAVSStable.Position storage ref"
															}
														},
														"id": 1099,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3215:13:9",
														"memberName": "collateralETH",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 925,
														"src": "3193:35:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 1100,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3232:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3236:5:9",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "3232:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3193:48:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1103,
												"nodeType": "ExpressionStatement",
												"src": "3193:48:9"
											},
											{
												"expression": {
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1104,
																"name": "positions",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 933,
																"src": "3286:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Position_$928_storage_$",
																	"typeString": "mapping(address => struct TAVSStable.Position storage ref)"
																}
															},
															"id": 1107,
															"indexExpression": {
																"expression": {
																	"id": 1105,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3296:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3300:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3296:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3286:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Position_$928_storage",
																"typeString": "struct TAVSStable.Position storage ref"
															}
														},
														"id": 1108,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3308:14:9",
														"memberName": "stablecoinDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 927,
														"src": "3286:36:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1109,
														"name": "mintAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "3326:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3286:50:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1111,
												"nodeType": "ExpressionStatement",
												"src": "3286:50:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1113,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3391:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3395:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3391:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1115,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3403:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3407:5:9",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "3403:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1117,
															"name": "mintAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "3414:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1112,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "3383:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3383:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1119,
												"nodeType": "EmitStatement",
												"src": "3378:47:9"
											}
										]
									},
									"functionSelector": "663837db",
									"id": 1121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositAndMint",
									"nameLocation": "2765:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2779:2:9"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2799:0:9"
									},
									"scope": 1494,
									"src": "2756:698:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1169,
										"nodeType": "Block",
										"src": "3541:633:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1129,
																"name": "burnAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1123,
																"src": "3560:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3573:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3560:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3576:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 1128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3552:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3552:56:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "3552:56:9"
											},
											{
												"assignments": [
													1136
												],
												"declarations": [
													{
														"constant": false,
														"id": 1136,
														"mutability": "mutable",
														"name": "ethPrice",
														"nameLocation": "3627:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 1169,
														"src": "3619:16:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1135,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3619:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1139,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1137,
														"name": "getLatestPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1265,
														"src": "3638:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3638:16:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3619:35:9"
											},
											{
												"assignments": [
													1141
												],
												"declarations": [
													{
														"constant": false,
														"id": 1141,
														"mutability": "mutable",
														"name": "burnUSD",
														"nameLocation": "3750:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1169,
														"src": "3742:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1140,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3742:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1148,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1142,
																	"name": "burnAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1123,
																	"src": "3761:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31653138",
																	"id": 1143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3774:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "3761:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1145,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3760:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1146,
														"name": "DECIMALS_FACTOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "3782:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3760:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3742:55:9"
											},
											{
												"assignments": [
													1150
												],
												"declarations": [
													{
														"constant": false,
														"id": 1150,
														"mutability": "mutable",
														"name": "collateralUSD",
														"nameLocation": "3932:13:9",
														"nodeType": "VariableDeclaration",
														"scope": 1169,
														"src": "3924:21:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1149,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3924:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1157,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1151,
																	"name": "burnUSD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1141,
																	"src": "3949:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1152,
																	"name": "COLLATERAL_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "3959:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3949:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1154,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3948:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1155,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3979:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "3948:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3924:58:9"
											},
											{
												"assignments": [
													1159
												],
												"declarations": [
													{
														"constant": false,
														"id": 1159,
														"mutability": "mutable",
														"name": "ethToReturn",
														"nameLocation": "4091:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1169,
														"src": "4083:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1158,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4083:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1166,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1160,
																	"name": "collateralUSD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1150,
																	"src": "4106:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "316538",
																	"id": 1161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4122:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100000000_by_1",
																		"typeString": "int_const 100000000"
																	},
																	"value": "1e8"
																},
																"src": "4106:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1163,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4105:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1164,
														"name": "ethPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "4129:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4105:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4083:54:9"
											},
											{
												"expression": {
													"id": 1167,
													"name": "ethToReturn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1159,
													"src": "4155:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1127,
												"id": 1168,
												"nodeType": "Return",
												"src": "4148:18:9"
											}
										]
									},
									"functionSelector": "b855fa5b",
									"id": 1170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "estimateWithdrawETH",
									"nameLocation": "3471:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "burnAmount",
												"nameLocation": "3499:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "3491:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3491:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:20:9"
									},
									"returnParameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "3532:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3532:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3531:9:9"
									},
									"scope": 1494,
									"src": "3462:712:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1240,
										"nodeType": "Block",
										"src": "4287:606:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1177,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4316:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4320:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4316:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1176,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 351,
																	"src": "4306:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4306:21:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1180,
																"name": "burnAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1172,
																"src": "4331:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4306:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74205441565354",
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4343:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c777964fa4658a71f8d61a969529a42363944b5db8f79613b59875ba240aae8",
																"typeString": "literal_string \"Insufficient TAVST\""
															},
															"value": "Insufficient TAVST"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c777964fa4658a71f8d61a969529a42363944b5db8f79613b59875ba240aae8",
																"typeString": "literal_string \"Insufficient TAVST\""
															}
														],
														"id": 1175,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4298:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4298:66:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1184,
												"nodeType": "ExpressionStatement",
												"src": "4298:66:9"
											},
											{
												"assignments": [
													1186
												],
												"declarations": [
													{
														"constant": false,
														"id": 1186,
														"mutability": "mutable",
														"name": "ethToReturn",
														"nameLocation": "4385:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1240,
														"src": "4377:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1185,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4377:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1190,
												"initialValue": {
													"arguments": [
														{
															"id": 1188,
															"name": "burnAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "4419:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1187,
														"name": "estimateWithdrawETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "4399:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4399:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4377:53:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1192,
																		"name": "positions",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 933,
																		"src": "4533:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Position_$928_storage_$",
																			"typeString": "mapping(address => struct TAVSStable.Position storage ref)"
																		}
																	},
																	"id": 1195,
																	"indexExpression": {
																		"expression": {
																			"id": 1193,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4543:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4547:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4543:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4533:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Position_$928_storage",
																		"typeString": "struct TAVSStable.Position storage ref"
																	}
																},
																"id": 1196,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4555:13:9",
																"memberName": "collateralETH",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 925,
																"src": "4533:35:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1197,
																"name": "ethToReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1186,
																"src": "4572:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4533:50:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820636f6c6c61746572616c",
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4585:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad",
																"typeString": "literal_string \"Not enough collateral\""
															},
															"value": "Not enough collateral"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e42269280f022b5df6e5eae774a08f38938716498f7a73e2e4f479b5cfe359ad",
																"typeString": "literal_string \"Not enough collateral\""
															}
														],
														"id": 1191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4525:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4525:84:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1201,
												"nodeType": "ExpressionStatement",
												"src": "4525:84:9"
											},
											{
												"expression": {
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1202,
																"name": "positions",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 933,
																"src": "4622:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Position_$928_storage_$",
																	"typeString": "mapping(address => struct TAVSStable.Position storage ref)"
																}
															},
															"id": 1205,
															"indexExpression": {
																"expression": {
																	"id": 1203,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4632:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4636:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4632:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4622:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Position_$928_storage",
																"typeString": "struct TAVSStable.Position storage ref"
															}
														},
														"id": 1206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4644:13:9",
														"memberName": "collateralETH",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 925,
														"src": "4622:35:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1207,
														"name": "ethToReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "4661:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4622:50:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1209,
												"nodeType": "ExpressionStatement",
												"src": "4622:50:9"
											},
											{
												"expression": {
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1210,
																"name": "positions",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 933,
																"src": "4683:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Position_$928_storage_$",
																	"typeString": "mapping(address => struct TAVSStable.Position storage ref)"
																}
															},
															"id": 1213,
															"indexExpression": {
																"expression": {
																	"id": 1211,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4693:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4697:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4693:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4683:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Position_$928_storage",
																"typeString": "struct TAVSStable.Position storage ref"
															}
														},
														"id": 1214,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4705:14:9",
														"memberName": "stablecoinDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 927,
														"src": "4683:36:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1215,
														"name": "burnAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1172,
														"src": "4723:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4683:50:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1217,
												"nodeType": "ExpressionStatement",
												"src": "4683:50:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1219,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4750:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4754:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4750:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1221,
															"name": "burnAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "4762:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1218,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "4744:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4744:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "4744:29:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1230,
															"name": "ethToReturn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "4815:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1226,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4794:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4798:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4794:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1225,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4786:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1224,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4786:8:9",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4786:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4806:8:9",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "4786:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4786:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1232,
												"nodeType": "ExpressionStatement",
												"src": "4786:41:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1234,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4848:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4852:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4848:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1236,
															"name": "burnAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "4860:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1237,
															"name": "ethToReturn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "4872:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1233,
														"name": "Burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "4843:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4843:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1239,
												"nodeType": "EmitStatement",
												"src": "4838:46:9"
											}
										]
									},
									"functionSelector": "7c695cc1",
									"id": 1241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnAndWithdraw",
									"nameLocation": "4242:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "burnAmount",
												"nameLocation": "4266:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "4258:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:20:9"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4287:0:9"
									},
									"scope": 1494,
									"src": "4233:660:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1264,
										"nodeType": "Block",
										"src": "4985:166:9",
										"statements": [
											{
												"assignments": [
													null,
													1247,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1247,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "5003:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1264,
														"src": "4999:9:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1246,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "4999:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1248,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "5015:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$113",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 1249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5025:15:9",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 112,
														"src": "5015:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5015:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4996:46:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1253,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1247,
																"src": "5061:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5069:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5061:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207072696365",
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5072:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7",
																"typeString": "literal_string \"Invalid price\""
															},
															"value": "Invalid price"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7",
																"typeString": "literal_string \"Invalid price\""
															}
														],
														"id": 1252,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5053:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5053:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1258,
												"nodeType": "ExpressionStatement",
												"src": "5053:35:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1261,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "5114:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5106:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1259,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5106:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5106:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1245,
												"id": 1263,
												"nodeType": "Return",
												"src": "5099:21:9"
											}
										]
									},
									"functionSelector": "8e15f473",
									"id": 1265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLatestPrice",
									"nameLocation": "4938:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4952:2:9"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "4976:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4976:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4975:9:9"
									},
									"scope": 1494,
									"src": "4929:222:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1310,
										"nodeType": "Block",
										"src": "5279:279:9",
										"statements": [
											{
												"assignments": [
													1273
												],
												"declarations": [
													{
														"constant": false,
														"id": 1273,
														"mutability": "mutable",
														"name": "ethPrice",
														"nameLocation": "5298:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 1310,
														"src": "5290:16:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1272,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5290:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1276,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1274,
														"name": "getLatestPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1265,
														"src": "5309:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5309:16:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5290:35:9"
											},
											{
												"assignments": [
													1279
												],
												"declarations": [
													{
														"constant": false,
														"id": 1279,
														"mutability": "mutable",
														"name": "pos",
														"nameLocation": "5352:3:9",
														"nodeType": "VariableDeclaration",
														"scope": 1310,
														"src": "5336:19:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Position_$928_memory_ptr",
															"typeString": "struct TAVSStable.Position"
														},
														"typeName": {
															"id": 1278,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1277,
																"name": "Position",
																"nameLocations": [
																	"5336:8:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 928,
																"src": "5336:8:9"
															},
															"referencedDeclaration": 928,
															"src": "5336:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Position_$928_storage_ptr",
																"typeString": "struct TAVSStable.Position"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1283,
												"initialValue": {
													"baseExpression": {
														"id": 1280,
														"name": "positions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "5358:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Position_$928_storage_$",
															"typeString": "mapping(address => struct TAVSStable.Position storage ref)"
														}
													},
													"id": 1282,
													"indexExpression": {
														"id": 1281,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1267,
														"src": "5368:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5358:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Position_$928_storage",
														"typeString": "struct TAVSStable.Position storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5336:37:9"
											},
											{
												"assignments": [
													1285
												],
												"declarations": [
													{
														"constant": false,
														"id": 1285,
														"mutability": "mutable",
														"name": "DECIMALS",
														"nameLocation": "5394:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 1310,
														"src": "5386:16:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1284,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5386:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1293,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 1286,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5405:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1289,
																	"name": "decimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		999
																	],
																	"referencedDeclaration": 999,
																	"src": "5419:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint8_$",
																		"typeString": "function () pure returns (uint8)"
																	}
																},
																"id": 1290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5419:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5411:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1287,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5411:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5411:19:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5405:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5386:44:9"
											},
											{
												"assignments": [
													1295
												],
												"declarations": [
													{
														"constant": false,
														"id": 1295,
														"mutability": "mutable",
														"name": "collateralUSD",
														"nameLocation": "5449:13:9",
														"nodeType": "VariableDeclaration",
														"scope": 1310,
														"src": "5441:21:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1294,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5441:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1307,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1296,
																				"name": "pos",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1279,
																				"src": "5466:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Position_$928_memory_ptr",
																					"typeString": "struct TAVSStable.Position memory"
																				}
																			},
																			"id": 1297,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5470:13:9",
																			"memberName": "collateralETH",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 925,
																			"src": "5466:17:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1298,
																			"name": "ethPrice",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1273,
																			"src": "5486:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5466:28:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1300,
																		"name": "DECIMALS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1285,
																		"src": "5497:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5466:39:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1302,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5465:41:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "316538",
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5509:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100000000_by_1",
																"typeString": "int_const 100000000"
															},
															"value": "1e8"
														},
														"src": "5465:47:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 1305,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5515:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "5465:54:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5441:78:9"
											},
											{
												"expression": {
													"id": 1308,
													"name": "collateralUSD",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1295,
													"src": "5537:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1271,
												"id": 1309,
												"nodeType": "Return",
												"src": "5530:20:9"
											}
										]
									},
									"functionSelector": "e5c338ee",
									"id": 1311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserCollateralUSD",
									"nameLocation": "5214:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5243:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "5235:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5235:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5234:14:9"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "5270:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5270:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5269:9:9"
									},
									"scope": 1494,
									"src": "5205:353:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1347,
										"nodeType": "Block",
										"src": "5687:384:9",
										"statements": [
											{
												"assignments": [
													1320
												],
												"declarations": [
													{
														"constant": false,
														"id": 1320,
														"mutability": "mutable",
														"name": "pos",
														"nameLocation": "5714:3:9",
														"nodeType": "VariableDeclaration",
														"scope": 1347,
														"src": "5698:19:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Position_$928_memory_ptr",
															"typeString": "struct TAVSStable.Position"
														},
														"typeName": {
															"id": 1319,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1318,
																"name": "Position",
																"nameLocations": [
																	"5698:8:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 928,
																"src": "5698:8:9"
															},
															"referencedDeclaration": 928,
															"src": "5698:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Position_$928_storage_ptr",
																"typeString": "struct TAVSStable.Position"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1324,
												"initialValue": {
													"baseExpression": {
														"id": 1321,
														"name": "positions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "5720:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Position_$928_storage_$",
															"typeString": "mapping(address => struct TAVSStable.Position storage ref)"
														}
													},
													"id": 1323,
													"indexExpression": {
														"id": 1322,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1313,
														"src": "5730:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5720:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Position_$928_storage",
														"typeString": "struct TAVSStable.Position storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5698:37:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1325,
															"name": "pos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1320,
															"src": "5750:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Position_$928_memory_ptr",
																"typeString": "struct TAVSStable.Position memory"
															}
														},
														"id": 1326,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5754:14:9",
														"memberName": "stablecoinDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 927,
														"src": "5750:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5772:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5750:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1335,
												"nodeType": "IfStatement",
												"src": "5746:53:9",
												"trueBody": {
													"expression": {
														"expression": {
															"arguments": [
																{
																	"id": 1331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5787:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1330,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5787:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1329,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5782:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5782:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1333,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5796:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5782:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"functionReturnParameters": 1317,
													"id": 1334,
													"nodeType": "Return",
													"src": "5775:24:9"
												}
											},
											{
												"assignments": [
													1337
												],
												"declarations": [
													{
														"constant": false,
														"id": 1337,
														"mutability": "mutable",
														"name": "collateralUSD",
														"nameLocation": "5820:13:9",
														"nodeType": "VariableDeclaration",
														"scope": 1347,
														"src": "5812:21:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1336,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5812:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1341,
												"initialValue": {
													"arguments": [
														{
															"id": 1339,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "5857:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1338,
														"name": "getUserCollateralUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1311,
														"src": "5836:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5836:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5812:50:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1342,
														"name": "collateralUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1337,
														"src": "6029:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"expression": {
															"id": 1343,
															"name": "pos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1320,
															"src": "6045:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Position_$928_memory_ptr",
																"typeString": "struct TAVSStable.Position memory"
															}
														},
														"id": 1344,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6049:14:9",
														"memberName": "stablecoinDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 927,
														"src": "6045:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6029:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1317,
												"id": 1346,
												"nodeType": "Return",
												"src": "6022:41:9"
											}
										]
									},
									"functionSelector": "15a3ba43",
									"id": 1348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCollateralRatio",
									"nameLocation": "5624:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5651:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "5643:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5643:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5642:14:9"
									},
									"returnParameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "5678:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5678:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5677:9:9"
									},
									"scope": 1494,
									"src": "5615:456:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										60
									],
									"body": {
										"id": 1406,
										"nodeType": "Block",
										"src": "6271:555:9",
										"statements": [
											{
												"body": {
													"id": 1397,
													"nodeType": "Block",
													"src": "6325:391:9",
													"statements": [
														{
															"assignments": [
																1370
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1370,
																	"mutability": "mutable",
																	"name": "user",
																	"nameLocation": "6348:4:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1397,
																	"src": "6340:12:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1369,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6340:7:9",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1374,
															"initialValue": {
																"baseExpression": {
																	"id": 1371,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 936,
																	"src": "6355:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 1373,
																"indexExpression": {
																	"id": 1372,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1359,
																	"src": "6361:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6355:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6340:23:9"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1376,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1370,
																			"src": "6401:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1375,
																		"name": "getCollateralRatio",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1348,
																		"src": "6382:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6382:24:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1378,
																	"name": "COLLATERAL_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "6409:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6382:43:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1396,
															"nodeType": "IfStatement",
															"src": "6378:327:9",
															"trueBody": {
																"id": 1395,
																"nodeType": "Block",
																"src": "6427:278:9",
																"statements": [
																	{
																		"expression": {
																			"id": 1382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1380,
																				"name": "upkeepNeeded",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1354,
																				"src": "6500:12:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 1381,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6515:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "6500:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1383,
																		"nodeType": "ExpressionStatement",
																		"src": "6500:19:9"
																	},
																	{
																		"expression": {
																			"id": 1389,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1384,
																				"name": "performData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1356,
																				"src": "6563:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 1387,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1370,
																						"src": "6588:4:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 1385,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "6577:3:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 1386,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "6581:6:9",
																					"memberName": "encode",
																					"nodeType": "MemberAccess",
																					"src": "6577:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 1388,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6577:16:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"src": "6563:30:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1390,
																		"nodeType": "ExpressionStatement",
																		"src": "6563:30:9"
																	},
																	{
																		"expression": {
																			"components": [
																				{
																					"hexValue": "74727565",
																					"id": 1391,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6670:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "true"
																				},
																				{
																					"id": 1392,
																					"name": "performData",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1356,
																					"src": "6676:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"id": 1393,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "6669:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																				"typeString": "tuple(bool,bytes memory)"
																			}
																		},
																		"functionReturnParameters": 1357,
																		"id": 1394,
																		"nodeType": "Return",
																		"src": "6662:26:9"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1362,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1359,
														"src": "6302:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1363,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "6306:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6312:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6306:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6302:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1398,
												"initializationExpression": {
													"assignments": [
														1359
													],
													"declarations": [
														{
															"constant": false,
															"id": 1359,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6295:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1398,
															"src": "6287:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1358,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6287:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1361,
													"initialValue": {
														"hexValue": "30",
														"id": 1360,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6299:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6287:13:9"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6320:3:9",
														"subExpression": {
															"id": 1366,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "6320:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1368,
													"nodeType": "ExpressionStatement",
													"src": "6320:3:9"
												},
												"nodeType": "ForStatement",
												"src": "6282:434:9"
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "66616c7365",
															"id": 1399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6801:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														{
															"arguments": [
																{
																	"hexValue": "",
																	"id": 1402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6814:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	},
																	"value": ""
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	}
																],
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6808:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1400,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "6808:5:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6808:9:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"id": 1404,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6800:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"functionReturnParameters": 1357,
												"id": 1405,
												"nodeType": "Return",
												"src": "6793:25:9"
											}
										]
									},
									"functionSelector": "6e04ff0d",
									"id": 1407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkUpkeep",
									"nameLocation": "6165:11:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1352,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6208:8:9"
									},
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "6178:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1349,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6178:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6177:16:9"
									},
									"returnParameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "upkeepNeeded",
												"nameLocation": "6231:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "6226:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1353,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6226:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "performData",
												"nameLocation": "6258:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "6245:24:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1355,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6245:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6225:45:9"
									},
									"scope": 1494,
									"src": "6156:670:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										66
									],
									"body": {
										"id": 1479,
										"nodeType": "Block",
										"src": "6957:693:9",
										"statements": [
											{
												"assignments": [
													1414
												],
												"declarations": [
													{
														"constant": false,
														"id": 1414,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "6976:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1479,
														"src": "6968:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1413,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6968:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1422,
												"initialValue": {
													"arguments": [
														{
															"id": 1417,
															"name": "performData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "6994:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"components": [
																{
																	"id": 1419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7008:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1418,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7008:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 1420,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7007:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															},
															{
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															}
														],
														"expression": {
															"id": 1415,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "6983:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1416,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6987:6:9",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "6983:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6983:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6968:49:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1425,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1414,
																		"src": "7055:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1424,
																	"name": "getCollateralRatio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1348,
																	"src": "7036:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7036:24:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1427,
																"name": "COLLATERAL_RATIO",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "7063:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7036:43:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55736572206e6f74206c6971756964617461626c65",
															"id": 1429,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7081:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d1048d9dc1318c819f2a5bff283d5a7be63fad68260777f8e26c6a69616e566c",
																"typeString": "literal_string \"User not liquidatable\""
															},
															"value": "User not liquidatable"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d1048d9dc1318c819f2a5bff283d5a7be63fad68260777f8e26c6a69616e566c",
																"typeString": "literal_string \"User not liquidatable\""
															}
														],
														"id": 1423,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7028:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7028:77:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1431,
												"nodeType": "ExpressionStatement",
												"src": "7028:77:9"
											},
											{
												"assignments": [
													1434
												],
												"declarations": [
													{
														"constant": false,
														"id": 1434,
														"mutability": "mutable",
														"name": "positionUser",
														"nameLocation": "7175:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 1479,
														"src": "7159:28:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Position_$928_memory_ptr",
															"typeString": "struct TAVSStable.Position"
														},
														"typeName": {
															"id": 1433,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1432,
																"name": "Position",
																"nameLocations": [
																	"7159:8:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 928,
																"src": "7159:8:9"
															},
															"referencedDeclaration": 928,
															"src": "7159:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Position_$928_storage_ptr",
																"typeString": "struct TAVSStable.Position"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1438,
												"initialValue": {
													"baseExpression": {
														"id": 1435,
														"name": "positions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "7190:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Position_$928_storage_$",
															"typeString": "mapping(address => struct TAVSStable.Position storage ref)"
														}
													},
													"id": 1437,
													"indexExpression": {
														"id": 1436,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "7200:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7190:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Position_$928_storage",
														"typeString": "struct TAVSStable.Position storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7159:46:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1440,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1414,
															"src": "7248:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1441,
																"name": "positionUser",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1434,
																"src": "7254:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Position_$928_memory_ptr",
																	"typeString": "struct TAVSStable.Position memory"
																}
															},
															"id": 1442,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7267:14:9",
															"memberName": "stablecoinDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 927,
															"src": "7254:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1439,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "7242:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7242:40:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1444,
												"nodeType": "ExpressionStatement",
												"src": "7242:40:9"
											},
											{
												"assignments": [
													1446
												],
												"declarations": [
													{
														"constant": false,
														"id": 1446,
														"mutability": "mutable",
														"name": "collateralETH",
														"nameLocation": "7341:13:9",
														"nodeType": "VariableDeclaration",
														"scope": 1479,
														"src": "7333:21:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1445,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7333:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1451,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1447,
															"name": "positions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "7357:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Position_$928_storage_$",
																"typeString": "mapping(address => struct TAVSStable.Position storage ref)"
															}
														},
														"id": 1449,
														"indexExpression": {
															"id": 1448,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1414,
															"src": "7367:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7357:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Position_$928_storage",
															"typeString": "struct TAVSStable.Position storage ref"
														}
													},
													"id": 1450,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7373:13:9",
													"memberName": "collateralETH",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 925,
													"src": "7357:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7333:53:9"
											},
											{
												"expression": {
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1452,
																"name": "positions",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 933,
																"src": "7454:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Position_$928_storage_$",
																	"typeString": "mapping(address => struct TAVSStable.Position storage ref)"
																}
															},
															"id": 1454,
															"indexExpression": {
																"id": 1453,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1414,
																"src": "7464:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7454:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Position_$928_storage",
																"typeString": "struct TAVSStable.Position storage ref"
															}
														},
														"id": 1455,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7470:13:9",
														"memberName": "collateralETH",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 925,
														"src": "7454:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1456,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7486:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7454:33:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1458,
												"nodeType": "ExpressionStatement",
												"src": "7454:33:9"
											},
											{
												"expression": {
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1459,
																"name": "positions",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 933,
																"src": "7498:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Position_$928_storage_$",
																	"typeString": "mapping(address => struct TAVSStable.Position storage ref)"
																}
															},
															"id": 1461,
															"indexExpression": {
																"id": 1460,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1414,
																"src": "7508:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7498:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Position_$928_storage",
																"typeString": "struct TAVSStable.Position storage ref"
															}
														},
														"id": 1462,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7514:14:9",
														"memberName": "stablecoinDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 927,
														"src": "7498:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1463,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7531:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7498:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1465,
												"nodeType": "ExpressionStatement",
												"src": "7498:34:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1471,
															"name": "collateralETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "7580:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1468,
																	"name": "liquidationAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 923,
																	"src": "7551:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7543:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1466,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7543:8:9",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7543:27:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7571:8:9",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "7543:36:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7543:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1473,
												"nodeType": "ExpressionStatement",
												"src": "7543:51:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1475,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1414,
															"src": "7622:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1476,
															"name": "collateralETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "7628:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1474,
														"name": "Liquidated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "7611:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7611:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1478,
												"nodeType": "EmitStatement",
												"src": "7606:36:9"
											}
										]
									},
									"functionSelector": "4585e33b",
									"id": 1480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "performUpkeep",
									"nameLocation": "6897:13:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1411,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6948:8:9"
									},
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "performData",
												"nameLocation": "6926:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "6911:26:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1408,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6911:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6910:28:9"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6957:0:9"
									},
									"scope": 1494,
									"src": "6888:762:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1488,
										"nodeType": "Block",
										"src": "7779:31:9",
										"statements": [
											{
												"expression": {
													"id": 1486,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 936,
													"src": "7797:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 1485,
												"id": 1487,
												"nodeType": "Return",
												"src": "7790:12:9"
											}
										]
									},
									"functionSelector": "00ce8e3e",
									"id": 1489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUsers",
									"nameLocation": "7727:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7735:2:9"
									},
									"returnParameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "7761:16:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1482,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "7761:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1483,
													"nodeType": "ArrayTypeName",
													"src": "7761:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7760:18:9"
									},
									"scope": 1494,
									"src": "7718:92:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1492,
										"nodeType": "Block",
										"src": "7894:2:9",
										"statements": []
									},
									"id": 1493,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7874:2:9"
									},
									"returnParameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7894:0:9"
									},
									"scope": 1494,
									"src": "7867:29:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1495,
							"src": "313:7650:9",
							"usedErrors": [
								125,
								130,
								135,
								144,
								149,
								154
							],
							"usedEvents": [
								777,
								786,
								948,
								956,
								962
							]
						}
					],
					"src": "33:7934:9"
				},
				"id": 9
			}
		}
	}
}